)]}'
{"version": 3, "sources": ["/web/static/tests/ignore_missing_deps_start.js", "/base/static/tests/test_ir_model_fields_translation.js", "/web/static/tests/helpers/cleanup.js", "/web/static/tests/helpers/utils.js", "/web/static/tests/utils.js", "/mail/static/tests/tours/activity_date_format_tour.js", "/mail/static/tests/tours/discuss_channel_as_guest_tour.js", "/mail/static/tests/tours/discuss_channel_public_tour.js", "/mail/static/tests/tours/discuss_channel_tour.js", "/mail/static/tests/tours/mail_activity_schedule_from_chatter.js", "/mail/static/tests/tours/mail_composer_test_tour.js", "/mail/static/tests/tours/mail_message_load_order_tour.js", "/mail/static/tests/tours/mail_template_dynamic_placeholder_tour.js", "/mail/static/tests/tours/user_modify_own_profile_tour.js", "/portal/static/tests/tours/portal.js", "/account/static/tests/tours/tax_group_tests.js", "/sale/static/tests/tours/sale_signature.js", "/stock/static/tests/tours/stock_picking_tour.js", "/stock/static/tests/tours/stock_report_tests.js", "/barcodes/static/tests/helpers.js", "/point_of_sale/static/tests/tours/BarcodeScanning.tour.js", "/point_of_sale/static/tests/tours/Chrome.tour.js", "/point_of_sale/static/tests/tours/ChromeWithoutCashMovePermission.tour.js", "/point_of_sale/static/tests/tours/FixedPriceNegativeQty.tour.js", "/point_of_sale/static/tests/tours/PaymentScreen.tour.js", "/point_of_sale/static/tests/tours/PosComboTour.js", "/point_of_sale/static/tests/tours/ProductConfigurator.tour.js", "/point_of_sale/static/tests/tours/ProductScreen.tour.js", "/point_of_sale/static/tests/tours/ReceiptScreen.tour.js", "/point_of_sale/static/tests/tours/TicketScreen.tour.js", "/point_of_sale/static/tests/tours/acceptance_tour.js", "/point_of_sale/static/tests/tours/helpers/ChromeTourMethods.js", "/point_of_sale/static/tests/tours/helpers/ComboPopupMethods.js", "/point_of_sale/static/tests/tours/helpers/ErrorPopupTourMethods.js", "/point_of_sale/static/tests/tours/helpers/NumberPopupTourMethods.js", "/point_of_sale/static/tests/tours/helpers/NumpadTourMethods.js", "/point_of_sale/static/tests/tours/helpers/PartnerListScreenTourMethods.js", "/point_of_sale/static/tests/tours/helpers/PaymentScreenTourMethods.js", "/point_of_sale/static/tests/tours/helpers/ProductConfiguratorTourMethods.js", "/point_of_sale/static/tests/tours/helpers/ProductScreenTourMethods.js", "/point_of_sale/static/tests/tours/helpers/ReceiptScreenTourMethods.js", "/point_of_sale/static/tests/tours/helpers/SelectionPopupTourMethods.js", "/point_of_sale/static/tests/tours/helpers/TextAreaPopupTourMethods.js", "/point_of_sale/static/tests/tours/helpers/TextInputPopupTourMethods.js", "/point_of_sale/static/tests/tours/helpers/TicketScreenTourMethods.js", "/point_of_sale/static/tests/tours/helpers/generic_components/OrderWidgetMethods.js", "/point_of_sale/static/tests/tours/helpers/utils.js", "/point_of_sale/static/tests/tours/pricelist_tour.js", "/contacts/static/tests/tours/debug_menu_set_defaults.js", "/mass_mailing/static/tests/tours/mailing_campaign.js", "/mass_mailing/static/tests/tours/mailing_editor.js", "/mass_mailing/static/tests/tours/mailing_editor_theme.js", "/mass_mailing/static/tests/tours/mailing_portal_unsubscribe_from_document.js", "/mass_mailing/static/tests/tours/mailing_portal_unsubscribe_from_list.js", "/mass_mailing/static/tests/tours/mailing_portal_unsubscribe_from_my.js", "/mass_mailing/static/tests/tours/mass_mailing_code_view.js", "/mass_mailing/static/tests/tours/snippets_mailing_menu_tabs.js", "/mass_mailing/static/tests/tours/snippets_mailing_menu_toolbar.js", "/mass_mailing/static/tests/tours/snippets_mailing_menu_toolbar_mobile.js", "/hr/static/tests/tours/hr_employee_flow.js", "/hr/static/tests/tours/user_modify_own_profile_tour.js", "/calendar/static/tests/tours/calendar_tour.js", "/mass_mailing_sms/static/tests/tours/mailing_activities_split.js", "/hr_skills/static/tests/tours/skills_tour.js", "/pos_sale/static/tests/helpers/ProductScreenTourMethods.js", "/pos_sale/static/tests/helpers/ReceiptScreenTourMethods.js", "/pos_sale/static/tests/tours/PosSaleTour.js", "/auth_totp/static/tests/totp_flow.js", "/auth_totp_mail/static/tests/totp_flow.js", "/auth_totp_portal/static/tests/totp_portal.js", "/l10n_es_pos/static/tests/tours/helpers/receipt_helpers.js", "/l10n_es_pos/static/tests/tours/spanish_pos_tour.js", "/pos_hr/static/tests/tours/PosHrTour.js", "/pos_hr/static/tests/tours/PosHrTourMethods.js", "/pos_online_payment/static/tests/tours/OnlinePayment.tour.js", "/pos_online_payment/static/tests/tours/helpers/OnlinePaymentPopupTourMethods.js", "/web/static/tests/ignore_missing_deps_stop.js"], "mappings": "AAAA;;;;;AAAA;AACA;AACA;AACA;AACA;ACJA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACjnksBA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC3CA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC5BA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACzlGA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvhIA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACtlLA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACnCA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACjjIA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AChDA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC9KA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC/EA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACXA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvzHA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AChzrvEA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACjDA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC7BA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACnEA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACnBA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACrjSA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACtFA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACjbztRA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvEA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC7DA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC1DA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AClzlEA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACrDA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC9EA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACrEA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC9BA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC/BA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACtKA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvtrlVA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC5EA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC1HA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACtBA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACnjHA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACpEA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC3FA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC9DA;;;;;AAAA;AACA", "sourcesContent": ["// This module has for sole purpose to mark all odoo modules defined between it\n// and ignore_missing_deps_stop as ignored for missing dependency errors.\n// see the template conditional_assets_tests to understand how it's used.\nwindow.__odooIgnoreMissingDependencies = true;\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\nfunction checkLoginColumn(translation) {\n    return [\n        stepUtils.showAppsMenuItem(), {\n            content: \"Settings\",\n            trigger: 'a[data-menu-xmlid=\"base.menu_administration\"]',\n            run: 'click',\n        }, {\n            content: \"Open Users & Companies\",\n            trigger: '[data-menu-xmlid=\"base.menu_users\"]',\n            run: \"click\",\n        }, {\n            content: \"Open Users\",\n            trigger: '[data-menu-xmlid=\"base.menu_action_res_users\"]',\n            run: \"click\",\n        }, {\n            content: `Login column should be ${translation}`,\n            trigger: `[data-name=\"login\"] span:contains(\"${translation}\")`,\n            isCheck: true,\n        }\n    ]\n}\n\nregistry.category(\"web_tour.tours\").add('ir_model_fields_translation_en_tour', {\n    test: true,\n    url: '/web',\n    steps: () => checkLoginColumn('Login')\n});\n\nregistry.category(\"web_tour.tours\").add('ir_model_fields_translation_en_tour2', {\n    test: true,\n    url: '/web',\n    steps: () => checkLoginColumn('Login2')\n});\n\nregistry.category(\"web_tour.tours\").add('ir_model_fields_translation_fr_tour', {\n    test: true,\n    url: '/web',\n    steps: () => checkLoginColumn('Identifiant')\n});\n\nregistry.category(\"web_tour.tours\").add('ir_model_fields_translation_fr_tour2', {\n    test: true,\n    url: '/web',\n    steps: () => checkLoginColumn('Identifiant2')\n});\n", "/** @odoo-module **/\n\n// -----------------------------------------------------------------------------\n// Cleanup\n// -----------------------------------------------------------------------------\n\nconst cleanups = [];\n\n/**\n * Register a cleanup callback that will be executed whenever the current test\n * is done.\n *\n * - the cleanups will be executed in reverse order\n * - they will be executed even if the test fails/crashes\n *\n * @param {Function} callback\n */\nexport function registerCleanup(callback) {\n    cleanups.push(callback);\n}\n\nif (window.QUnit) {\n    QUnit.on(\"OdooAfterTestHook\", (info) => {\n        if (QUnit.config.debug) {\n            return;\n        }\n        let cleanup;\n        // note that this calls the cleanup callbacks in reverse order!\n        while ((cleanup = cleanups.pop())) {\n            try {\n                cleanup(info);\n            } catch (error) {\n                console.error(error);\n            }\n        }\n    });\n\n    // -----------------------------------------------------------------------------\n    // Check leftovers\n    // -----------------------------------------------------------------------------\n\n    /**\n     * List of elements tolerated in the body after a test. The property \"keep\"\n     * prevents the element from being removed (typically: qunit suite elements).\n     */\n    const validElements = [\n        // always in the body:\n        { tagName: \"DIV\", attr: \"id\", value: \"qunit\", keep: true },\n        { tagName: \"DIV\", attr: \"id\", value: \"qunit-fixture\", keep: true },\n        // shouldn't be in the body after a test but are tolerated:\n        { tagName: \"SCRIPT\", attr: \"id\", value: \"\" },\n        { tagName: \"DIV\", attr: \"class\", value: \"o_notification_manager\" },\n        { tagName: \"DIV\", attr: \"class\", value: \"tooltip fade bs-tooltip-auto\" },\n        { tagName: \"DIV\", attr: \"class\", value: \"tooltip fade bs-tooltip-auto show\" },\n        { tagName: \"DIV\", attr: \"class\", value: \"tooltip tooltip-field-info fade bs-tooltip-auto\" },\n        {\n            tagName: \"DIV\",\n            attr: \"class\",\n            value: \"tooltip tooltip-field-info fade bs-tooltip-auto show\",\n        },\n        { tagName: \"SPAN\", attr: \"class\", value: \"select2-hidden-accessible\" },\n\n        // Due to a Document Kanban bug (already present in 12.0)\n        { tagName: \"DIV\", attr: \"class\", value: \"ui-helper-hidden-accessible\" },\n        {\n            tagName: \"UL\",\n            attr: \"class\",\n            value: \"ui-menu ui-widget ui-widget-content ui-autocomplete ui-front\",\n        },\n        {\n            tagName: \"UL\",\n            attr: \"class\",\n            value: \"ui-menu ui-widget ui-widget-content ui-autocomplete dropdown-menu ui-front\", // many2ones\n        },\n    ];\n\n    /**\n     * After each test, we check that there is no leftover in the DOM.\n     *\n     * Note: this event is not QUnit standard, we added it for this specific use case.\n     * As a payload, an object with keys 'moduleName' and 'testName' is provided. It\n     * is used to indicate the test that left elements in the DOM, when it happens.\n     */\n    QUnit.on(\"OdooAfterTestHook\", function (info) {\n        if (QUnit.config.debug) {\n            return;\n        }\n        const failed = info.testReport.getStatus() === \"failed\";\n        const toRemove = [];\n        // check for leftover elements in the body\n        for (const bodyChild of document.body.children) {\n            const tolerated = validElements.find(\n                (e) => e.tagName === bodyChild.tagName && bodyChild.getAttribute(e.attr) === e.value\n            );\n            if (!failed && !tolerated) {\n                QUnit.pushFailure(\n                    `Body still contains undesirable elements:\\n${bodyChild.outerHTML}`\n                );\n            }\n            if (!tolerated || !tolerated.keep) {\n                toRemove.push(bodyChild);\n            }\n        }\n        // cleanup leftovers in #qunit-fixture\n        const qunitFixture = document.getElementById(\"qunit-fixture\");\n        if (qunitFixture.children.length) {\n            toRemove.push(...qunitFixture.children);\n        }\n        // remove unwanted elements if not in debug\n        for (const el of toRemove) {\n            el.remove();\n        }\n        document.body.classList.remove(\"modal-open\");\n    });\n}\n", "/** @odoo-module **/\n\nimport { templates } from \"@web/core/assets\";\nimport { browser } from \"@web/core/browser/browser\";\nimport { isMacOS } from \"@web/core/browser/feature_detection\";\nimport { download } from \"@web/core/network/download\";\nimport { Deferred } from \"@web/core/utils/concurrency\";\nimport { patch } from \"@web/core/utils/patch\";\nimport { isVisible } from \"@web/core/utils/ui\";\nimport { _t } from \"@web/core/l10n/translation\";\nimport { registerCleanup } from \"./cleanup\";\n\nimport {\n    App,\n    onError,\n    onMounted,\n    onPatched,\n    onRendered,\n    onWillDestroy,\n    onWillPatch,\n    onWillRender,\n    onWillStart,\n    onWillUnmount,\n    onWillUpdateProps,\n    useComponent,\n} from \"@odoo/owl\";\n\n/**\n * @typedef {keyof HTMLElementEventMap | keyof WindowEventMap} EventType\n *\n * @typedef {Side | `${Side}-${Side}` | { x?: number, y?: number }} Position\n *\n * @typedef {\"bottom\" | \"left\" | \"right\" | \"top\"} Side\n *\n * @typedef TriggerEventOptions\n * @property {boolean} [skipVisibilityCheck=false]\n * @property {boolean} [sync=false]\n */\n\n/**\n * Patch the native Date object\n *\n * Note that it will be automatically unpatched at the end of the test\n *\n * @param {number} [year]\n * @param {number} [month]\n * @param {number} [day]\n * @param {number} [hours]\n * @param {number} [minutes]\n * @param {number} [seconds]\n * @param {number} [ms=0]\n */\nexport function patchDate(year, month, day, hours, minutes, seconds, ms = 0) {\n    var RealDate = window.Date;\n    var actualDate = new RealDate();\n\n    // By default, RealDate uses the browser offset, so we must replace it with the offset fixed in luxon.\n    var fakeDate = new RealDate(year, month, day, hours, minutes, seconds, ms);\n    if (!(luxon.Settings.defaultZone instanceof luxon.FixedOffsetZone)) {\n        throw new Error(\"luxon.Settings.defaultZone must be a FixedOffsetZone\");\n    }\n    const browserOffset = -fakeDate.getTimezoneOffset();\n    const patchedOffset = luxon.Settings.defaultZone.offset();\n    const offsetDiff = patchedOffset - browserOffset;\n    const correctedMinutes = fakeDate.getMinutes() - offsetDiff;\n    fakeDate.setMinutes(correctedMinutes);\n\n    var timeInterval = actualDate.getTime() - fakeDate.getTime();\n\n    // eslint-disable-next-line no-global-assign\n    window.Date = (function (NativeDate) {\n        function Date(Y, M, D, h, m, s, ms) {\n            var length = arguments.length;\n            let date;\n            if (arguments.length > 0) {\n                date =\n                    length == 1 && String(Y) === Y // isString(Y)\n                        ? // We explicitly pass it through parse:\n                          new NativeDate(Date.parse(Y))\n                        : // We have to manually make calls depending on argument\n                        // length here\n                        length >= 7\n                        ? new NativeDate(Y, M, D, h, m, s, ms)\n                        : length >= 6\n                        ? new NativeDate(Y, M, D, h, m, s)\n                        : length >= 5\n                        ? new NativeDate(Y, M, D, h, m)\n                        : length >= 4\n                        ? new NativeDate(Y, M, D, h)\n                        : length >= 3\n                        ? new NativeDate(Y, M, D)\n                        : length >= 2\n                        ? new NativeDate(Y, M)\n                        : length >= 1\n                        ? new NativeDate(Y)\n                        : new NativeDate();\n                // Prevent mixups with unfixed Date object\n                date.constructor = Date;\n                return date;\n            } else {\n                date = new NativeDate();\n                var time = date.getTime();\n                time -= timeInterval;\n                date.setTime(time);\n                return date;\n            }\n        }\n\n        // Copy any custom methods a 3rd party library may have added\n        for (var key in NativeDate) {\n            Date[key] = NativeDate[key];\n        }\n\n        // Copy \"native\" methods explicitly; they may be non-enumerable\n        // exception: 'now' uses fake date as reference\n        Date.now = function () {\n            var date = new NativeDate();\n            var time = date.getTime();\n            time -= timeInterval;\n            return time;\n        };\n        Date.UTC = NativeDate.UTC;\n        Date.prototype = NativeDate.prototype;\n        Date.prototype.constructor = Date;\n\n        // Upgrade Date.parse to handle simplified ISO 8601 strings\n        Date.parse = NativeDate.parse;\n        return Date;\n    })(Date);\n\n    registerCleanup(() => {\n        window.Date = RealDate;\n    });\n}\n\n/**\n * Applies a fixed time zone to luxon based on an offset to the UTC time zone.\n *\n * @param {number} offset the number of minutes ahead or behind the UTC time zone\n *                          +120 => UTC+2\n *                          -120 => UTC-2\n */\nexport function patchTimeZone(offset) {\n    patchWithCleanup(luxon.Settings, { defaultZone: luxon.FixedOffsetZone.instance(offset) });\n}\n\n/**\n *\n * @param {Object} obj object to patch\n * @param {Object} patchValue the actual patch description\n */\nexport function patchWithCleanup(obj, patchValue) {\n    const unpatch = patch(obj, patchValue);\n    registerCleanup(() => {\n        unpatch();\n    });\n}\n\n/**\n * @returns {Element}\n */\nexport function getFixture() {\n    if (!window.QUnit) {\n        return document;\n    }\n    if (QUnit.config.debug) {\n        return document.body;\n    } else {\n        return document.getElementById(\"qunit-fixture\");\n    }\n}\n\nexport async function nextTick() {\n    await new Promise((resolve) => window.requestAnimationFrame(resolve));\n    await new Promise((resolve) => setTimeout(resolve));\n}\n\nexport function makeDeferred() {\n    return new Deferred();\n}\n\nexport function findElement(el, selector) {\n    let target = el;\n    if (selector) {\n        const els = el.querySelectorAll(selector);\n        if (els.length === 0) {\n            throw new Error(`No element found (selector: ${selector})`);\n        }\n        if (els.length > 1) {\n            throw new Error(`Found ${els.length} elements, instead of 1 (selector: ${selector})`);\n        }\n        target = els[0];\n    }\n    return target;\n}\n\n//-----------------------------------------------------------------------------\n// Event init attributes mappers\n//-----------------------------------------------------------------------------\n\n/** @param {EventInit} [args] */\nconst mapBubblingEvent = (args) => ({ ...args, bubbles: true });\n\n/** @param {EventInit} [args] */\nconst mapNonBubblingEvent = (args) => ({ ...args, bubbles: false });\n\n/** @param {EventInit} [args={}] */\nconst mapBubblingPointerEvent = (args = {}) => ({\n    clientX: args.pageX,\n    clientY: args.pageY,\n    ...args,\n    bubbles: true,\n    cancelable: true,\n    view: window,\n});\n\n/** @param {EventInit} [args] */\nconst mapNonBubblingPointerEvent = (args) => ({\n    ...mapBubblingPointerEvent(args),\n    bubbles: false,\n    cancelable: false,\n});\n\n/** @param {EventInit} [args={}] */\nconst mapCancelableTouchEvent = (args = {}) => ({\n    ...args,\n    bubbles: true,\n    cancelable: true,\n    composed: true,\n    rotation: 0.0,\n    touches: args.touches ? [...args.touches.map((e) => new Touch(e))] : undefined,\n    view: window,\n    zoom: 1.0,\n});\n\n/** @param {EventInit} [args] */\nconst mapNonCancelableTouchEvent = (args) => ({\n    ...mapCancelableTouchEvent(args),\n    cancelable: false,\n});\n\n/** @param {EventInit} [args] */\nconst mapKeyboardEvent = (args) => ({\n    ...args,\n    bubbles: true,\n    cancelable: true,\n});\n\n/**\n * @template {typeof Event} T\n * @param {EventType} eventType\n * @returns {[T, (attrs: EventInit) => EventInit]}\n */\nconst getEventConstructor = (eventType) => {\n    switch (eventType) {\n        // Mouse events\n        case \"auxclick\":\n        case \"click\":\n        case \"contextmenu\":\n        case \"dblclick\":\n        case \"mousedown\":\n        case \"mouseup\":\n        case \"mousemove\":\n        case \"mouseover\":\n        case \"mouseout\": {\n            return [MouseEvent, mapBubblingPointerEvent];\n        }\n        case \"mouseenter\":\n        case \"mouseleave\": {\n            return [MouseEvent, mapNonBubblingPointerEvent];\n        }\n        // Pointer events\n        case \"pointerdown\":\n        case \"pointerup\":\n        case \"pointermove\":\n        case \"pointerover\":\n        case \"pointerout\": {\n            return [PointerEvent, mapBubblingPointerEvent];\n        }\n        case \"pointerenter\":\n        case \"pointerleave\": {\n            return [PointerEvent, mapNonBubblingPointerEvent];\n        }\n        // Focus events\n        case \"focusin\": {\n            return [FocusEvent, mapBubblingEvent];\n        }\n        case \"focus\":\n        case \"blur\": {\n            return [FocusEvent, mapNonBubblingEvent];\n        }\n        // Clipboard events\n        case \"cut\":\n        case \"copy\":\n        case \"paste\": {\n            return [ClipboardEvent, mapBubblingEvent];\n        }\n        // Keyboard events\n        case \"keydown\":\n        case \"keypress\":\n        case \"keyup\": {\n            return [KeyboardEvent, mapKeyboardEvent];\n        }\n        // Drag events\n        case \"drag\":\n        case \"dragend\":\n        case \"dragenter\":\n        case \"dragstart\":\n        case \"dragleave\":\n        case \"dragover\":\n        case \"drop\": {\n            return [DragEvent, mapBubblingEvent];\n        }\n        // Input events\n        case \"input\": {\n            return [InputEvent, mapBubblingEvent];\n        }\n        // Composition events\n        case \"compositionstart\":\n        case \"compositionend\": {\n            return [CompositionEvent, mapBubblingEvent];\n        }\n        // UI events\n        case \"scroll\": {\n            return [UIEvent, mapNonBubblingEvent];\n        }\n        // Touch events\n        case \"touchstart\":\n        case \"touchend\":\n        case \"touchmove\": {\n            return [TouchEvent, mapCancelableTouchEvent];\n        }\n        case \"touchcancel\": {\n            return [TouchEvent, mapNonCancelableTouchEvent];\n        }\n        // Default: base Event constructor\n        default: {\n            return [Event, mapBubblingEvent];\n        }\n    }\n};\n\n/**\n * @template {EventType} T\n * @param {Element} el\n * @param {string | null | undefined | false} selector\n * @param {T} eventType\n * @param {EventInit} [eventInit]\n * @param {TriggerEventOptions} [options={}]\n * @returns {GlobalEventHandlersEventMap[T] | Promise<GlobalEventHandlersEventMap[T]>}\n */\nexport function triggerEvent(el, selector, eventType, eventInit, options = {}) {\n    const errors = [];\n    const target = findElement(el, selector);\n\n    // Error handling\n    if (typeof eventType !== \"string\") {\n        errors.push(\"event type must be a string\");\n    }\n    if (!target) {\n        errors.push(\"cannot find target\");\n    } else if (!options.skipVisibilityCheck && !isVisible(target)) {\n        errors.push(\"target is not visible\");\n    }\n    if (errors.length) {\n        throw new Error(\n            `Cannot trigger event${eventType ? ` \"${eventType}\"` : \"\"}${\n                selector ? ` (with selector \"${selector}\")` : \"\"\n            }: ${errors.join(\" and \")}`\n        );\n    }\n\n    // Actual dispatch\n    const [Constructor, processParams] = getEventConstructor(eventType);\n    const event = new Constructor(eventType, processParams(eventInit));\n    target.dispatchEvent(event);\n\n    if (window.QUnit && QUnit.config.debug) {\n        const group = `%c[${event.type.toUpperCase()}]`;\n        console.groupCollapsed(group, \"color: #b52c9b\");\n        console.log(target, event);\n        console.groupEnd(group, \"color: #b52c9b\");\n    }\n\n    if (options.sync) {\n        return event;\n    } else {\n        return nextTick().then(() => event);\n    }\n}\n\n/**\n * @param {Element} el\n * @param {string | null | undefined | false} selector\n * @param {(EventType | [EventType, EventInit])[]} [eventDefs]\n * @param {TriggerEventOptions} [options={}]\n */\nexport function triggerEvents(el, selector, eventDefs, options = {}) {\n    const events = [...eventDefs].map((eventDef) => {\n        const [eventType, eventInit] = Array.isArray(eventDef) ? eventDef : [eventDef, {}];\n        return triggerEvent(el, selector, eventType, eventInit, options);\n    });\n    if (options.sync) {\n        return events;\n    } else {\n        return nextTick().then(() => events);\n    }\n}\n\n/**\n * Triggers a scroll event on the given target\n *\n * If the target cannot be scrolled or an axis has reached\n * the end of the scrollable area, the event can be transmitted\n * to its nearest parent until it can be triggered\n *\n * @param {Element} target target of the scroll event\n * @param {Object} coordinates\n * @param {number} coordinates.left coordinates to scroll horizontally\n * @param {number} coordinates.top coordinates to scroll vertically\n * @param {boolean} canPropagate states if the scroll can propagate to a scrollable parent\n */\nexport async function triggerScroll(\n    target,\n    coordinates = { left: null, top: null },\n    canPropagate = true\n) {\n    const isScrollable =\n        (target.scrollHeight > target.clientHeight && target.clientHeight > 0) ||\n        (target.scrollWidth > target.clientWidth && target.clientWidth > 0);\n    if (!isScrollable && !canPropagate) {\n        return;\n    }\n    if (isScrollable) {\n        const canScrollFrom = {\n            left:\n                coordinates.left > target.scrollLeft\n                    ? target.scrollLeft + target.clientWidth < target.scrollWidth\n                    : target.scrollLeft > 0,\n            top:\n                coordinates.top > target.scrollTop\n                    ? target.scrollTop + target.clientHeight < target.scrollHeight\n                    : target.scrollTop > 0,\n        };\n        const scrollCoordinates = {};\n        Object.entries(coordinates).forEach(([key, value]) => {\n            if (value !== null && canScrollFrom[key]) {\n                scrollCoordinates[key] = value;\n                delete coordinates[key];\n            }\n        });\n        target.scrollTo(scrollCoordinates);\n        await triggerEvent(target, null, \"scroll\");\n        if (!canPropagate || !Object.entries(coordinates).length) {\n            return;\n        }\n    }\n    target.parentElement\n        ? triggerScroll(target.parentElement, coordinates)\n        : triggerEvent(window, null, \"scroll\");\n    await nextTick();\n}\n\nexport function click(\n    el,\n    selector,\n    { mouseEventInit = {}, skipDisabledCheck = false, skipVisibilityCheck = false } = {}\n) {\n    if (!skipDisabledCheck && el.disabled) {\n        throw new Error(\"Can't click on a disabled button\");\n    }\n    return triggerEvents(\n        el,\n        selector,\n        [\"pointerdown\", \"mousedown\", \"focus\", \"pointerup\", \"mouseup\", [\"click\", mouseEventInit]],\n        { skipVisibilityCheck }\n    );\n}\n\nexport function clickCreate(htmlElement) {\n    if (\n        htmlElement.querySelectorAll(\n            \".o_control_panel_main_buttons .d-none.d-xl-inline-flex .o_form_button_create\"\n        ).length\n    ) {\n        return click(\n            htmlElement,\n            \".o_control_panel_main_buttons .d-none.d-xl-inline-flex .o_form_button_create\"\n        );\n    } else if (\n        htmlElement.querySelectorAll(\n            \".o_control_panel_main_buttons .d-none.d-xl-inline-flex .o_list_button_create\"\n        ).length\n    ) {\n        return click(\n            htmlElement,\n            \".o_control_panel_main_buttons .d-none.d-xl-inline-flex .o_list_button_create\"\n        );\n    } else {\n        throw new Error(\"No edit button found to be clicked.\");\n    }\n}\n\nexport function clickEdit(htmlElement) {\n    if (htmlElement.querySelectorAll(\".o_list_button_edit\").length) {\n        return click(htmlElement, \".o_list_button_edit\");\n    } else {\n        throw new Error(\"No edit button found to be clicked.\");\n    }\n}\n\nexport async function clickSave(htmlElement) {\n    if (htmlElement.querySelectorAll(\".o_form_status_indicator\").length) {\n        await mouseEnter(htmlElement, \".o_form_status_indicator\");\n    }\n    if (htmlElement.querySelectorAll(\".o_form_button_save\").length) {\n        return click(htmlElement, \".o_form_button_save\");\n    }\n    const listSaveButtons = htmlElement.querySelectorAll(\".o_list_button_save\");\n    if (listSaveButtons.length) {\n        return listSaveButtons.length >= 2 ? click(listSaveButtons[1]) : click(listSaveButtons[0]);\n    } else {\n        throw new Error(\"No save button found to be clicked.\");\n    }\n}\n\nexport async function clickDiscard(htmlElement) {\n    if (htmlElement.querySelectorAll(\".o_form_status_indicator\").length) {\n        await mouseEnter(htmlElement, \".o_form_status_indicator\");\n    }\n    if (htmlElement.querySelectorAll(\".o_form_button_cancel\").length) {\n        return click(htmlElement, \".o_form_button_cancel\");\n    } else if ($(htmlElement).find(\".o_list_button_discard:visible\").length) {\n        return click($(htmlElement).find(\".o_list_button_discard:visible\").get(0));\n    } else {\n        throw new Error(\"No discard button found to be clicked.\");\n    }\n}\n\n/**\n * Trigger pointerenter and mouseenter events on the given target. If no\n * coordinates are given, the event is located by default\n * in the middle of the target to simplify the test process\n *\n * @param {Element} el\n * @param {string} selector\n * @param {Object} coordinates position of the mouseenter event\n */\nexport async function mouseEnter(el, selector, coordinates) {\n    const target = el.querySelector(selector) || el;\n    const atPos = coordinates || {\n        clientX: target.getBoundingClientRect().left + target.getBoundingClientRect().width / 2,\n        clientY: target.getBoundingClientRect().top + target.getBoundingClientRect().height / 2,\n    };\n    return triggerEvents(target, null, [\"pointerenter\", \"mouseenter\"], atPos);\n}\n\n/**\n * Trigger pointerleave and mouseleave events on the given target.\n *\n * @param {Element} el\n * @param {string} selector\n */\nexport async function mouseLeave(el, selector) {\n    const target = el.querySelector(selector) || el;\n    return triggerEvents(target, null, [\"pointerleave\", \"mouseleave\"]);\n}\n\nexport async function editInput(el, selector, value) {\n    const input = findElement(el, selector);\n    if (!(input instanceof HTMLInputElement || input instanceof HTMLTextAreaElement)) {\n        throw new Error(\"Only 'input' and 'textarea' elements can be edited with 'editInput'.\");\n    }\n    if (\n        ![\"text\", \"textarea\", \"email\", \"search\", \"color\", \"number\", \"file\", \"tel\"].includes(\n            input.type\n        )\n    ) {\n        throw new Error(`Type \"${input.type}\" not supported by 'editInput'.`);\n    }\n\n    const eventOpts = {};\n    if (input.type === \"file\") {\n        const files = Array.isArray(value) ? value : [value];\n        const dataTransfer = new DataTransfer();\n        for (const file of files) {\n            if (!(file instanceof File)) {\n                throw new Error(`File input value should be one or several File objects.`);\n            }\n            dataTransfer.items.add(file);\n        }\n        input.files = dataTransfer.files;\n        eventOpts.skipVisibilityCheck = true;\n    } else {\n        input.value = value;\n    }\n\n    await triggerEvents(input, null, [\"input\", \"change\"], eventOpts);\n\n    if (input.type === \"file\") {\n        // Need to wait for the file to be loaded by the input\n        await nextTick();\n        await nextTick();\n    }\n}\n\nexport function editSelect(el, selector, value) {\n    const select = findElement(el, selector);\n    if (select.tagName !== \"SELECT\") {\n        throw new Error(\"Only select tag can be edited with selectInput.\");\n    }\n    select.value = value;\n    return triggerEvent(select, null, \"change\");\n}\n\nexport async function editSelectMenu(el, selector, value) {\n    const dropdown = el.querySelector(selector);\n    await click(dropdown.querySelector(\".dropdown-toggle\"));\n    for (const item of Array.from(dropdown.querySelectorAll(\".dropdown-item\"))) {\n        if (item.textContent === value) {\n            return click(item);\n        }\n    }\n}\n\n/**\n * Triggers an hotkey properly disregarding the operating system.\n *\n * @param {string} hotkey\n * @param {boolean} addOverlayModParts\n * @param {KeyboardEventInit} eventAttrs\n */\nexport async function triggerHotkey(hotkey, addOverlayModParts = false, eventAttrs = {}) {\n    eventAttrs.key = hotkey.split(\"+\").pop();\n\n    if (/shift/i.test(hotkey)) {\n        eventAttrs.shiftKey = true;\n    }\n\n    if (/control/i.test(hotkey)) {\n        if (isMacOS()) {\n            eventAttrs.metaKey = true;\n        } else {\n            eventAttrs.ctrlKey = true;\n        }\n    }\n\n    if (/alt/i.test(hotkey) || addOverlayModParts) {\n        if (isMacOS()) {\n            eventAttrs.ctrlKey = true;\n        } else {\n            eventAttrs.altKey = true;\n        }\n    }\n\n    if (!(\"bubbles\" in eventAttrs)) {\n        eventAttrs.bubbles = true;\n    }\n\n    const [keydownEvent, keyupEvent] = await triggerEvents(\n        document.activeElement,\n        null,\n        [\n            [\"keydown\", eventAttrs],\n            [\"keyup\", eventAttrs],\n        ],\n        { skipVisibilityCheck: true }\n    );\n\n    return { keydownEvent, keyupEvent };\n}\n\nexport function mockDownload(cb) {\n    patchWithCleanup(download, { _download: cb });\n}\n\nexport const hushConsole = Object.create(null);\nfor (const propName of Object.keys(window.console)) {\n    hushConsole[propName] = () => {};\n}\n\nexport function mockSendBeacon(mock) {\n    patchWithCleanup(navigator, {\n        sendBeacon: (url, blob) => {\n            return mock(url, blob) !== false;\n        },\n    });\n}\n\nexport function mockTimeout() {\n    const timeouts = new Map();\n    let currentTime = 0;\n    let id = 1;\n    patchWithCleanup(browser, {\n        setTimeout(fn, delay = 0) {\n            timeouts.set(id, { fn, scheduledFor: delay + currentTime, id });\n            return id++;\n        },\n        clearTimeout(id) {\n            timeouts.delete(id);\n        },\n    });\n    return {\n        execRegisteredTimeouts() {\n            for (const { fn } of timeouts.values()) {\n                fn();\n            }\n            timeouts.clear();\n        },\n        async advanceTime(duration) {\n            // wait here so all microtasktick scheduled in this frame can be\n            // executed and possibly register their own timeout\n            await nextTick();\n            currentTime += duration;\n            for (const { fn, scheduledFor, id } of timeouts.values()) {\n                if (scheduledFor <= currentTime) {\n                    fn();\n                    timeouts.delete(id);\n                }\n            }\n            // wait here to make sure owl can update the UI\n            await nextTick();\n        },\n    };\n}\n\nexport function mockAnimationFrame() {\n    const callbacks = new Map();\n    let currentTime = 0;\n    let id = 1;\n    patchWithCleanup(browser, {\n        requestAnimationFrame(fn) {\n            callbacks.set(id, { fn, scheduledFor: 16 + currentTime, id });\n            return id++;\n        },\n        cancelAnimationFrame(id) {\n            callbacks.delete(id);\n        },\n        performance: { now: () => currentTime },\n    });\n    return {\n        execRegisteredAnimationFrames() {\n            for (const { fn } of callbacks.values()) {\n                fn(currentTime);\n            }\n            callbacks.clear();\n        },\n        async advanceFrame(count = 1) {\n            // wait here so all microtasktick scheduled in this frame can be\n            // executed and possibly register their own timeout\n            await nextTick();\n            currentTime += 16 * count;\n            for (const { fn, scheduledFor, id } of callbacks.values()) {\n                if (scheduledFor <= currentTime) {\n                    fn(currentTime);\n                    callbacks.delete(id);\n                }\n            }\n            // wait here to make sure owl can update the UI\n            await nextTick();\n        },\n    };\n}\n\nexport async function mount(Comp, target, config = {}) {\n    let { props, env } = config;\n    env = env || {};\n    const configuration = {\n        env,\n        templates,\n        test: true,\n        props,\n    };\n    if (env.services && \"localization\" in env.services) {\n        configuration.translateFn = _t;\n    }\n    const app = new App(Comp, configuration);\n    registerCleanup(() => app.destroy());\n    return app.mount(target);\n}\n\nexport function destroy(comp) {\n    comp.__owl__.app.destroy();\n}\n\nexport function findChildren(comp, predicate = (e) => e) {\n    const queue = [];\n    [].unshift.apply(queue, Object.values(comp.__owl__.children));\n\n    while (queue.length > 0) {\n        const curNode = queue.pop();\n        if (predicate(curNode)) {\n            return curNode;\n        }\n        [].unshift.apply(queue, Object.values(curNode.component.__owl__.children));\n    }\n}\n\n// partial replacement of t-ref on component\nexport function useChild() {\n    const node = useComponent().__owl__;\n    const setChild = () => {\n        const componentNode = Object.values(node.children)[0];\n        node.component.child = componentNode.component;\n    };\n    onMounted(setChild);\n    onPatched(setChild);\n}\n\nexport function useLogLifeCycle(logFn, name = \"\") {\n    const component = useComponent();\n    let loggedName = `${component.constructor.name}`;\n    if (name) {\n        loggedName = `${component.constructor.name} ${name}`;\n    }\n    onError(() => {\n        logFn(`onError ${loggedName}`);\n    });\n    onMounted(() => {\n        logFn(`onMounted ${loggedName}`);\n    });\n    onPatched(() => {\n        logFn(`onPatched ${loggedName}`);\n    });\n    onRendered(() => {\n        logFn(`onRendered ${loggedName}`);\n    });\n    onWillDestroy(() => {\n        logFn(`onWillDestroy ${loggedName}`);\n    });\n    onWillPatch(() => {\n        logFn(`onWillPatch ${loggedName}`);\n    });\n    onWillRender(() => {\n        logFn(`onWillRender ${loggedName}`);\n    });\n    onWillStart(() => {\n        logFn(`onWillStart ${loggedName}`);\n    });\n    onWillUnmount(() => {\n        logFn(`onWillUnmount ${loggedName}`);\n    });\n    onWillUpdateProps(() => {\n        logFn(`onWillUpdateProps ${loggedName}`);\n    });\n}\n\n/**\n * Returns the list of nodes containing n2 (included) that do not contain n1.\n *\n * @param {Node} n1\n * @param {Node} n2\n * @returns {Node[]}\n */\nfunction getDifferentParents(n1, n2) {\n    const parents = [n2];\n    while (parents[0].parentNode) {\n        const parent = parents[0].parentNode;\n        if (parent.contains(n1)) {\n            break;\n        }\n        parents.unshift(parent);\n    }\n    return parents;\n}\n\n/**\n * Helper performing a drag and drop sequence.\n *\n * - 'from' is used to determine the element on which the drag will start;\n * - 'target' will determine the element on which the first one will be dropped.\n *\n * The first element will be dragged by its center, and will be dropped on the\n * bottom-right inner pixel of the target element. This behavior covers both\n * cases of appending the first element to the end of a list (toSelector =\n * target list) or moving it at the position of another element, effectively\n * placing the first element before the second (toSelector = other element).\n *\n * A position can be given to drop the first element above, below, or on the\n * side of the second (default is inside, as specified above).\n *\n * Note that only the last event is awaited, since all the others are\n * considered to be synchronous.\n *\n * @param {Element | string} from\n * @param {Element | string} to\n * @param {Position} [position]\n */\nexport async function dragAndDrop(from, to, position) {\n    const { drop } = await drag(from);\n    await drop(to, position);\n}\n\n/**\n * Helper performing a drag.\n *\n * - the 'from' selector is used to determine the element on which the drag will\n *  start;\n * - the 'target' selector will determine the element on which the dragged element will be\n * moved.\n *\n * Returns a drop function\n *\n * @param {Element | string} from\n */\nexport async function drag(from, pointerType = \"mouse\") {\n    const assertIsDragging = (fn, endDrag) => {\n        return {\n            async [fn.name](...args) {\n                if (dragEndReason) {\n                    throw new Error(\n                        `Cannot execute drag helper '${fn.name}': drag sequence has been ended by '${dragEndReason}'.`\n                    );\n                }\n                await fn(...args);\n                if (endDrag) {\n                    dragEndReason = fn.name;\n                }\n            },\n        }[fn.name];\n    };\n\n    const cancel = assertIsDragging(async function cancel() {\n        await triggerEvent(window, null, \"keydown\", { key: \"Escape\" });\n    }, true);\n\n    /**\n     * @param {Element | string} [to]\n     * @param {Position} [position]\n     */\n    const drop = assertIsDragging(async function drop(to, position) {\n        if (to) {\n            await moveTo(to, position);\n        }\n        await triggerEvent(target || source, null, \"pointerup\", targetPosition);\n    }, true);\n\n    /**\n     * @param {Element | string} selector\n     */\n    const getEl = (selector) =>\n        selector instanceof Element ? selector : fixture.querySelector(selector);\n\n    /**\n     * @param {Position} [position]\n     */\n    const getTargetPosition = (position) => {\n        const tRect = target.getBoundingClientRect();\n        const tPos = {\n            clientX: Math.floor(tRect.x),\n            clientY: Math.floor(tRect.y),\n        };\n        if (position && typeof position === \"object\") {\n            // x and y coordinates start from the element's initial coordinates\n            tPos.clientX += position.x || 0;\n            tPos.clientY += position.y || 0;\n        } else {\n            const positions = typeof position === \"string\" ? position.split(\"-\") : [];\n\n            // X position\n            if (positions.includes(\"left\")) {\n                tPos.clientX -= 1;\n            } else if (positions.includes(\"right\")) {\n                tPos.clientX += Math.ceil(tRect.width) + 1;\n            } else {\n                tPos.clientX += Math.floor(tRect.width / 2);\n            }\n\n            // Y position\n            if (positions.includes(\"top\")) {\n                tPos.clientY -= 1;\n            } else if (positions.includes(\"bottom\")) {\n                tPos.clientY += Math.ceil(tRect.height) + 1;\n            } else {\n                tPos.clientY += Math.floor(tRect.height / 2);\n            }\n        }\n        return tPos;\n    };\n\n    /**\n     * @param {Element | string} [to]\n     * @param {Position} [position]\n     */\n    const moveTo = assertIsDragging(async function moveTo(to, position) {\n        target = getEl(to);\n        if (!target) {\n            return;\n        }\n\n        // Recompute target position\n        targetPosition = getTargetPosition(position);\n\n        // Move, enter and drop the element on the target\n        await triggerEvent(source, null, \"pointermove\", targetPosition);\n\n        // \"pointerenter\" is fired on every parent of `target` that do not contain\n        // `from` (typically: different parent lists).\n        for (const parent of getDifferentParents(source, target)) {\n            triggerEvent(parent, null, \"pointerenter\", targetPosition);\n        }\n        await nextTick();\n\n        return dragHelpers;\n    }, false);\n\n    const dragHelpers = { cancel, drop, moveTo };\n    const fixture = getFixture();\n\n    const source = getEl(from instanceof Element ? from : fixture.querySelector(from));\n    const sourceRect = source.getBoundingClientRect();\n\n    let dragEndReason = null;\n    let target;\n    let targetPosition;\n\n    // Pointer down on main target\n    await triggerEvent(source, null, \"pointerdown\", {\n        pointerType,\n        clientX: sourceRect.x + sourceRect.width / 2,\n        clientY: sourceRect.y + sourceRect.height / 2,\n    });\n\n    return dragHelpers;\n}\n\nexport async function clickDropdown(target, fieldName) {\n    const dropdownInput = target.querySelector(`[name='${fieldName}'] .dropdown input`);\n    dropdownInput.focus();\n    await nextTick();\n    await click(dropdownInput);\n}\n\nexport async function clickOpenedDropdownItem(target, fieldName, itemContent) {\n    const dropdowns = target.querySelectorAll(`[name='${fieldName}'] .dropdown .dropdown-menu`);\n    if (dropdowns.length === 0) {\n        throw new Error(`No dropdown found for field ${fieldName}`);\n    } else if (dropdowns.length > 1) {\n        throw new Error(`Found ${dropdowns.length} dropdowns for field ${fieldName}`);\n    }\n    const dropdownItems = dropdowns[0].querySelectorAll(\"li\");\n    const indexToClick = Array.from(dropdownItems)\n        .map((html) => html.textContent)\n        .indexOf(itemContent);\n    if (indexToClick === -1) {\n        throw new Error(`The element '${itemContent}' does not exist in the dropdown`);\n    }\n    await click(dropdownItems[indexToClick]);\n}\n\nexport async function selectDropdownItem(target, fieldName, itemContent) {\n    await clickDropdown(target, fieldName);\n    await clickOpenedDropdownItem(target, fieldName, itemContent);\n}\n\nexport function getNodesTextContent(nodes) {\n    return Array.from(nodes).map((n) => n.textContent);\n}\n\n/**\n * Click to open the dropdown on a many2one\n */\nexport async function clickOpenM2ODropdown(el, fieldName, selector) {\n    const m2oSelector = `${selector || \"\"} .o_field_many2one[name=${fieldName}] input`;\n    const matches = el.querySelectorAll(m2oSelector);\n    if (matches.length !== 1) {\n        throw new Error(\n            `cannot open m2o: selector ${selector} has been found ${matches.length} instead of 1`\n        );\n    }\n\n    await click(matches[0]);\n    return matches[0];\n}\n\n/**\n * Click on the active (highlighted) selection in a m2o dropdown.\n */\n// TO FIX\nexport async function clickM2OHighlightedItem(el, fieldName, selector) {\n    const m2oSelector = `${selector || \"\"} .o_field_many2one[name=${fieldName}] input`;\n    // const $dropdown = $(m2oSelector).autocomplete('widget');\n    const matches = el.querySelectorAll(m2oSelector);\n    if (matches.length !== 1) {\n        throw new Error(\n            `cannot open m2o: selector ${selector} has been found ${matches.length} instead of 1`\n        );\n    }\n    // clicking on an li (no matter which one), will select the focussed one\n    return click(matches[0].parentElement.querySelector(\"li\"));\n}\n\n// X2Many\nexport async function addRow(target, selector) {\n    await click(target.querySelector(`${selector ? selector : \"\"} .o_field_x2many_list_row_add a`));\n}\n\nexport async function removeRow(target, index) {\n    await click(target.querySelectorAll(\".o_list_record_remove\")[index]);\n}\n", "/* @odoo-module */\n\nimport { isVisible } from \"@web/core/utils/ui\";\nimport { registerCleanup } from \"@web/../tests/helpers/cleanup\";\nimport {\n    click as webClick,\n    getFixture,\n    makeDeferred,\n    triggerEvents as webTriggerEvents,\n} from \"@web/../tests/helpers/utils\";\n\n/**\n * Create a file object, which can be used for drag-and-drop.\n *\n * @param {Object} data\n * @param {string} data.name\n * @param {string} data.content\n * @param {string} data.contentType\n * @returns {Promise<Object>} resolved with file created\n */\nexport function createFile(data) {\n    // Note: this is only supported by Chrome, and does not work in Incognito mode\n    return new Promise(function (resolve, reject) {\n        var requestFileSystem = window.requestFileSystem || window.webkitRequestFileSystem;\n        if (!requestFileSystem) {\n            throw new Error(\"FileSystem API is not supported\");\n        }\n        requestFileSystem(window.TEMPORARY, 1024 * 1024, function (fileSystem) {\n            fileSystem.root.getFile(data.name, { create: true }, function (fileEntry) {\n                fileEntry.createWriter(function (fileWriter) {\n                    fileWriter.onwriteend = function (e) {\n                        fileSystem.root.getFile(data.name, {}, function (fileEntry) {\n                            fileEntry.file(function (file) {\n                                resolve(file);\n                            });\n                        });\n                    };\n                    fileWriter.write(new Blob([data.content], { type: data.contentType }));\n                });\n            });\n        });\n    });\n}\n\n/**\n * Create a fake object 'dataTransfer', linked to some files,\n * which is passed to drag and drop events.\n *\n * @param {Object[]} files\n * @returns {Object}\n */\nfunction createFakeDataTransfer(files) {\n    return {\n        dropEffect: \"all\",\n        effectAllowed: \"all\",\n        files,\n        items: [],\n        types: [\"Files\"],\n    };\n}\n\n/**\n * Waits until exactly one element matching the given `selector` is present in\n * `options.target` and then clicks on it.\n *\n * @param {string} selector\n * @param {ContainsOptions} [options] forwarded to `contains`\n * @param {boolean} [options.shiftKey]\n */\nexport async function click(selector, options = {}) {\n    const { shiftKey } = options;\n    delete options.shiftKey;\n    await contains(selector, { click: { shiftKey }, ...options });\n}\n\n/**\n * Waits until exactly one element matching the given `selector` is present in\n * `options.target` and then dragenters `files` on it.\n *\n * @param {string} selector\n * @param {Object[]} files\n * @param {ContainsOptions} [options] forwarded to `contains`\n */\nexport async function dragenterFiles(selector, files, options) {\n    await contains(selector, { dragenterFiles: files, ...options });\n}\n\n/**\n * Waits until exactly one element matching the given `selector` is present in\n * `options.target` and then dragovers `files` on it.\n *\n * @param {string} selector\n * @param {Object[]} files\n * @param {ContainsOptions} [options] forwarded to `contains`\n */\nexport async function dragoverFiles(selector, files, options) {\n    await contains(selector, { dragoverFiles: files, ...options });\n}\n\n/**\n * Waits until exactly one element matching the given `selector` is present in\n * `options.target` and then drops `files` on it.\n *\n * @param {string} selector\n * @param {Object[]} files\n * @param {ContainsOptions} [options] forwarded to `contains`\n */\nexport async function dropFiles(selector, files, options) {\n    await contains(selector, { dropFiles: files, ...options });\n}\n\n/**\n * Waits until exactly one element matching the given `selector` is present in\n * `options.target` and then inputs `files` on it.\n *\n * @param {string} selector\n * @param {Object[]} files\n * @param {ContainsOptions} [options] forwarded to `contains`\n */\nexport async function inputFiles(selector, files, options) {\n    await contains(selector, { inputFiles: files, ...options });\n}\n\n/**\n * Waits until exactly one element matching the given `selector` is present in\n * `options.target` and then pastes `files` on it.\n *\n * @param {string} selector\n * @param {Object[]} files\n * @param {ContainsOptions} [options] forwarded to `contains`\n */\nexport async function pasteFiles(selector, files, options) {\n    await contains(selector, { pasteFiles: files, ...options });\n}\n\n/**\n * Waits until exactly one element matching the given `selector` is present in\n * `options.target` and then focuses on it.\n *\n * @param {string} selector\n * @param {ContainsOptions} [options] forwarded to `contains`\n */\nexport async function focus(selector, options) {\n    await contains(selector, { setFocus: true, ...options });\n}\n\n/**\n * Waits until exactly one element matching the given `selector` is present in\n * `options.target` and then inserts the given `content`.\n *\n * @param {string} selector\n * @param {string} content\n * @param {ContainsOptions} [options] forwarded to `contains`\n * @param {boolean} [options.replace=false]\n */\nexport async function insertText(selector, content, options = {}) {\n    const { replace = false } = options;\n    delete options.replace;\n    await contains(selector, { ...options, insertText: { content, replace } });\n}\n\n/**\n * Waits until exactly one element matching the given `selector` is present in\n * `options.target` and then sets its `scrollTop` to the given value.\n *\n * @param {string} selector\n * @param {number|\"bottom\"} scrollTop\n * @param {ContainsOptions} [options] forwarded to `contains`\n */\nexport async function scroll(selector, scrollTop, options) {\n    await contains(selector, { setScroll: scrollTop, ...options });\n}\n\n/**\n * Waits until exactly one element matching the given `selector` is present in\n * `options.target` and then triggers `event` on it.\n *\n * @param {string} selector\n * @param {(import(\"@web/../tests/helpers/utils\").EventType|[import(\"@web/../tests/helpers/utils\").EventType, EventInit])[]} events\n * @param {ContainsOptions} [options] forwarded to `contains`\n */\nexport async function triggerEvents(selector, events, options) {\n    await contains(selector, { triggerEvents: events, ...options });\n}\n\nfunction log(ok, message) {\n    if (window.QUnit) {\n        QUnit.assert.ok(ok, message);\n    } else {\n        if (ok) {\n            console.log(message);\n        } else {\n            console.error(message);\n        }\n    }\n}\n\nlet hasUsedContainsPositively = false;\nif (window.QUnit) {\n    QUnit.testStart(() => (hasUsedContainsPositively = false));\n}\n/**\n * @typedef {[string, ContainsOptions]} ContainsTuple tuple representing params of the contains\n *  function, where the first element is the selector, and the second element is the options param.\n * @typedef {Object} ContainsOptions\n * @property {ContainsTuple} [after] if provided, the found element(s) must be after the element\n *  matched by this param.\n * @property {ContainsTuple} [before] if provided, the found element(s) must be before the element\n *  matched by this param.\n * @property {Object} [click] if provided, clicks on the first found element\n * @property {ContainsTuple|ContainsTuple[]} [contains] if provided, the found element(s) must\n *  contain the provided sub-elements.\n * @property {number} [count=1] numbers of elements to be found to declare the contains check\n *  as successful. Elements are counted after applying all other filters.\n * @property {Object[]} [dragenterFiles] if provided, dragenters the given files on the found element\n * @property {Object[]} [dragoverFiles] if provided, dragovers the given files on the found element\n * @property {Object[]} [dropFiles] if provided, drops the given files on the found element\n * @property {Object[]} [inputFiles] if provided, inputs the given files on the found element\n * @property {{content:string, replace:boolean}} [insertText] if provided, adds to (or replace) the\n *  value of the first found element by the given content.\n * @property {ContainsTuple} [parent] if provided, the found element(s) must have as\n *  parent the node matching the parent parameter.\n * @property {Object[]} [pasteFiles] if provided, pastes the given files on the found element\n * @property {number|\"bottom\"} [scroll] if provided, the scrollTop of the found element(s)\n *  must match.\n *  Note: when using one of the scrollTop options, it is advised to ensure the height is not going\n *  to change soon, by checking with a preceding contains that all the expected elements are in DOM.\n * @property {boolean} [setFocus] if provided, focuses the first found element.\n * @property {boolean} [shadowRoot] if provided, targets the shadowRoot of the found elements.\n * @property {number|\"bottom\"} [setScroll] if provided, sets the scrollTop on the first found\n *  element.\n * @property {HTMLElement} [target=getFixture()]\n * @property {string[]} [triggerEvents] if provided, triggers the given events on the found element\n * @property {string} [text] if provided, the textContent of the found element(s) or one of their\n *  descendants must match. Use `textContent` option for a match on the found element(s) only.\n * @property {string} [textContent] if provided, the textContent of the found element(s) must match.\n *  Prefer `text` option for a match on the found element(s) or any of their descendants, usually\n *  allowing for a simpler and less specific selector.\n * @property {string} [value] if provided, the input value of the found element(s) must match.\n *  Note: value changes are not observed directly, another mutation must happen to catch them.\n * @property {boolean} [visible] if provided, the found element(s) must be (in)visible\n */\nclass Contains {\n    /**\n     * @param {string} selector\n     * @param {ContainsOptions} [options={}]\n     */\n    constructor(selector, options = {}) {\n        this.selector = selector;\n        this.options = options;\n        this.options.count ??= 1;\n        this.options.targetParam = this.options.target;\n        this.options.target ??= getFixture();\n        let selectorMessage = `${this.options.count} of \"${this.selector}\"`;\n        if (this.options.visible !== undefined) {\n            selectorMessage = `${selectorMessage} ${\n                this.options.visible ? \"visible\" : \"invisible\"\n            }`;\n        }\n        if (this.options.targetParam) {\n            selectorMessage = `${selectorMessage} inside a specific target`;\n        }\n        if (this.options.parent) {\n            selectorMessage = `${selectorMessage} inside a specific parent`;\n        }\n        if (this.options.contains) {\n            selectorMessage = `${selectorMessage} with a specified sub-contains`;\n        }\n        if (this.options.text !== undefined) {\n            selectorMessage = `${selectorMessage} with text \"${this.options.text}\"`;\n        }\n        if (this.options.textContent !== undefined) {\n            selectorMessage = `${selectorMessage} with textContent \"${this.options.textContent}\"`;\n        }\n        if (this.options.value !== undefined) {\n            selectorMessage = `${selectorMessage} with value \"${this.options.value}\"`;\n        }\n        if (this.options.scroll !== undefined) {\n            selectorMessage = `${selectorMessage} with scroll \"${this.options.scroll}\"`;\n        }\n        if (this.options.after !== undefined) {\n            selectorMessage = `${selectorMessage} after a specified element`;\n        }\n        if (this.options.before !== undefined) {\n            selectorMessage = `${selectorMessage} before a specified element`;\n        }\n        this.selectorMessage = selectorMessage;\n        if (this.options.contains && !Array.isArray(this.options.contains[0])) {\n            this.options.contains = [this.options.contains];\n        }\n        if (this.options.count) {\n            hasUsedContainsPositively = true;\n        } else if (!hasUsedContainsPositively) {\n            throw new Error(\n                `Starting a test with \"contains\" of count 0 for selector \"${this.selector}\" is useless because it might immediately resolve. Start the test by checking that an expected element actually exists.`\n            );\n        }\n        /** @type {string} */\n        this.successMessage = undefined;\n        /** @type {function} */\n        this.executeError = undefined;\n    }\n\n    /**\n     * Starts this contains check, either immediately resolving if there is a\n     * match, or registering appropriate listeners and waiting until there is a\n     * match or a timeout (resolving or rejecting respectively).\n     *\n     * Success or failure messages will be logged with QUnit as well.\n     *\n     * @returns {Promise}\n     */\n    run() {\n        this.done = false;\n        this.def = makeDeferred();\n        this.scrollListeners = new Set();\n        this.onScroll = () => this.runOnce(\"after scroll\");\n        if (!this.runOnce(\"immediately\")) {\n            this.timer = setTimeout(\n                () => this.runOnce(\"Timeout of 5 seconds\", { crashOnFail: true }),\n                5000\n            );\n            this.observer = new MutationObserver((mutations) => {\n                try {\n                    this.runOnce(\"after mutations\");\n                } catch (e) {\n                    this.def.reject(e); // prevents infinite loop in case of programming error\n                }\n            });\n            this.observer.observe(this.options.target, {\n                attributes: true,\n                childList: true,\n                subtree: true,\n            });\n            registerCleanup(() => {\n                if (!this.done) {\n                    this.runOnce(\"Test ended\", { crashOnFail: true });\n                }\n            });\n        }\n        return this.def;\n    }\n\n    /**\n     * Runs this contains check once, immediately returning the result (or\n     * undefined), and possibly resolving or rejecting the main promise\n     * (and printing QUnit log) depending on options.\n     * If undefined is returned it means the check was not successful.\n     *\n     * @param {string} whenMessage\n     * @param {Object} [options={}]\n     * @param {boolean} [options.crashOnFail=false]\n     * @param {boolean} [options.executeOnSuccess=true]\n     * @returns {HTMLElement[]|undefined}\n     */\n    runOnce(whenMessage, { crashOnFail = false, executeOnSuccess = true } = {}) {\n        const res = this.select();\n        if (res?.length === this.options.count || crashOnFail) {\n            // clean before doing anything else to avoid infinite loop due to side effects\n            this.observer?.disconnect();\n            clearTimeout(this.timer);\n            for (const el of this.scrollListeners ?? []) {\n                el.removeEventListener(\"scroll\", this.onScroll);\n            }\n            this.done = true;\n        }\n        if (res?.length === this.options.count) {\n            this.successMessage = `Found ${this.selectorMessage} (${whenMessage})`;\n            if (executeOnSuccess) {\n                this.executeAction(res[0]);\n            }\n            return res;\n        } else {\n            this.executeError = () => {\n                let message = `Failed to find ${this.selectorMessage} (${whenMessage}).`;\n                message = res\n                    ? `${message} Found ${res.length} instead.`\n                    : `${message} Parent not found.`;\n                if (this.parentContains) {\n                    if (this.parentContains.successMessage) {\n                        log(true, this.parentContains.successMessage);\n                    } else {\n                        this.parentContains.executeError();\n                    }\n                }\n                log(false, message);\n                this.def?.reject(new Error(message));\n                for (const childContains of this.childrenContains || []) {\n                    if (childContains.successMessage) {\n                        log(true, childContains.successMessage);\n                    } else {\n                        childContains.executeError();\n                    }\n                }\n            };\n            if (crashOnFail) {\n                this.executeError();\n            }\n        }\n    }\n\n    /**\n     * Executes the action(s) given to this constructor on the found element,\n     * prints the success messages, and resolves the main deferred.\n\n     * @param {HTMLElement} el\n     */\n    executeAction(el) {\n        let message = this.successMessage;\n        if (this.options.click) {\n            message = `${message} and clicked it`;\n            webClick(el, undefined, {\n                mouseEventInit: this.options.click,\n                skipDisabledCheck: true,\n                skipVisibilityCheck: true,\n            });\n        }\n        if (this.options.dragenterFiles) {\n            message = `${message} and dragentered ${this.options.dragenterFiles.length} file(s)`;\n            const ev = new Event(\"dragenter\", { bubbles: true });\n            Object.defineProperty(ev, \"dataTransfer\", {\n                value: createFakeDataTransfer(this.options.dragenterFiles),\n            });\n            el.dispatchEvent(ev);\n        }\n        if (this.options.dragoverFiles) {\n            message = `${message} and dragovered ${this.options.dragoverFiles.length} file(s)`;\n            const ev = new Event(\"dragover\", { bubbles: true });\n            Object.defineProperty(ev, \"dataTransfer\", {\n                value: createFakeDataTransfer(this.options.dragoverFiles),\n            });\n            el.dispatchEvent(ev);\n        }\n        if (this.options.dropFiles) {\n            message = `${message} and dropped ${this.options.dropFiles.length} file(s)`;\n            const ev = new Event(\"drop\", { bubbles: true });\n            Object.defineProperty(ev, \"dataTransfer\", {\n                value: createFakeDataTransfer(this.options.dropFiles),\n            });\n            el.dispatchEvent(ev);\n        }\n        if (this.options.inputFiles) {\n            message = `${message} and inputted ${this.options.inputFiles.length} file(s)`;\n            // could not use _createFakeDataTransfer as el.files assignation will only\n            // work with a real FileList object.\n            const dataTransfer = new window.DataTransfer();\n            for (const file of this.options.inputFiles) {\n                dataTransfer.items.add(file);\n            }\n            el.files = dataTransfer.files;\n            /**\n             * Changing files programatically is not supposed to trigger the event but\n             * it does in Chrome versions before 73 (which is on runbot), so in that\n             * case there is no need to make a manual dispatch, because it would lead to\n             * the files being added twice.\n             */\n            const versionRaw = navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);\n            const chromeVersion = versionRaw ? parseInt(versionRaw[2], 10) : false;\n            if (!chromeVersion || chromeVersion >= 73) {\n                el.dispatchEvent(new Event(\"change\"));\n            }\n        }\n        if (this.options.insertText !== undefined) {\n            message = `${message} and inserted text \"${this.options.insertText.content}\" (replace: ${this.options.insertText.replace})`;\n            el.focus();\n            if (this.options.insertText.replace) {\n                el.value = \"\";\n                el.dispatchEvent(new window.KeyboardEvent(\"keydown\", { key: \"Backspace\" }));\n                el.dispatchEvent(new window.KeyboardEvent(\"keyup\", { key: \"Backspace\" }));\n                el.dispatchEvent(new window.InputEvent(\"input\"));\n            }\n            for (const char of this.options.insertText.content) {\n                el.value += char;\n                el.dispatchEvent(new window.KeyboardEvent(\"keydown\", { key: char }));\n                el.dispatchEvent(new window.KeyboardEvent(\"keyup\", { key: char }));\n                el.dispatchEvent(new window.InputEvent(\"input\"));\n            }\n            el.dispatchEvent(new window.InputEvent(\"change\"));\n        }\n        if (this.options.pasteFiles) {\n            message = `${message} and pasted ${this.options.pasteFiles.length} file(s)`;\n            const ev = new Event(\"paste\", { bubbles: true });\n            Object.defineProperty(ev, \"clipboardData\", {\n                value: createFakeDataTransfer(this.options.pasteFiles),\n            });\n            el.dispatchEvent(ev);\n        }\n        if (this.options.setFocus) {\n            message = `${message} and focused it`;\n            el.focus();\n        }\n        if (this.options.setScroll !== undefined) {\n            message = `${message} and set scroll to \"${this.options.setScroll}\"`;\n            el.scrollTop =\n                this.options.setScroll === \"bottom\" ? el.scrollHeight : this.options.setScroll;\n        }\n        if (this.options.triggerEvents) {\n            message = `${message} and triggered \"${this.options.triggerEvents.join(\", \")}\" events`;\n            webTriggerEvents(el, null, this.options.triggerEvents, {\n                skipVisibilityCheck: true,\n            });\n        }\n        if (this.parentContains) {\n            log(true, this.parentContains.successMessage);\n        }\n        log(true, message);\n        for (const childContains of this.childrenContains) {\n            log(true, childContains.successMessage);\n        }\n        this.def?.resolve();\n    }\n\n    /**\n     * Returns the found element(s) according to this constructor setup.\n     * If undefined is returned it means the parent cannot be found\n     *\n     * @returns {HTMLElement[]|undefined}\n     */\n    select() {\n        const target = this.selectParent();\n        if (!target) {\n            return;\n        }\n        const baseRes = [...target.querySelectorAll(this.selector)]\n            .map((el) => (this.options.shadowRoot ? el.shadowRoot : el))\n            .filter((el) => el);\n        /** @type {Contains[]} */\n        this.childrenContains = [];\n        const res = baseRes.filter((el, currentIndex) => {\n            let condition =\n                (this.options.textContent === undefined ||\n                    el.textContent.trim() === this.options.textContent) &&\n                (this.options.value === undefined || el.value === this.options.value) &&\n                (this.options.scroll === undefined ||\n                    (this.options.scroll === \"bottom\"\n                        ? Math.abs(el.scrollHeight - el.clientHeight - el.scrollTop) <= 1\n                        : Math.abs(el.scrollTop - this.options.scroll) <= 1));\n            if (condition && this.options.text !== undefined) {\n                if (\n                    el.textContent.trim() !== this.options.text &&\n                    [...el.querySelectorAll(\"*\")].every(\n                        (el) => el.textContent.trim() !== this.options.text\n                    )\n                ) {\n                    condition = false;\n                }\n            }\n            if (condition && this.options.contains) {\n                for (const param of this.options.contains) {\n                    const childContains = new Contains(param[0], { ...param[1], target: el });\n                    if (\n                        !childContains.runOnce(`as child of el ${currentIndex + 1})`, {\n                            executeOnSuccess: false,\n                        })\n                    ) {\n                        condition = false;\n                    }\n                    this.childrenContains.push(childContains);\n                }\n            }\n            if (condition && this.options.visible !== undefined) {\n                if (isVisible(el) !== this.options.visible) {\n                    condition = false;\n                }\n            }\n            if (condition && this.options.after) {\n                const afterContains = new Contains(this.options.after[0], {\n                    ...this.options.after[1],\n                    target,\n                });\n                const afterEl = afterContains.runOnce(`as \"after\"`, {\n                    executeOnSuccess: false,\n                })?.[0];\n                if (\n                    !afterEl ||\n                    !(el.compareDocumentPosition(afterEl) & Node.DOCUMENT_POSITION_PRECEDING)\n                ) {\n                    condition = false;\n                }\n                this.childrenContains.push(afterContains);\n            }\n            if (condition && this.options.before) {\n                const beforeContains = new Contains(this.options.before[0], {\n                    ...this.options.before[1],\n                    target,\n                });\n                const beforeEl = beforeContains.runOnce(`as \"before\"`, {\n                    executeOnSuccess: false,\n                })?.[0];\n                if (\n                    !beforeEl ||\n                    !(el.compareDocumentPosition(beforeEl) & Node.DOCUMENT_POSITION_FOLLOWING)\n                ) {\n                    condition = false;\n                }\n                this.childrenContains.push(beforeContains);\n            }\n            return condition;\n        });\n        if (\n            this.options.scroll !== undefined &&\n            this.scrollListeners &&\n            baseRes.length === this.options.count &&\n            res.length !== this.options.count\n        ) {\n            for (const el of baseRes) {\n                if (!this.scrollListeners.has(el)) {\n                    this.scrollListeners.add(el);\n                    el.addEventListener(\"scroll\", this.onScroll);\n                }\n            }\n        }\n        return res;\n    }\n\n    /**\n     * Returns the found element that should act as the target (parent) for the\n     * main selector.\n     * If undefined is returned it means the parent cannot be found.\n     *\n     * @returns {HTMLElement|undefined}\n     */\n    selectParent() {\n        if (this.options.parent) {\n            this.parentContains = new Contains(this.options.parent[0], {\n                ...this.options.parent[1],\n                target: this.options.target,\n            });\n            return this.parentContains.runOnce(`as parent`, { executeOnSuccess: false })?.[0];\n        }\n        return this.options.target;\n    }\n}\n\n/**\n * Waits until `count` elements matching the given `selector` are present in\n * `options.target`.\n *\n * @param {string} selector\n * @param {ContainsOptions} [options]\n * @returns {Promise}\n */\nexport async function contains(selector, options) {\n    await new Contains(selector, options).run();\n}\n\nconst stepState = {\n    expectedSteps: null,\n    deferred: null,\n    timeout: null,\n    currentSteps: [],\n\n    clear() {\n        clearTimeout(this.timeout);\n        this.timeout = null;\n        this.deferred = null;\n        this.currentSteps = [];\n        this.expectedSteps = null;\n    },\n\n    check({ crashOnFail = false } = {}) {\n        const success =\n            this.expectedSteps.length === this.currentSteps.length &&\n            this.expectedSteps.every((s, i) => s === this.currentSteps[i]);\n        if (!success && !crashOnFail) {\n            return;\n        }\n        QUnit.config.current.assert.verifySteps(this.expectedSteps);\n        if (success) {\n            this.deferred.resolve();\n        } else {\n            this.deferred.reject(new Error(\"Steps do not match.\"));\n        }\n        this.clear();\n    },\n};\n\nif (window.QUnit) {\n    QUnit.testStart(() =>\n        registerCleanup(() => {\n            if (stepState.expectedSteps) {\n                stepState.check({ crashOnFail: true });\n            } else {\n                stepState.clear();\n            }\n        })\n    );\n}\n\n/**\n * Indicate the completion of a test step. This step must then be verified by\n * calling `assertSteps`.\n *\n * @param {string} step\n */\nexport function step(step) {\n    stepState.currentSteps.push(step);\n    QUnit.config.current.assert.step(step);\n    if (stepState.expectedSteps) {\n        stepState.check();\n    }\n}\n\n/**\n * Wait for the given steps to be executed or for the timeout to be reached.\n *\n * @param {string[]} steps\n */\nexport function assertSteps(steps) {\n    if (stepState.expectedSteps) {\n        stepState.check({ crashOnFail: true });\n    }\n    stepState.expectedSteps = steps;\n    stepState.deferred = makeDeferred();\n    stepState.timeout = setTimeout(() => stepState.check({ crashOnFail: true }), 2000);\n    stepState.check();\n    return stepState.deferred;\n}\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\n\nregistry.category(\"web_tour.tours\").add(\"mail_activity_date_format\", {\n    test: true,\n    steps: () => [\n        {\n            trigger: \"button:contains('Activities')\",\n        },\n        {\n            trigger: \"input[id*='activity_type_id']\",\n            run: \"click\",\n        },\n        {\n            trigger: \".dropdown-item:contains('To-Do')\",\n        },\n        {\n            trigger: \"div[name='summary'] input\",\n            run: \"text Go Party\",\n        },\n        {\n            trigger: \"button:contains('Schedule')\",\n        },\n        {\n            trigger: \".o-mail-Activity:contains('Go Party')\",\n        },\n        {\n            trigger: \".fa-info-circle\",\n            run: \"click\",\n        },\n        // Format expected from the server for 9 AM at the first day of 2024 is date_format = \"%d/%b/%y\", time_format = \"%I:%M:%S %p\".\n        {\n            trigger: \".o-mail-Activity-details tr:contains('Created') td:contains('01/Jan/24 09:00:00 AM')\",\n            isCheck: true,\n        },\n        {\n            // Default due date is 5 days after creation date.\n            trigger: \".o-mail-Activity-details tr:contains('Due on') td:contains('06/Jan/24')\",\n            isCheck: true,\n        }\n    ],\n});\n", "/* @odoo-module */\n\nimport { registry } from \"@web/core/registry\";\n\nregistry.category(\"web_tour.tours\").add(\"discuss_channel_as_guest_tour.js\", {\n        test: true,\n        steps: () => [\n            {\n                content: \"Channel secret token has been hidden on welcome page\",\n                trigger: \".o-mail-WelcomePage\",\n                run() {\n                    if (!window.location.pathname.startsWith(\"/discuss/channel\")) {\n                        console.error(\"Channel secret token is still present in URL.\");\n                    }\n                },\n            },\n            {\n                content: \"Click join\",\n                trigger: \"button[title='Join Channel']\",\n                extraTrigger: \".o-mail-Thread\",\n            },\n            {\n                content: \"Check that we are on channel page\",\n                trigger: \".o-mail-Thread\",\n                run() {},\n            },\n        ],\n    });\n", "/* @odoo-module */\n\nimport { registry } from \"@web/core/registry\";\nimport { click, contains, createFile, inputFiles } from \"@web/../tests/utils\";\n\nregistry.category(\"web_tour.tours\").add(\"discuss_channel_public_tour.js\", {\n    test: true,\n    steps: () => [\n        {\n            trigger: \".o-mail-DiscussPublic\",\n            extraTrigger: \".o-mail-Thread\",\n            run() {},\n        },\n        {\n            content: \"Check that we are on channel page\",\n            trigger: \".o-mail-Thread\",\n            run() {\n                if (!window.location.pathname.startsWith(\"/discuss/channel\")) {\n                    console.error(\"Channel secret token is still present in URL.\");\n                }\n                const { missing, failed, unloaded } = odoo.loader.findErrors();\n                if ([missing, failed, unloaded].some((arr) => arr.length)) {\n                    console.error(\n                        \"Couldn't load all JS modules.\",\n                        JSON.stringify({ missing, failed, unloaded })\n                    );\n                }\n                document.body.classList.add(\"o_discuss_channel_public_modules_loaded\");\n            },\n            extraTrigger: \".o_discuss_channel_public_modules_loaded\",\n        },\n        {\n            content: \"Wait for all modules loaded check in previous step\",\n            trigger: \".o_discuss_channel_public_modules_loaded\",\n            run() {},\n        },\n        {\n            content: \"Write something in composer\",\n            trigger: \".o-mail-Composer-input\",\n            run: \"text cheese\",\n        },\n        {\n            content: \"Add one file in composer\",\n            trigger: \".o-mail-Composer button[aria-label='Attach files']\",\n            async run() {\n                await inputFiles(\".o-mail-Composer-coreMain .o_input_file\", [\n                    await createFile({\n                        content: \"hello, world\",\n                        contentType: \"text/plain\",\n                        name: \"text.txt\",\n                    }),\n                ]);\n            },\n        },\n        {\n            content: \"Check the earlier provided attachment is listed\",\n            trigger: '.o-mail-AttachmentCard[title=\"text.txt\"]',\n            extra_trigger: \".o-mail-AttachmentCard:not(.o-isUploading)\", // waiting the attachment to be uploaded\n            run() {},\n        },\n        {\n            content: \"Send message\",\n            trigger: \".o-mail-Composer-send:enabled\",\n        },\n        {\n            content: \"Check message is shown\",\n            trigger: '.o-mail-Message-body:contains(\"cheese\")',\n            run() {},\n        },\n        {\n            content: \"Check message contains the attachment\",\n            trigger: '.o-mail-Message .o-mail-AttachmentCard:contains(\"text.txt\")',\n            run() {},\n        },\n        {\n            content: \"Click on more menu\",\n            trigger: \".o-mail-Message [title='Expand']\",\n        },\n        {\n            content: \"Click on edit\",\n            trigger: \".o-mail-Message [title='Edit']\",\n        },\n        {\n            content: \"Edit message\",\n            trigger: \".o-mail-Message .o-mail-Composer-input\",\n            run: \"text vegetables\",\n        },\n        {\n            content: \"Add one more file in composer\",\n            trigger: \".o-mail-Message .o-mail-Composer button[aria-label='Attach files']\",\n            async run() {\n                inputFiles(\".o-mail-Message .o-mail-Composer-coreMain .o_input_file\", [\n                    await createFile({\n                        content: \"hello 2\",\n                        contentType: \"text/plain\",\n                        name: \"extra.txt\",\n                    }),\n                ]);\n            },\n        },\n        {\n            content: \"Check the earlier provided extra attachment is listed\",\n            trigger: '.o-mail-Message .o-mail-Composer .o-mail-AttachmentCard[title=\"extra.txt\"]',\n            extra_trigger:\n                \".o-mail-Message .o-mail-Composer .o-mail-AttachmentCard:not(.o-isUploading)\", // waiting the attachment to be uploaded\n            run() {},\n        },\n        {\n            content: \"Save edited message\",\n            trigger: \".o-mail-Message a:contains(save)\",\n        },\n        {\n            content: \"Check message is edited\",\n            trigger: '.o-mail-Message-body:contains(\"vegetables\")',\n            run() {},\n        },\n        {\n            content: \"Check edited message contains the first attachment\",\n            trigger: '.o-mail-Message .o-mail-AttachmentCard:contains(\"text.txt\")',\n            run() {},\n        },\n        {\n            content: \"Check edited message contains the extra attachment\",\n            trigger: '.o-mail-Message .o-mail-AttachmentCard:contains(\"extra.txt\")',\n            async run() {\n                await click(\".o-mail-AttachmentCard-unlink\", {\n                    parent: [\".o-mail-AttachmentCard\", { text: \"extra.txt\" }],\n                });\n                await click(\".btn\", { text: \"Ok\", parent: [\".modal\", { text: \"Confirmation\" }] });\n                await contains(\".o-mail-AttachmentCard\", { text: \"extra.txt\", count: 0 });\n            },\n        },\n        {\n            content: \"Open search panel\",\n            trigger: \"button[title='Search Messages']\",\n        },\n        {\n            content: \"Search for the attachment name\",\n            trigger: \".o_searchview_input\",\n            run: \"text text.txt\",\n        },\n        {\n            content: \"Trigger the search\",\n            trigger: \"button[aria-label='Search button']\",\n        },\n        {\n            content: \"Check that searched message contains the attachment\",\n            trigger:\n                '.o-mail-SearchMessagesPanel .o-mail-Message .o-mail-AttachmentCard:contains(\"text.txt\")',\n            run() {},\n        },\n    ],\n});\n", "/* @odoo-module */\n\nimport { _t } from \"@web/core/l10n/translation\";\nimport { registry } from \"@web/core/registry\";\n\nimport { markup } from \"@odoo/owl\";\n\nregistry.category(\"web_tour.tours\").add(\"discuss_channel_tour\", {\n    url: \"/web#action=mail.action_discuss\",\n    sequence: 80,\n    steps: () => [\n        {\n            trigger: \".o-mail-DiscussSidebarCategory-channel .o-mail-DiscussSidebarCategory-add\",\n            content: markup(\n                _t(\n                    \"<p>Channels make it easy to organize information across different topics and groups.</p> <p>Try to <b>create your first channel</b> (e.g. sales, marketing, product XYZ, after work party, etc).</p>\"\n                )\n            ),\n            position: \"bottom\",\n        },\n        {\n            trigger: \".o-discuss-ChannelSelector input\",\n            content: markup(_t(\"<p>Create a channel here.</p>\")),\n            position: \"bottom\",\n            auto: true,\n            run: function (actions) {\n                var t = new Date().getTime();\n                actions.text(\"SomeChannel_\" + t, this.$anchor);\n            },\n        },\n        {\n            trigger: \".o-discuss-ChannelSelector-list\",\n            extra_trigger: \".o-discuss-ChannelSelector-suggestion\",\n            content: markup(_t(\"<p>Create a public or private channel.</p>\")),\n            position: \"right\",\n            run() {\n                document.querySelector(\".o-discuss-ChannelSelector-suggestion\").click();\n            },\n        },\n        {\n            trigger: \".o-mail-Composer-input\",\n            content: markup(\n                _t(\n                    \"<p><b>Write a message</b> to the members of the channel here.</p> <p>You can notify someone with <i>'@'</i> or link another channel with <i>'#'</i>. Start your message with <i>'/'</i> to get the list of possible commands.</p>\"\n                )\n            ),\n            position: \"top\",\n            width: 350,\n            run: function (actions) {\n                var t = new Date().getTime();\n                actions.text(\"SomeText_\" + t, this.$anchor);\n            },\n        },\n        {\n            trigger: \".o-mail-Composer-send:enabled\",\n            content: _t(\"Post your message on the thread\"),\n            position: \"top\",\n        },\n        {\n            trigger: \".o-mail-Message\",\n            content: _t(\"Click on your message\"),\n            position: \"top\",\n        },\n        {\n            trigger: \".o-mail-Message [title='Expand']\",\n            content: _t(\"Expand options\"),\n            position: \"top\",\n        },\n        {\n            trigger: \".o-mail-Message [title='Mark as Todo']\",\n            content: markup(\n                _t(\"Messages can be <b>starred</b> to remind you to check back later.\")\n            ),\n            position: \"bottom\",\n        },\n        {\n            trigger: \"button:contains(Starred)\",\n            content: _t(\n                \"Once a message has been starred, you can come back and review it at any time here.\"\n            ),\n            position: \"bottom\",\n        },\n        {\n            trigger: \".o-mail-DiscussSidebarCategory-chat .o-mail-DiscussSidebarCategory-add\",\n            content: markup(\n                _t(\n                    \"<p><b>Chat with coworkers</b> in real-time using direct messages.</p><p><i>You might need to invite users from the Settings app first.</i></p>\"\n                )\n            ),\n            position: \"bottom\",\n        },\n        {\n            trigger: \".o-discuss-ChannelSelector\",\n            auto: true,\n            isCheck: true,\n        },\n    ],\n});\n", "/* @odoo-module */\n\nimport { registry } from \"@web/core/registry\";\n\nregistry.category(\"web_tour.tours\").add(\"mail_activity_schedule_from_chatter\", {\n    test: true,\n    steps: () => [\n        {\n            trigger: \"button:contains('Activities')\",\n        },\n        {\n            trigger: \"input[id*='activity_type_id']\",\n            run: \"click\",\n        },\n        {\n            trigger: \".dropdown-item:contains('Call')\",\n        },\n        {\n            trigger: \"input[id*='activity_type_id']:propValue('Call')\",\n            run: () => {},\n        },\n        {\n            extra_trigger: \"button:contains('Schedule')\",\n            trigger: \"input[id*='activity_type_id']\",\n            run: \"click\",\n        },\n        {\n            trigger: \".dropdown-item:contains('To-Do')\",\n        },\n        {\n            trigger: \"div[name='summary'] input\",\n            run: \"text Play Mario Party\",\n        },\n        {\n            trigger: \"button:contains('Schedule')\",\n        },\n        {\n            trigger: \".o-mail-Activity:contains('Play Mario Party')\",\n        },\n        {\n            trigger: \"button:contains('Activities')\",\n        },\n        {\n            trigger: \"div[name='summary'] input\",\n            run: \"text Play Mario Kart\",\n        },\n        {\n            trigger: \"button:contains('Mark as Done')\",\n        },\n        {\n            trigger: \".o-mail-Message:contains('Play Mario Kart')\",\n            isCheck: true,\n        },\n    ],\n});\n", "/* @odoo-module */\n\nimport { registry } from \"@web/core/registry\";\nimport { contains, createFile, inputFiles } from \"@web/../tests/utils\";\n\n/**\n * This tour depends on data created by python test in charge of launching it.\n * It is not intended to work when launched from interface. It is needed to test\n * an action (action manager) which is not possible to test with QUnit.\n * @see mail/tests/test_mail_composer.py\n */\nregistry.category(\"web_tour.tours\").add(\"mail/static/tests/tours/mail_composer_test_tour.js\", {\n    test: true,\n    steps: () => [\n        {\n            content: \"Wait for the chatter to be fully loaded\",\n            trigger: \".o-mail-Chatter\",\n            async run() {\n                await contains(\".o-mail-Message\", { count: 1 });\n            },\n        },\n        {\n            content: \"Click on Send Message\",\n            trigger: \"button:contains(Send message)\",\n        },\n        {\n            content: \"Write something in composer\",\n            trigger: \".o-mail-Composer-input\",\n            run: \"text blahblah @Not\",\n        },\n        {\n            content: \"Mention a partner\",\n            trigger: \".o-mail-Composer-suggestion:contains(Not A Demo User)\",\n        },\n        {\n            content: \"Add one file in composer\",\n            trigger: \".o-mail-Composer button[aria-label='Attach files']\",\n            async run() {\n                await inputFiles(\".o-mail-Composer-coreMain .o_input_file\", [\n                    await createFile({\n                        content: \"hello, world\",\n                        contentType: \"text/plain\",\n                        name: \"text.txt\",\n                    }),\n                ]);\n            },\n        },\n        {\n            content: \"Open full composer\",\n            trigger: \"button[aria-label='Full composer']\",\n            extra_trigger: \".o-mail-AttachmentCard:not(.o-isUploading)\", // waiting the attachment to be uploaded\n        },\n        {\n            content: \"Check composer keeps open after pushing Escape\",\n            trigger: \".o_mail_composer_form_view\",\n            run: () => {\n                window.dispatchEvent(\n                    new KeyboardEvent(\"keydown\", {\n                        bubbles: true,\n                        key: \"Escape\",\n                    })\n                );\n            },\n        },\n        {\n            content: \"Check the earlier provided attachment is listed\",\n            trigger: '.o_attachment[title=\"text.txt\"]',\n            run() {},\n        },\n        {\n            content: \"Check subject is autofilled\",\n            trigger: '[name=\"subject\"] input',\n            run() {\n                const subjectValue = document.querySelector('[name=\"subject\"] input').value;\n                if (subjectValue !== \"Jane\") {\n                    console.error(\n                        `Full composer should have \"Jane\" in subject input (actual: ${subjectValue})`\n                    );\n                }\n            },\n        },\n        {\n            content: \"Check composer content is kept\",\n            trigger: '.o_field_html[name=\"body\"]',\n            run() {\n                const bodyContent = document.querySelector(\n                    '.o_field_html[name=\"body\"]'\n                ).textContent;\n                if (!bodyContent.includes(\"blahblah @Not A Demo User\")) {\n                    console.error(\n                        `Full composer should contain text from small composer (\"blahblah @Not A Demo User\") in body input (actual: ${bodyContent})`\n                    );\n                }\n                const mentionLink = document.querySelector(\n                    '.o_field_html[name=\"body\"] a'\n                ).textContent;\n                if (!mentionLink.includes(\"@Not A Demo User\")) {\n                    console.error(\n                        `Full composer should contain mention link from small composer (\"@Not A Demo User\") in body input)`\n                    );\n                }\n            },\n        },\n        {\n            content: \"Open templates\",\n            trigger: '.o_field_widget[name=\"template_id\"] input',\n        },\n        {\n            content: \"Check a template is listed\",\n            in_modal: false,\n            trigger: '.ui-autocomplete .ui-menu-item a:contains(\"Test template\")',\n            run() {},\n        },\n        {\n            content: \"Send message\",\n            trigger: \".o_mail_send\",\n        },\n        {\n            content: \"Check message is shown\",\n            trigger: '.o-mail-Message-body:contains(\"blahblah @Not A Demo User\")',\n        },\n        {\n            content: \"Check message contains the attachment\",\n            trigger: '.o-mail-Message .o-mail-AttachmentCard:contains(\"text.txt\")',\n            isCheck: true,\n        },\n    ],\n});\n", "/* @odoo-module */\n\nimport { registry } from \"@web/core/registry\";\nimport { contains, scroll } from \"@web/../tests/utils\";\n\nregistry.category(\"web_tour.tours\").add(\"mail_message_load_order_tour\", {\n    test: true,\n    steps: () => [\n        {\n            trigger: \".o-mail-DiscussSidebarChannel:contains(MyTestChannel)\",\n            run: \"click\",\n        },\n        {\n            trigger: \".o-mail-Thread .o-mail-Message\",\n            async run() {\n                await contains(\".o-mail-Thread .o-mail-Message\", { count: 30 });\n                await contains(\".o-mail-Thread\", { scroll: \"bottom\" });\n            },\n        },\n        {\n            trigger: \"*[title='Pinned Messages']\",\n            run: \"click\",\n        },\n        {\n            trigger: \".o-mail-MessageCard-jump\",\n            run: \"click\",\n        },\n        {\n            // Messages depends on FETCH_LIMIT (currently set to 30) in\n            // the thread service. Thus, at first load the message range\n            // will be (31 - 60). This trigger ensures the next messages\n            // are fetched after jumping to the message.\n            trigger: \".o-mail-Thread .o-mail-Message:first:not(:contains(31))\",\n            async run() {\n                await contains(\".o-mail-Thread .o-mail-Message\", { count: 16 });\n                await contains(\".o-mail-Thread\", { scroll: 0 });\n                // ensure 1 - 16 are loaded in order: 15 below and the\n                // one we're loading messages around.\n                const messages = Array.from(\n                    document.querySelectorAll(\".o-mail-Thread .o-mail-Message-content\")\n                ).map((el) => el.innerText);\n                for (let i = 0; i < 16; i++) {\n                    if (messages[i] !== (i + 1).toString()) {\n                        throw new Error(\"Wrong message order after loading around\");\n                    }\n                }\n                await scroll(\".o-mail-Thread\", \"bottom\");\n            },\n        },\n        {\n            // After jumping to the pinned message, the message range\n            // was (1 -16): 15 before (but none were found), 15 after\n            // and the pinned message itself. This trigger ensures the\n            // next messages are fetched after scrolling to the bottom.\n            trigger: \".o-mail-Thread .o-mail-Message:contains(17)\",\n            async run() {\n                await contains(\".o-mail-Thread .o-mail-Message\", { count: 46 });\n                // ensure 1 - 46  are loaded in order.\n                const messages = Array.from(\n                    document.querySelectorAll(\".o-mail-Thread .o-mail-Message-content\")\n                ).map((el) => el.innerText);\n                for (let i = 0; i < 46; i++) {\n                    if (messages[i] !== (i + 1).toString()) {\n                        throw new Error(\"Wrong message order after loading after\");\n                    }\n                }\n            },\n        },\n    ],\n});\n", "/* @odoo-module */\n\nimport { registry } from \"@web/core/registry\";\nimport { contains } from \"@web/../tests/utils\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nregistry.category(\"web_tour.tours\").add(\"mail_template_dynamic_placeholder_tour\", {\n    test: true,\n    url: \"/web\",\n    steps: () => [\n        stepUtils.showAppsMenuItem(),\n        {\n            content: 'Go into the Setting \"app\"',\n            trigger: '.o_app[data-menu-xmlid=\"base.menu_administration\"]',\n        },\n        {\n            content: \"Open email templates\",\n            trigger: 'button[name=\"open_mail_templates\"]',\n        },\n        {\n            content: \"Create a new email template\",\n            trigger: \"button.o_list_button_add\",\n        },\n        {\n            content: 'Insert # inside \"Subject\" input',\n            trigger: 'div[name=\"subject\"] input[type=\"text\"]',\n            async run(actions) {\n                actions.text(`no_model_id #`, this.$anchor);\n                this.$anchor[0].dispatchEvent(\n                    new KeyboardEvent(\"keydown\", { bubbles: true, key: \"#\" })\n                );\n                await contains(\"div[name='subject'] input[type='text']\", {\n                    value: \"no_model_id #\",\n                });\n                await contains(\".o_notification\", {\n                    text: \"You need to select a model before opening the dynamic placeholder selector.\",\n                });\n            },\n        },\n        {\n            content: 'Select \"Contact\" model',\n            trigger: 'div[name=\"model_id\"] input[type=\"text\"]',\n            run: \"text Contact\",\n        },\n        {\n            content: \"Wait for the autocomplete RPC\",\n            trigger: 'div[name=\"model_id\"] .ui-autocomplete:contains(\"Contact\")',\n            isCheck: true,\n        },\n        {\n            content: \"Click on contact\",\n            trigger: 'div[name=\"model_id\"] .ui-autocomplete',\n            run: async function () {\n                const contact = Array.from(\n                    document.querySelectorAll(\n                        'div[name=\"model_id\"] .ui-autocomplete .dropdown-item'\n                    )\n                ).find((el) => el.textContent === \"Contact\");\n                await contact.click();\n            },\n        },\n        {\n            content: \"Wait for the drop down to disappear\",\n            trigger: 'div[name=\"model_id\"] .o-autocomplete:not(:has(.ui-autocomplete))',\n            run: async () => {\n                // Ensure the system has registered a correct model value before\n                // we try to open the DPH.\n                // It seems that the autocomplete validation can be very slow.\n                await new Promise((r) => setTimeout(r, 200));\n            },\n        },\n        {\n            content: 'Retry insert # inside \"Subject\" input',\n            trigger: 'div[name=\"subject\"] input[type=\"text\"]',\n            run(actions) {\n                actions.text(`yes_model_id #`, this.$anchor);\n                this.$anchor[0].dispatchEvent(\n                    new KeyboardEvent(\"keydown\", { bubbles: true, key: \"#\" })\n                );\n            },\n        },\n        {\n            content: \"Check if the dynamic placeholder popover is opened\",\n            trigger: \"div.o_model_field_selector_popover\",\n            isCheck: true,\n        },\n        {\n            content: \"filter the dph result\",\n            trigger: \"div.o_model_field_selector_popover_search input[type='text']\",\n            run: \"text name\",\n        },\n        {\n            content: \"Click on the first entry of the dynamic placeholder\",\n            trigger: 'div.o_model_field_selector_popover li:first-child button:contains(\"Name\")',\n        },\n        {\n            content: \"Enter a default value\",\n            trigger:\n                'div.o_model_field_selector_popover .o_model_field_selector_default_value_input input[type=\"text\"]',\n            run: \"text defValue\",\n        },\n        {\n            content: \"Click on the the dynamic placeholder default value\",\n            trigger: \"div.o_model_field_selector_popover li:first-child button\",\n        },\n        {\n            content: \"Wait for the popover to disappear\",\n            trigger: \"body:not(:has(.o_model_field_selector_popover))\",\n        },\n        {\n            content: \"Check if subject value was correclty updated\",\n            trigger: 'div[name=\"subject\"] input[type=\"text\"]',\n            run() {\n                const subjectValue = this.$anchor[0].value;\n                const correctValue = \"yes_model_id {{object.name or '''defValue'''}}\";\n                if (subjectValue !== correctValue) {\n                    console.error(\n                        `Email template should have \"${correctValue}\" in subject input (actual: ${subjectValue})`\n                    );\n                }\n            },\n        },\n        {\n            content: \"Insert tesxt inside editable\",\n            trigger: \".note-editable.odoo-editor-editable\",\n            run(actions) {\n                actions.text(`/`, this.$anchor);\n                document.querySelector(\".note-editable\").dispatchEvent(\n                    new InputEvent(\"input\", {\n                        inputType: \"insertText\",\n                        data: \"/\",\n                    })\n                );\n            },\n        },\n        {\n            content: \"Click on the the dynamic placeholder commandBar options\",\n            trigger: \"div.oe-powerbox-commandWrapper:contains(Dynamic Placeholder)\",\n        },\n        {\n            content: \"Check if the dynamic placeholder popover is opened\",\n            trigger: \"div.o_model_field_selector_popover\",\n        },\n        {\n            content: \"filter the dph result\",\n            trigger: \"div.o_model_field_selector_popover_search input[type='text']\",\n            run: \"text name\",\n        },\n        {\n            content: \"Click on the first entry of the dynamic placeholder\",\n            trigger: 'div.o_model_field_selector_popover li:first-child button:contains(\"Name\")',\n        },\n        {\n            content: \"Enter a default value\",\n            trigger:\n                'div.o_model_field_selector_popover .o_model_field_selector_default_value_input input[type=\"text\"]',\n            run: \"text defValue\",\n        },\n        {\n            content: \"Click on the the dynamic placeholder default value\",\n            trigger: \"div.o_model_field_selector_popover li:first-child button\",\n        },\n        {\n            content: \"Ensure the editable contain the dynamic placeholder t tag\",\n            trigger:\n                \".note-editable.odoo-editor-editable t[t-out=\\\"object.name or '''defValue'''\\\"]\",\n        },\n        {\n            content: \"Discard form changes\",\n            trigger: \"button.o_form_button_cancel\",\n        },\n        {\n            content: \"Wait for the form view to disappear\",\n            trigger: \"body:not(:has(.o_form_sheet))\",\n            isCheck: true,\n        },\n    ],\n});\n", "/* @odoo-module */\n\nimport { registry } from \"@web/core/registry\";\n\n/**\n * Verify that a user can modify their own profile information.\n */\nregistry.category(\"web_tour.tours\").add(\"mail/static/tests/tours/user_modify_own_profile_tour.js\", {\n    test: true,\n    steps: () => [\n        {\n            content: \"Open user account menu\",\n            trigger: \".o_user_menu button\",\n        },\n        {\n            content: \"Open preferences / profile screen\",\n            trigger: \"[data-menu=settings]\",\n        },\n        {\n            content: \"Update the email address\",\n            trigger: 'div[name=\"email\"] input',\n            run: \"text updatedemail@example.com\",\n        },\n        {\n            content: \"Save the form\",\n            trigger: 'button[name=\"preference_save\"]',\n            extra_trigger: \"body.modal-open\",\n        },\n        {\n            content: \"Wait until the modal is closed\",\n            isCheck: true,\n            trigger: \"body:not(.modal-open)\",\n        },\n    ],\n});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\n\nregistry.category(\"web_tour.tours\").add('portal_load_homepage', {\n    test: true,\n    url: '/my',\n    steps: () => [\n        {\n            content: \"Check portal is loaded\",\n            trigger: 'a[href*=\"/my/account\"]:contains(\"Edit\"):first',\n        },\n        {\n            content: \"Load my account details\",\n            trigger: 'input[value=\"Joel Willis\"]',\n            isCheck: true,\n        },\n        {\n            content: 'type a different phone number',\n            trigger: 'input[name=\"phone\"]',\n            run: 'text +1 555 666 7788',\n        },\n        {\n            content: \"Submit the form\",\n            trigger: 'button[type=submit]',\n        },\n        {\n            content: \"Check that we are back on the portal\",\n            trigger: 'a[href*=\"/my/account\"]:contains(\"Edit\"):first',\n            isCheck: true,\n        }\n    ]\n});\n", "/** @odoo-module */\n\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nregistry.category(\"web_tour.tours\").add('account_tax_group', {\n    test: true,\n    url: \"/web\",\n    steps: () => [stepUtils.showAppsMenuItem(),\n    {\n        id: 'account_menu_click',\n        content: \"Go to Invoicing\",\n        trigger: '.o_app[data-menu-xmlid=\"account.menu_finance\"]',\n    },\n    {\n        content: \"Go to Vendors\",\n        trigger: 'span:contains(\"Vendors\")',\n    },\n    {\n        content: \"Go to Bills\",\n        trigger: 'a:contains(\"Bills\")',\n    },\n    {\n        extra_trigger: '.o_breadcrumb .text-truncate:contains(\"Bills\")',\n        content: \"Create new bill\",\n        trigger: '.o_control_panel_main_buttons .d-none .o_list_button_add',\n    },\n    // Set a vendor\n    {\n        content: \"Add vendor\",\n        trigger: 'div.o_field_widget.o_field_res_partner_many2one[name=\"partner_id\"] div input',\n        run: 'text Account Tax Group Partner',\n    },\n    {\n        content: \"Valid vendor\",\n        trigger: '.ui-menu-item a:contains(\"Account Tax Group Partner\")',\n    },\n    // Add First product\n    {\n        content: \"Add items\",\n        trigger: 'div[name=\"invoice_line_ids\"] .o_field_x2many_list_row_add a:contains(\"Add a line\")',\n    },\n    {\n        content: \"Select input\",\n        trigger: 'div[name=\"invoice_line_ids\"] .o_selected_row .o_list_many2one[name=\"product_id\"] input',\n    },\n    {\n        content: \"Type item\",\n        trigger: 'div[name=\"invoice_line_ids\"] .o_selected_row .o_list_many2one[name=\"product_id\"] input',\n        run: \"text Account Tax Group Product\",\n    },\n    {\n        content: \"Valid item\",\n        trigger: '.ui-menu-item-wrapper:contains(\"Account Tax Group Product\")',\n    },\n    // Save account.move\n    {\n        content: \"Save the account move\",\n        trigger: '.o_form_button_save',\n    },\n    ...stepUtils.saveForm(),\n    // Edit tax group amount\n    {\n        content: \"Edit tax group amount\",\n        trigger: '.o_tax_group_edit',\n    },\n    {\n        content: \"Modify the input value\",\n        trigger: '.o_tax_group_edit_input input',\n        run: function (actions) {\n            $('.o_tax_group_edit_input input').val(200);\n            $('.o_tax_group_edit_input input').select();\n            $('.o_tax_group_edit_input input').blur();\n        },\n    },\n    // Check new value for total (with modified tax_group_amount).\n    {\n        content: \"Valid total amount\",\n        trigger: 'span[name=\"amount_total\"]:contains(\"800\")',\n    },\n    // Modify the quantity of the object\n    {\n        content: \"Select item quantity\",\n        trigger: 'div[name=\"invoice_line_ids\"] tbody tr.o_data_row .o_list_number[name=\"quantity\"]',\n    },\n    {\n        content: \"Change item quantity\",\n        trigger: 'div[name=\"invoice_line_ids\"] tbody tr.o_data_row .o_list_number[name=\"quantity\"] input',\n        run: 'text 2',\n    },\n    {\n        content: \"Valid the new value\",\n        trigger: 'div[name=\"invoice_line_ids\"] tbody tr.o_data_row .o_list_number[name=\"quantity\"] input',\n        run: function (actions) {\n            let keydownEvent = jQuery.Event('keydown');\n            keydownEvent.key = \"Enter\";\n            this.$anchor.trigger(keydownEvent);\n        },\n    },\n    // Save form\n    {\n        content: \"Save the account move\",\n        trigger: '.o_form_button_save',\n    },\n    ...stepUtils.saveForm(),\n    // Check new tax group value\n    {\n        content: \"Check new value of tax group\",\n        trigger: '.o_tax_group_amount_value:contains(\"120\")',\n    },\n    {\n        content: \"Edit tax value\",\n        trigger: '.o_tax_group_edit_input input',\n        run: 'text 2'\n    },\n    {\n        content: \"Check new value of total\",\n        trigger: '.oe_subtotal_footer_separator:contains(\"1,202\")',\n    },\n    {\n        content: \"Discard changes\",\n        trigger: '.o_form_button_cancel',\n    },\n    {\n        content: \"Check tax value is reset\",\n        trigger: '.o_tax_group_amount_value:contains(\"120\")',\n        isCheck: true,\n    },\n]});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\n\n// This tour relies on data created on the Python test.\nregistry.category(\"web_tour.tours\").add('sale_signature', {\n    test: true,\n    url: '/my/quotes',\n    steps: () => [\n    {\n        content: \"open the test SO\",\n        trigger: 'a:containsExact(\"test SO\")',\n    },\n    {\n        content: \"click sign\",\n        trigger: 'a:contains(\"Sign\")',\n    },\n    {\n        content: \"check submit is enabled\",\n        trigger: '.o_portal_sign_submit:enabled',\n        run: function () {},\n    },\n    {\n        content: \"click select style\",\n        trigger: '.o_web_sign_auto_select_style button',\n    },\n    {\n        content: \"click style 4\",\n        trigger: '.o_web_sign_auto_select_style .dropdown-item:eq(3)',\n    },\n    {\n        content: \"click submit\",\n        trigger: '.o_portal_sign_submit:enabled',\n    },\n    {\n        content: \"check it's confirmed\",\n        trigger: '#quote_content:contains(\"Thank You\")',\n    }, {\n        trigger: '#quote_content',\n        run: function () {\n            window.location.href = window.location.origin + '/web';\n        },  // Avoid race condition at the end of the tour by returning to the home page.\n    },\n    {\n        trigger: 'nav',\n        run: function() {},\n    }\n]});\n", "/** @odoo-module **/\nimport { TourError } from \"@web_tour/tour_service/tour_utils\";\nimport { registry } from \"@web/core/registry\";\n\nregistry.category(\"web_tour.tours\").add('test_detailed_op_no_save_1', { test: true, steps: () => [\n    {trigger: '.o_field_x2many_list_row_add > a'},\n    {\n        trigger: \".o_field_widget[name=product_id] input\",\n        run: 'text Lot',\n    },\n    {trigger: \".ui-menu-item > a:contains('Product Lot')\"},\n    {trigger: \".btn-primary[name=action_confirm]\"},\n    {trigger: \".fa-list\"},\n    {trigger: \"h4:contains('Stock move')\"},\n    {trigger: '.o_field_x2many_list_row_add > a'},\n    {\n        trigger: \".o_field_widget[name=lot_name] input\",\n        run: 'text lot1',\n    },\n    {\n        trigger: \".o_field_widget[name=quantity] input\",\n        run: 'text 4',\n    },\n    {trigger: \".o_form_button_save\"},\n    {trigger: \".o_optional_columns_dropdown_toggle\"},\n    {\n        trigger: 'input[name=\"picked\"]',\n        content: 'Check the picked field to display the column on the list view.',\n        run: function (actions) {\n            if (!this.$anchor.prop('checked')) {\n                actions.click(this.$anchor);\n            }\n        },\n    },\n    {trigger: \".o_data_cell[name=picked]\"},\n    {\n        trigger: \".o_field_widget[name=picked] input\",\n        run: function (actions) {\n            if (!this.$anchor.prop('checked')) {\n                actions.click(this.$anchor);\n            }\n        }\n    },\n    {trigger: \".btn-primary[name=button_validate]\"},\n    {\n        trigger: \".o_control_panel_actions button:contains('Traceability')\",\n        isCheck: true,\n    },\n]});\n\nregistry.category(\"web_tour.tours\").add('test_generate_serial_1', { test: true, steps: () => [\n    {trigger: '.o_field_x2many_list_row_add > a'},\n    {\n        trigger: \".o_field_widget[name=product_id] input\",\n        run: 'text Serial',\n    },\n    {trigger: \".ui-menu-item > a:contains('Product Serial')\"},\n    {trigger: \".btn-primary[name=action_confirm]\"},\n    {trigger: \".fa-list\"},\n    {trigger: \"h4:contains('Stock move')\"},\n    {trigger: '.o_widget_generate_serials > button'},\n    {trigger: \"h4:contains('Generate Serials numbers')\"},\n    {\n        trigger: \"div[name=next_serial] input\",\n        run: 'text serial_n_1',\n    },\n    {\n        trigger: \"div[name=next_serial_count] input\",\n        run: 'text 5',\n    },\n    {trigger: \".btn-primary:contains('Generate')\"},\n    {\n        trigger: \"span[data-tooltip=Quantity]:contains('5')\",\n        run: () => {\n            const nbLines = document.querySelectorAll(\".o_field_cell[name=lot_name]\").length;\n            if (nbLines !== 5){\n                throw new TourError(\"wrong number of move lines generated. \" + nbLines + \" instead of 5\");\n            }\n        },\n    },\n    {trigger: \".o_form_button_save\"},\n    {trigger: \".o_optional_columns_dropdown_toggle\"},\n    {\n        trigger: 'input[name=\"picked\"]',\n        content: 'Check the picked field to display the column on the list view.',\n        run: function (actions) {\n            if (!this.$anchor.prop('checked')) {\n                actions.click(this.$anchor);\n            }\n        },\n    },\n    {trigger: \".o_data_cell[name=picked]\"},\n    {\n        trigger: \".o_field_widget[name=picked] input\",\n        run: function (actions) {\n            if (!this.$anchor.prop('checked')) {\n                actions.click(this.$anchor);\n            }\n        }\n    },\n    {trigger: \".btn-primary[name=button_validate]\"},\n    {\n        trigger: \".o_control_panel_actions button:contains('Traceability')\",\n        isCheck: true,\n    },\n]});\n\nregistry.category(\"web_tour.tours\").add('test_add_new_line', {\n    test: true,\n    steps: () => [\n        {\n            extra_trigger: '.o_form_editable',\n            trigger: '.o_field_x2many_list_row_add > a'\n        },\n        {\n            trigger: \".o_field_widget[name=product_id] input\",\n            run: 'text two',\n        },\n        { trigger: \".ui-menu-item > a:contains('Product two')\" },\n        { trigger: \".fa-list:eq(1)\" },\n        { trigger: \"h4:contains('Stock move')\" },\n        { trigger: '.o_field_x2many_list_row_add > a' },\n        {\n            trigger: \".o_field_widget[name=lot_name] input\",\n            run: 'text two',\n        },\n        { trigger: \".o_form_view.modal-content .o_form_button_save\" },\n        { trigger: \".o_form_view:not(.modal-content) .o_form_button_save\" },\n        {\n            trigger: \".o_form_renderer.o_form_saved\",\n            isCheck: true,\n        },\n    ]\n});\n\nregistry.category(\"web_tour.tours\").add('test_edit_existing_line', {\n    test: true,\n    steps: () => [\n        { trigger: \".o_data_cell[name=quantity]\" },\n        {\n            trigger: \".o_field_widget[name=quantity] input\",\n            run: 'text 2',\n        },\n        { trigger: \".fa-list\" },\n        { trigger: \"h4:contains('Stock move')\" },\n        { trigger: \".o_data_cell[name=quantity]:eq(1)\" },\n        {\n            trigger: \".o_field_widget[name=lot_name] input\",\n            run: 'text two',\n        },\n        { trigger: \".o_form_view.modal-content .o_form_button_save\" },\n        { trigger: \".o_form_view:not(.modal-content) .o_form_button_save\" },\n        {\n            trigger: \".o_form_renderer.o_form_saved\",\n            isCheck: true,\n        },\n    ]\n});\n\nregistry.category(\"web_tour.tours\").add('test_onchange_twice_lot_ids', {\n    test: true,\n    steps: () => [\n        { trigger: \".o_optional_columns_dropdown_toggle\" },\n        { trigger: \".dropdown-item:contains('Serial Numbers')\"},\n        { trigger: \".o_data_cell.o_many2many_tags_cell\"},\n        { trigger: \".oi-close:first\"},\n        { trigger: \".oi-close:first\"},\n        { trigger: \".o_form_button_save\"},\n        {\n            trigger: \".o_form_renderer.o_form_saved\",\n            isCheck: true,\n        },\n    ]\n});\n", "/** @odoo-module **/\n    \n    import { registry } from \"@web/core/registry\";\n\n    registry.category(\"web_tour.tours\").add('test_stock_route_diagram_report', {\n        test: true,\n        steps: () => [\n    {\n        trigger: '.o_kanban_record',\n        extra_trigger: '.o_breadcrumb',\n    },\n    {\n        trigger: '.nav-item > a:contains(\"Inventory\")',\n    },\n    {\n        trigger: '.btn[id=\"stock.view_diagram_button\"]',\n    },\n    {\n        trigger: 'iframe .o_report_stock_rule',\n        isCheck: true,\n    },\n    ]});\n\n\nregistry.category(\"web_tour.tours\").add('test_multiple_warehouses_filter', {\n    test: true,\n    steps: () => [\n        // Add (Warehouse A or Warehouse B) to the filter\n        {\n            content: \"click search\",\n            trigger: '.o_searchview_input',\n            run: 'click',\n        },\n        {\n            trigger: '.o_searchview_input',\n            run: 'text warehouse',\n        },\n        {\n            trigger: '.o_menu_item.dropdown-item:contains(\"Warehouse\") a.o_expand > i',\n            run: 'click',\n        },\n        {\n            trigger: '.o_menu_item.dropdown-item.o_indent:contains(\"Warehouse A\") a',\n            run: 'click',\n        },\n        {\n            trigger: '.o_searchview_input',\n            run: 'text warehouse',\n        },\n        {\n            trigger: '.o_menu_item.dropdown-item:contains(\"Warehouse\") a.o_expand > i',\n            run: 'click',\n        },\n        {\n            trigger: '.o_menu_item.dropdown-item.o_indent:contains(\"Warehouse B\") a',\n            run: 'click',\n        },\n        // Go to product page\n        {\n            trigger: '.oe_kanban_card:has(.o_kanban_record_title span:contains(\"Product A\"))',\n            run: 'click',\n        },\n        // Forecast page should load correctly\n        {\n            trigger: '.dropdown-toggle.o_button_more:contains(\"More\")',\n            run: 'click',\n        },\n        {\n            trigger: 'button[name=\"action_product_tmpl_forecast_report\"]',\n            run: 'click',\n        },\n        {\n            trigger: '.o_graph_view',\n            content: 'Wait for the Forecast page to load.',\n            extra_trigger: '.o_graph_view',\n            run: () => {},\n        },\n    ],\n});\n", "/* @odoo-module */\n\nimport { triggerEvent } from \"@web/../tests/helpers/utils\";\n\nexport function simulateBarCode(chars, target = document.body, selector = undefined) {\n    for (let char of chars) {\n        triggerEvent(target, selector, \"keydown\", {\n            key: char,\n        });\n    }\n}\n", "/** @odoo-module */\n\nimport * as ProductScreen from \"@point_of_sale/../tests/tours/helpers/ProductScreenTourMethods\";\nimport * as Chrome from \"@point_of_sale/../tests/tours/helpers/ChromeTourMethods\";\nimport { registry } from \"@web/core/registry\";\nimport { scan_barcode } from \"@point_of_sale/../tests/tours/helpers/utils\";\n\nregistry.category(\"web_tour.tours\").add(\"BarcodeScanningTour\", {\n    test: true,\n    url: \"/pos/ui\",\n    steps: () =>\n        [\n            // The following step is to make sure that the Chrome widget initialization ends\n            // If we try to use the barcode parser before its initiation, we will have\n            // some inconsistent JS errors:\n            // TypeError: Cannot read properties of undefined (reading 'parse_barcode')\n            ProductScreen.confirmOpeningPopup(),\n\n            // Add a product with its barcode\n            scan_barcode(\"0123456789\"),\n            ProductScreen.selectedOrderlineHas(\"Monitor Stand\"),\n            scan_barcode(\"0123456789\"),\n            ProductScreen.selectedOrderlineHas(\"Monitor Stand\", 2),\n\n            // Test \"Prices product\" EAN-13 `23.....{NNNDD}` barcode pattern\n            scan_barcode(\"2305000000004\"),\n            ProductScreen.selectedOrderlineHas(\"Magnetic Board\", 1, \"0.00\"),\n            scan_barcode(\"2305000123451\"),\n            ProductScreen.selectedOrderlineHas(\"Magnetic Board\", 1, \"123.45\"),\n\n            // Test \"Weighted product\" EAN-13 `21.....{NNDDD}` barcode pattern\n            scan_barcode(\"2100005000000\"),\n            ProductScreen.selectedOrderlineHas(\"Wall Shelf Unit\", 0, \"0.00\"),\n            scan_barcode(\"2100005080002\"),\n            ProductScreen.selectedOrderlineHas(\"Wall Shelf Unit\", 8),\n            Chrome.endTour(),\n        ].flat(),\n});\n\nregistry.category(\"web_tour.tours\").add(\"BarcodeScanningProductPackagingTour\", {\n    test: true,\n    url: \"/pos/ui\",\n    steps: () =>\n        [\n            ProductScreen.confirmOpeningPopup(),\n            // Add the product with its barcode\n            scan_barcode(\"12345601\"),\n            ProductScreen.selectedOrderlineHas(\"Packaging Product\", 1),\n            scan_barcode(\"12345601\"),\n            ProductScreen.selectedOrderlineHas(\"Packaging Product\", 2),\n\n            // Add the product packaging with its barcode\n            scan_barcode(\"12345610\"),\n            ProductScreen.selectedOrderlineHas(\"Packaging Product\", 12),\n            scan_barcode(\"12345610\"),\n            ProductScreen.selectedOrderlineHas(\"Packaging Product\", 22),\n            Chrome.endTour(),\n        ].flat(),\n});\n\nregistry.category(\"web_tour.tours\").add(\"GS1BarcodeScanningTour\", {\n    test: true,\n    url: \"/pos/ui\",\n    steps: () =>\n        [\n            ProductScreen.confirmOpeningPopup(),\n\n            // Add the Product 1 with GS1 barcode\n            scan_barcode(\"0108431673020125100000001\"),\n            ProductScreen.selectedOrderlineHas(\"Product 1\"),\n            scan_barcode(\"0108431673020125100000001\"),\n            ProductScreen.selectedOrderlineHas(\"Product 1\", 2),\n\n            // Add the Product 2 with normal barcode\n            scan_barcode(\"08431673020126\"),\n            ProductScreen.selectedOrderlineHas(\"Product 2\"),\n            scan_barcode(\"08431673020126\"),\n            ProductScreen.selectedOrderlineHas(\"Product 2\", 2),\n\n            // Add the Product 3 with normal barcode\n            scan_barcode(\"3760171283370\"),\n            ProductScreen.selectedOrderlineHas(\"Product 3\"),\n            scan_barcode(\"3760171283370\"),\n            ProductScreen.selectedOrderlineHas(\"Product 3\", 2),\n            Chrome.endTour(),\n        ].flat(),\n});\n", "/** @odoo-module */\n\nimport * as ProductScreen from \"@point_of_sale/../tests/tours/helpers/ProductScreenTourMethods\";\nimport * as ReceiptScreen from \"@point_of_sale/../tests/tours/helpers/ReceiptScreenTourMethods\";\nimport * as PaymentScreen from \"@point_of_sale/../tests/tours/helpers/PaymentScreenTourMethods\";\nimport * as TicketScreen from \"@point_of_sale/../tests/tours/helpers/TicketScreenTourMethods\";\nimport * as Chrome from \"@point_of_sale/../tests/tours/helpers/ChromeTourMethods\";\nimport { registry } from \"@web/core/registry\";\n\nregistry.category(\"web_tour.tours\").add(\"ChromeTour\", {\n    test: true,\n    url: \"/pos/ui\",\n    steps: () =>\n        [\n            ProductScreen.confirmOpeningPopup(),\n            Chrome.clickMenuButton(),\n            Chrome.isCashMoveButtonShown(),\n            Chrome.clickMenuButton(),\n\n            // Order 1 is at Product Screen\n            ProductScreen.clickHomeCategory(),\n            ProductScreen.addOrderline(\"Desk Pad\", \"1\", \"2\", \"2.0\"),\n            Chrome.clickMenuButton(),\n            Chrome.clickTicketButton(),\n            TicketScreen.checkStatus(\"-0001\", \"Ongoing\"),\n\n            // Order 2 is at Payment Screen\n            TicketScreen.clickNewTicket(),\n            ProductScreen.addOrderline(\"Monitor Stand\", \"3\", \"4\", \"12.0\"),\n            ProductScreen.clickPayButton(),\n            PaymentScreen.isShown(),\n            Chrome.clickMenuButton(),\n            Chrome.clickTicketButton(),\n            TicketScreen.checkStatus(\"-0002\", \"Payment\"),\n\n            // Order 3 is at Receipt Screen\n            TicketScreen.clickNewTicket(),\n            ProductScreen.addOrderline(\"Whiteboard Pen\", \"5\", \"6\", \"30.0\"),\n            ProductScreen.clickPayButton(),\n            PaymentScreen.clickPaymentMethod(\"Bank\"),\n            PaymentScreen.remainingIs(\"0.0\"),\n            PaymentScreen.validateButtonIsHighlighted(true),\n            PaymentScreen.clickValidate(),\n            ReceiptScreen.isShown(),\n            Chrome.clickMenuButton(),\n            Chrome.clickTicketButton(),\n            TicketScreen.checkStatus(\"-0003\", \"Receipt\"),\n\n            // Select order 1, should be at Product Screen\n            TicketScreen.selectOrder(\"-0001\"),\n            TicketScreen.loadSelectedOrder(),\n            ProductScreen.productIsDisplayed(\"Desk Pad\"),\n            ProductScreen.selectedOrderlineHas(\"Desk Pad\", \"1.0\", \"2.0\"),\n\n            // Select order 2, should be at Payment Screen\n            Chrome.clickMenuButton(),\n            Chrome.clickTicketButton(),\n            TicketScreen.selectOrder(\"-0002\"),\n            TicketScreen.loadSelectedOrder(),\n            PaymentScreen.emptyPaymentlines(\"12.0\"),\n            PaymentScreen.validateButtonIsHighlighted(false),\n\n            // Select order 3, should be at Receipt Screen\n            Chrome.clickMenuButton(),\n            Chrome.clickTicketButton(),\n            TicketScreen.selectOrder(\"-0003\"),\n            TicketScreen.loadSelectedOrder(),\n            ReceiptScreen.totalAmountContains(\"30.0\"),\n\n            // Pay order 1, with change\n            Chrome.clickMenuButton(),\n            Chrome.clickTicketButton(),\n            TicketScreen.selectOrder(\"-0001\"),\n            TicketScreen.loadSelectedOrder(),\n            ProductScreen.isShown(),\n            ProductScreen.clickPayButton(),\n            PaymentScreen.clickPaymentMethod(\"Cash\"),\n            PaymentScreen.enterPaymentLineAmount(\"Cash\", \"20\"),\n            PaymentScreen.remainingIs(\"0.0\"),\n            PaymentScreen.validateButtonIsHighlighted(true),\n            PaymentScreen.clickValidate(),\n            ReceiptScreen.totalAmountContains(\"2.0\"),\n\n            // Order 1 now should have Receipt status\n            Chrome.clickMenuButton(),\n            Chrome.clickTicketButton(),\n            TicketScreen.checkStatus(\"-0001\", \"Receipt\"),\n\n            // Select order 3, should still be at Receipt Screen\n            // and the total amount doesn't change.\n            TicketScreen.selectOrder(\"-0003\"),\n            TicketScreen.loadSelectedOrder(),\n            ReceiptScreen.totalAmountContains(\"30.0\"),\n\n            // click next screen on order 3\n            // then delete the new empty order\n            ReceiptScreen.clickNextOrder(),\n            ProductScreen.orderIsEmpty(),\n            Chrome.clickMenuButton(),\n            Chrome.clickTicketButton(),\n            TicketScreen.deleteOrder(\"-0004\"),\n            TicketScreen.deleteOrder(\"-0001\"),\n\n            // After deleting order 1 above, order 2 became\n            // the 2nd-row order and it has payment status\n            TicketScreen.nthRowContains(2, \"Payment\"),\n            TicketScreen.deleteOrder(\"-0002\"),\n            Chrome.confirmPopup(),\n            TicketScreen.clickNewTicket(),\n\n            // Invoice an order\n            ProductScreen.addOrderline(\"Whiteboard Pen\", \"5\", \"6\"),\n            ProductScreen.clickPartnerButton(),\n            ProductScreen.clickCustomer(\"Partner Test 1\"),\n            ProductScreen.clickPayButton(),\n            PaymentScreen.clickPaymentMethod(\"Bank\"),\n            PaymentScreen.clickInvoiceButton(),\n            PaymentScreen.clickValidate(),\n            ReceiptScreen.isShown(),\n        ].flat(),\n});\n", "/** @odoo-module **/\n\nimport * as Chrome from \"@point_of_sale/../tests/tours/helpers/ChromeTourMethods\";\nimport * as ProductScreen from \"@point_of_sale/../tests/tours/helpers/ProductScreenTourMethods\";\nimport { registry } from \"@web/core/registry\";\n\nregistry.category(\"web_tour.tours\").add(\"chrome_without_cash_move_permission\", {\n    test: true,\n    url: \"/pos/ui\",\n    steps: () =>\n        [\n            ProductScreen.confirmOpeningPopup(),\n            Chrome.clickMenuButton(),\n            Chrome.isCashMoveButtonHidden(),\n        ].flat(),\n});\n", "/** @odoo-module */\n\nimport * as ProductScreen from \"@point_of_sale/../tests/tours/helpers/ProductScreenTourMethods\";\nimport * as PaymentScreen from \"@point_of_sale/../tests/tours/helpers/PaymentScreenTourMethods\";\nimport * as ReceiptScreen from \"@point_of_sale/../tests/tours/helpers/ReceiptScreenTourMethods\";\nimport { registry } from \"@web/core/registry\";\n\nregistry.category(\"web_tour.tours\").add(\"FixedTaxNegativeQty\", {\n    test: true,\n    url: \"/pos/ui\",\n    steps: () =>\n        [\n            ProductScreen.clickHomeCategory(),\n\n            ProductScreen.clickDisplayedProduct(\"Zero Amount Product\"),\n            ProductScreen.selectedOrderlineHas(\"Zero Amount Product\", \"1.0\", \"1.0\"),\n            ProductScreen.pressNumpad(\"+/-\", \"1\"),\n            ProductScreen.selectedOrderlineHas(\"Zero Amount Product\", \"-1.0\", \"-1.0\"),\n\n            ProductScreen.clickPayButton(),\n            PaymentScreen.clickPaymentMethod(\"Bank\"),\n            PaymentScreen.remainingIs(\"0.00\"),\n            PaymentScreen.clickValidate(),\n\n            ReceiptScreen.receiptIsThere(),\n        ].flat(),\n});\n", "/** @odoo-module */\n\nimport * as Chrome from \"@point_of_sale/../tests/tours/helpers/ChromeTourMethods\";\nimport * as ErrorPopup from \"@point_of_sale/../tests/tours/helpers/ErrorPopupTourMethods\";\nimport * as ProductScreen from \"@point_of_sale/../tests/tours/helpers/ProductScreenTourMethods\";\nimport * as PaymentScreen from \"@point_of_sale/../tests/tours/helpers/PaymentScreenTourMethods\";\nimport * as TicketScreen from \"@point_of_sale/../tests/tours/helpers/TicketScreenTourMethods\";\nimport * as ReceiptScreen from \"@point_of_sale/../tests/tours/helpers/ReceiptScreenTourMethods\";\nimport { registry } from \"@web/core/registry\";\n\nregistry.category(\"web_tour.tours\").add(\"PaymentScreenTour\", {\n    test: true,\n    url: \"/pos/ui\",\n    steps: () =>\n        [\n            ProductScreen.addOrderline(\"Letter Tray\", \"10\"),\n            ProductScreen.selectedOrderlineHas(\"Letter Tray\", \"10.0\"),\n            ProductScreen.clickPayButton(),\n            PaymentScreen.emptyPaymentlines(\"52.8\"),\n\n            PaymentScreen.clickPaymentMethod(\"Cash\"),\n            PaymentScreen.enterPaymentLineAmount(\"Cash\", \"11\"),\n            PaymentScreen.selectedPaymentlineHas(\"Cash\", \"11.00\"),\n            PaymentScreen.remainingIs(\"41.8\"),\n            PaymentScreen.changeIs(\"0.0\"),\n            PaymentScreen.validateButtonIsHighlighted(false),\n            // remove the selected paymentline with multiple backspace presses\n            PaymentScreen.pressNumpad(\"\u232b \u232b\"),\n            PaymentScreen.fillPaymentLineAmountMobile(\"Cash\", \"0\"),\n            PaymentScreen.selectedPaymentlineHas(\"Cash\", \"0.00\"),\n            PaymentScreen.clickPaymentlineDelButton(\"Cash\", \"0\", true),\n            PaymentScreen.emptyPaymentlines(\"52.8\"),\n\n            // Pay with bank, the selected line should have full amount\n            PaymentScreen.clickPaymentMethod(\"Bank\"),\n            PaymentScreen.remainingIs(\"0.0\"),\n            PaymentScreen.changeIs(\"0.0\"),\n            PaymentScreen.validateButtonIsHighlighted(true),\n            // remove the line using the delete button\n            PaymentScreen.clickPaymentlineDelButton(\"Bank\", \"52.8\"),\n\n            // Use +10 and +50 to increment the amount of the paymentline\n            PaymentScreen.clickPaymentMethod(\"Cash\"),\n            PaymentScreen.pressNumpad(\"+10\"),\n            PaymentScreen.fillPaymentLineAmountMobile(\"Cash\", \"10\"),\n            PaymentScreen.remainingIs(\"42.8\"),\n            PaymentScreen.changeIs(\"0.0\"),\n            PaymentScreen.validateButtonIsHighlighted(false),\n            PaymentScreen.pressNumpad(\"+50\"),\n            PaymentScreen.fillPaymentLineAmountMobile(\"Cash\", \"60\"),\n            PaymentScreen.remainingIs(\"0.0\"),\n            PaymentScreen.changeIs(\"7.2\"),\n            PaymentScreen.validateButtonIsHighlighted(true),\n            PaymentScreen.clickPaymentlineDelButton(\"Cash\", \"60.0\"),\n\n            // Multiple paymentlines\n            PaymentScreen.clickPaymentMethod(\"Cash\"),\n            PaymentScreen.pressNumpad(\"1\"),\n            PaymentScreen.fillPaymentLineAmountMobile(\"Cash\", \"1\"),\n            PaymentScreen.remainingIs(\"51.8\"),\n            PaymentScreen.changeIs(\"0.0\"),\n            PaymentScreen.validateButtonIsHighlighted(false),\n            PaymentScreen.clickPaymentMethod(\"Bank\"),\n            PaymentScreen.fillPaymentLineAmountMobile(\"Bank\", \"5\"),\n            PaymentScreen.pressNumpad(\"5\"),\n            PaymentScreen.remainingIs(\"46.8\"),\n            PaymentScreen.changeIs(\"0.0\"),\n            PaymentScreen.validateButtonIsHighlighted(false),\n            PaymentScreen.clickPaymentMethod(\"Bank\"),\n            PaymentScreen.remainingIs(\"0.0\"),\n            PaymentScreen.changeIs(\"0.0\"),\n            PaymentScreen.validateButtonIsHighlighted(true),\n        ].flat(),\n});\n\nregistry.category(\"web_tour.tours\").add(\"PaymentScreenTour2\", {\n    test: true,\n    url: \"/pos/ui\",\n    steps: () =>\n        [\n            ProductScreen.clickHomeCategory(),\n            ProductScreen.addOrderline(\"Letter Tray\", \"1\", \"10\"),\n            ProductScreen.clickPayButton(),\n\n            PaymentScreen.clickPaymentMethod(\"Bank\"),\n            PaymentScreen.enterPaymentLineAmount(\"Bank\", \"1000\"),\n\n            PaymentScreen.remainingIs(\"0.0\"),\n            PaymentScreen.changeIs(\"0.0\"),\n        ].flat(),\n});\n\nregistry.category(\"web_tour.tours\").add(\"PaymentScreenRoundingUp\", {\n    test: true,\n    url: \"/pos/ui\",\n    steps: () =>\n        [\n            ProductScreen.clickHomeCategory(),\n            ProductScreen.addOrderline(\"Product Test\", \"1\"),\n            ProductScreen.clickPayButton(),\n\n            PaymentScreen.totalIs(\"2.00\"),\n            PaymentScreen.clickPaymentMethod(\"Cash\"),\n\n            PaymentScreen.remainingIs(\"0.0\"),\n            PaymentScreen.changeIs(\"0.0\"),\n\n            Chrome.clickMenuButton(),\n            Chrome.clickTicketButton(),\n            TicketScreen.clickNewTicket(),\n\n            ProductScreen.addOrderline(\"Product Test\", \"-1\"),\n            ProductScreen.clickPayButton(),\n\n            PaymentScreen.totalIs(\"-2.00\"),\n            PaymentScreen.clickPaymentMethod(\"Cash\"),\n\n            PaymentScreen.remainingIs(\"0.0\"),\n            PaymentScreen.changeIs(\"0.0\"),\n        ].flat(),\n});\n\nregistry.category(\"web_tour.tours\").add(\"PaymentScreenRoundingDown\", {\n    test: true,\n    url: \"/pos/ui\",\n    steps: () =>\n        [\n            ProductScreen.clickHomeCategory(),\n            ProductScreen.addOrderline(\"Product Test\", \"1\"),\n            ProductScreen.clickPayButton(),\n\n            PaymentScreen.totalIs(\"1.95\"),\n            PaymentScreen.clickPaymentMethod(\"Cash\"),\n\n            PaymentScreen.remainingIs(\"0.0\"),\n            PaymentScreen.changeIs(\"0.0\"),\n\n            Chrome.clickMenuButton(),\n            Chrome.clickTicketButton(),\n            TicketScreen.clickNewTicket(),\n\n            ProductScreen.addOrderline(\"Product Test\", \"-1\"),\n            ProductScreen.clickPayButton(),\n\n            PaymentScreen.totalIs(\"-1.95\"),\n            PaymentScreen.clickPaymentMethod(\"Cash\"),\n\n            PaymentScreen.remainingIs(\"0.0\"),\n            PaymentScreen.changeIs(\"0.0\"),\n        ].flat(),\n});\n\nregistry.category(\"web_tour.tours\").add(\"PaymentScreenRoundingHalfUp\", {\n    test: true,\n    url: \"/pos/ui\",\n    steps: () =>\n        [\n            ProductScreen.confirmOpeningPopup(),\n            ProductScreen.clickHomeCategory(),\n            ProductScreen.addOrderline(\"Product Test 1.2\", \"1\"),\n            ProductScreen.clickPayButton(),\n\n            PaymentScreen.totalIs(\"1.00\"),\n            PaymentScreen.clickPaymentMethod(\"Cash\"),\n\n            PaymentScreen.remainingIs(\"0.0\"),\n            PaymentScreen.changeIs(\"0.0\"),\n\n            Chrome.clickMenuButton(),\n            Chrome.clickTicketButton(),\n            TicketScreen.clickNewTicket(),\n\n            ProductScreen.addOrderline(\"Product Test 1.25\", \"1\"),\n            ProductScreen.clickPayButton(),\n\n            PaymentScreen.totalIs(\"1.5\"),\n            PaymentScreen.clickPaymentMethod(\"Cash\"),\n\n            PaymentScreen.remainingIs(\"0.0\"),\n            PaymentScreen.changeIs(\"0.0\"),\n\n            Chrome.clickMenuButton(),\n            Chrome.clickTicketButton(),\n            TicketScreen.clickNewTicket(),\n\n            ProductScreen.addOrderline(\"Product Test 1.4\", \"1\"),\n            ProductScreen.clickPayButton(),\n\n            PaymentScreen.totalIs(\"1.5\"),\n            PaymentScreen.clickPaymentMethod(\"Cash\"),\n\n            PaymentScreen.remainingIs(\"0.0\"),\n            PaymentScreen.changeIs(\"0.0\"),\n\n            Chrome.clickMenuButton(),\n            Chrome.clickTicketButton(),\n            TicketScreen.clickNewTicket(),\n\n            ProductScreen.addOrderline(\"Product Test 1.2\", \"1\"),\n            ProductScreen.clickPayButton(),\n\n            PaymentScreen.totalIs(\"1.00\"),\n            PaymentScreen.clickPaymentMethod(\"Cash\"),\n            PaymentScreen.pressNumpad(\"2\"),\n            PaymentScreen.fillPaymentLineAmountMobile(\"Cash\", \"2\"),\n\n            PaymentScreen.remainingIs(\"0.0\"),\n            PaymentScreen.changeIs(\"1.0\"),\n        ].flat(),\n});\n\nregistry.category(\"web_tour.tours\").add(\"PaymentScreenRoundingHalfUpCashAndBank\", {\n    test: true,\n    url: \"/pos/ui\",\n    steps: () =>\n        [\n            ProductScreen.confirmOpeningPopup(),\n            ProductScreen.clickHomeCategory(),\n            ProductScreen.addOrderline(\"Product Test 40\", \"1\"),\n            ProductScreen.clickPartnerButton(),\n            ProductScreen.clickCustomer(\"Partner Test 1\"),\n            ProductScreen.clickPayButton(),\n\n            PaymentScreen.totalIs(\"40.00\"),\n            PaymentScreen.clickPaymentMethod(\"Bank\"),\n            PaymentScreen.pressNumpad(\"3 8\"),\n            PaymentScreen.fillPaymentLineAmountMobile(\"Bank\", \"38\"),\n            PaymentScreen.remainingIs(\"2.0\"),\n            PaymentScreen.clickPaymentMethod(\"Cash\"),\n\n            PaymentScreen.remainingIs(\"0.0\"),\n            PaymentScreen.changeIs(\"0.0\"),\n\n            PaymentScreen.clickInvoiceButton(),\n            PaymentScreen.clickValidate(),\n            ReceiptScreen.receiptIsThere(),\n            ReceiptScreen.clickNextOrder(),\n\n            ProductScreen.clickHomeCategory(),\n            ProductScreen.addOrderline(\"Product Test 41\", \"1\"),\n            ProductScreen.clickPartnerButton(),\n            ProductScreen.clickCustomer(\"Partner Test 1\"),\n            ProductScreen.clickPayButton(),\n\n            PaymentScreen.totalIs(\"41.00\"),\n            PaymentScreen.clickPaymentMethod(\"Bank\"),\n            PaymentScreen.pressNumpad(\"3 8\"),\n            PaymentScreen.fillPaymentLineAmountMobile(\"Bank\", \"38\"),\n            PaymentScreen.remainingIs(\"3.0\"),\n            PaymentScreen.clickPaymentMethod(\"Cash\"),\n\n            PaymentScreen.remainingIs(\"0.0\"),\n            PaymentScreen.changeIs(\"0.0\"),\n\n            PaymentScreen.clickInvoiceButton(),\n            PaymentScreen.clickValidate(),\n            ReceiptScreen.receiptIsThere(),\n        ].flat(),\n});\n\nregistry.category(\"web_tour.tours\").add(\"PaymentScreenTotalDueWithOverPayment\", {\n    test: true,\n    url: \"/pos/ui\",\n    steps: () =>\n        [\n            ProductScreen.confirmOpeningPopup(),\n            ProductScreen.clickHomeCategory(),\n            ProductScreen.addOrderline(\"Product Test\", \"1\"),\n            ProductScreen.clickPayButton(),\n\n            PaymentScreen.totalIs(\"1.95\"),\n            PaymentScreen.clickPaymentMethod(\"Cash\"),\n            PaymentScreen.enterPaymentLineAmount(\"Cash\", \"5\"),\n            PaymentScreen.remainingIs(\"0.0\"),\n            PaymentScreen.changeIs(\"3.05\"),\n            PaymentScreen.totalDueIs(\"1.95\"),\n        ].flat(),\n});\n\nregistry.category(\"web_tour.tours\").add(\"CashRoundingPayment\", {\n    test: true,\n    steps: () =>\n        [\n            ProductScreen.confirmOpeningPopup(),\n            ProductScreen.clickHomeCategory(),\n            ProductScreen.addOrderline(\"Magnetic Board\", \"1\"),\n            ProductScreen.clickPayButton(),\n\n            // Check the popup error is shown when selecting another payment method\n            PaymentScreen.totalIs(\"1.90\"),\n            PaymentScreen.clickPaymentMethod(\"Cash\"),\n            PaymentScreen.pressNumpad(\"1 .\"),\n            PaymentScreen.pressNumpad(\"9 4\"),\n            PaymentScreen.fillPaymentLineAmountMobile(\"Cash\", \"1.94\"),\n            PaymentScreen.selectedPaymentlineHas(\"Cash\", \"1.94\"),\n            PaymentScreen.clickValidate(),\n            ErrorPopup.isShown(),\n        ].flat(),\n});\n", "/** @odoo-module */\n\nimport * as ProductScreen from \"@point_of_sale/../tests/tours/helpers/ProductScreenTourMethods\";\nimport * as PaymentScreen from \"@point_of_sale/../tests/tours/helpers/PaymentScreenTourMethods\";\nimport * as ReceiptScreen from \"@point_of_sale/../tests/tours/helpers/ReceiptScreenTourMethods\";\nimport * as combo from \"@point_of_sale/../tests/tours/helpers/ComboPopupMethods\";\nimport * as Order from \"@point_of_sale/../tests/tours/helpers/generic_components/OrderWidgetMethods\";\nimport { inLeftSide } from \"@point_of_sale/../tests/tours/helpers/utils\";\nimport { registry } from \"@web/core/registry\";\n\nregistry.category(\"web_tour.tours\").add(\"PosComboPriceTaxIncludedTour\", {\n    test: true,\n    url: \"/pos/ui\",\n    steps: () => [\n        ...ProductScreen.confirmOpeningPopup(),\n        ...ProductScreen.clickDisplayedProduct(\"Office Combo\"),\n        combo.isPopupShown(),\n        combo.select(\"Combo Product 3\"),\n        {\n            content: \"check that amount is not displayed if zero\",\n            trigger: `article.product .product-content:not(:has(.price-tag:contains(\"0\")))`,\n            isCheck: true,\n        },\n        {\n            content: \"check that amount is properly displayed when it is not 0\",\n            trigger: `article.product .product-content .product-name:contains(\"Combo Product 3\") ~.price-tag:contains(\"2.60\")`,\n            isCheck: true,\n        },\n        combo.isConfirmationButtonDisabled(),\n        combo.select(\"Combo Product 5\"),\n        combo.select(\"Combo Product 7\"),\n        combo.isSelected(\"Combo Product 7\"),\n        combo.select(\"Combo Product 8\"),\n        combo.isSelected(\"Combo Product 8\"),\n        combo.isNotSelected(\"Combo Product 7\"),\n        combo.confirm(),\n        ...ProductScreen.selectedOrderlineHas(\"Office Combo\"),\n        ...ProductScreen.clickOrderline(\"Combo Product 3\"),\n        ...ProductScreen.selectedOrderlineHas(\"Combo Product 3\", \"1.0\", \"13.43\"),\n        ...ProductScreen.clickOrderline(\"Combo Product 5\"),\n        ...ProductScreen.selectedOrderlineHas(\"Combo Product 5\", \"1.0\", \"18.67\"),\n        ...ProductScreen.clickOrderline(\"Combo Product 8\"),\n        ...ProductScreen.selectedOrderlineHas(\"Combo Product 8\", \"1.0\", \"30.00\"),\n\n        // check that there is no price shown on the parent line\n        ...inLeftSide(Order.doesNotHaveLine({productName: \"Office Combo\", price: \"0.0\"})),\n\n        // check that you can change the quantity of a combo product\n        ...ProductScreen.pressNumpad(\"2\"),\n        ...ProductScreen.clickOrderline(\"Combo Product 3\", \"2.0\"),\n        ...ProductScreen.selectedOrderlineHas(\"Combo Product 3\", \"2.0\", \"26.86\"),\n        ...ProductScreen.clickOrderline(\"Combo Product 5\", \"2.0\"),\n        ...ProductScreen.selectedOrderlineHas(\"Combo Product 5\", \"2.0\", \"37.34\"),\n        ...ProductScreen.clickOrderline(\"Combo Product 8\", \"2.0\"),\n        ...ProductScreen.selectedOrderlineHas(\"Combo Product 8\", \"2.0\", \"60.00\"),\n\n        // check that removing a combo product removes all the combo products\n        ...ProductScreen.pressNumpad(\"\u232b\"),\n        ...ProductScreen.pressNumpad(\"\u232b\"),\n        ...ProductScreen.orderIsEmpty(),\n\n        ...ProductScreen.clickDisplayedProduct(\"Office Combo\"),\n        combo.select(\"Combo Product 3\"),\n        combo.select(\"Combo Product 5\"),\n        combo.select(\"Combo Product 8\"),\n        combo.confirm(),\n        ...ProductScreen.totalAmountIs(\"62.10\"),\n        ...ProductScreen.clickPayButton(),\n        ...PaymentScreen.clickPaymentMethod(\"Bank\"),\n        ...PaymentScreen.clickValidate(),\n        ...ReceiptScreen.isShown(),\n        ...ReceiptScreen.clickNextOrder(),\n\n        // another order but won't be sent to the backend\n        ...ProductScreen.clickDisplayedProduct(\"Office Combo\"),\n        combo.select(\"Combo Product 2\"),\n        combo.select(\"Combo Product 4\"),\n        combo.select(\"Combo Product 6\"),\n        combo.confirm(),\n        ...ProductScreen.totalAmountIs(\"59.17\"),\n        ...inLeftSide(Order.hasTax(\"10.56\")),\n        // the split screen is tested in `pos_restaurant`\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"PosComboChangeFP\", {\n    test: true,\n    steps: () => [\n        ProductScreen.confirmOpeningPopup(),\n\n        ProductScreen.clickDisplayedProduct(\"Office Combo\"),\n        combo.select(\"Combo Product 2\"),\n        combo.select(\"Combo Product 4\"),\n        combo.select(\"Combo Product 6\"),\n        combo.confirm(),\n\n        ProductScreen.selectedOrderlineHas(\"Office Combo\"),\n        ProductScreen.clickOrderline(\"Combo Product 2\"),\n        ProductScreen.selectedOrderlineHas(\"Combo Product 2\", \"1.0\", \"8.33\"),\n        ProductScreen.clickOrderline(\"Combo Product 4\"),\n        ProductScreen.selectedOrderlineHas(\"Combo Product 4\", \"1.0\", \"16.67\"),\n        ProductScreen.clickOrderline(\"Combo Product 6\"),\n        ProductScreen.selectedOrderlineHas(\"Combo Product 6\", \"1.0\", \"25.00\"),\n        ProductScreen.totalAmountIs(\"50.00\"),\n        inLeftSide(Order.hasTax(\"4.55\")),\n\n        // Test than changing the fp, doesn't change the price of the combo\n        ProductScreen.changeFiscalPosition(\"test fp\"),\n        ProductScreen.clickOrderline(\"Office Combo\"),\n        ProductScreen.selectedOrderlineHas(\"Office Combo\"),\n        ProductScreen.clickOrderline(\"Combo Product 2\"),\n        ProductScreen.selectedOrderlineHas(\"Combo Product 2\", \"1.0\", \"8.33\"),\n        ProductScreen.clickOrderline(\"Combo Product 4\"),\n        ProductScreen.selectedOrderlineHas(\"Combo Product 4\", \"1.0\", \"16.67\"),\n        ProductScreen.clickOrderline(\"Combo Product 6\"),\n        ProductScreen.selectedOrderlineHas(\"Combo Product 6\", \"1.0\", \"25.00\"),\n        ProductScreen.totalAmountIs(\"50.00\"),\n        inLeftSide(Order.hasTax(\"2.38\")),\n        ProductScreen.isShown(),\n    ].flat(),\n});\n", "/** @odoo-module */\n\nimport * as ProductScreen from \"@point_of_sale/../tests/tours/helpers/ProductScreenTourMethods\";\nimport * as Chrome from \"@point_of_sale/../tests/tours/helpers/ChromeTourMethods\";\nimport * as ProductConfigurator from \"@point_of_sale/../tests/tours/helpers/ProductConfiguratorTourMethods\";\nimport * as PaymentScreen from \"@point_of_sale/../tests/tours/helpers/PaymentScreenTourMethods\";\nimport { registry } from \"@web/core/registry\";\nimport * as Order from \"@point_of_sale/../tests/tours/helpers/generic_components/OrderWidgetMethods\";\nimport { inLeftSide } from \"@point_of_sale/../tests/tours/helpers/utils\";\n\nregistry.category(\"web_tour.tours\").add(\"ProductConfiguratorTour\", {\n    test: true,\n    url: \"/pos/ui\",\n    steps: () =>\n        [\n            ProductScreen.confirmOpeningPopup(),\n            // Go by default to home category\n            ProductScreen.clickHomeCategory(),\n\n            // Click on Configurable Chair product\n            ProductScreen.clickDisplayedProduct(\"Configurable Chair\"),\n            ProductConfigurator.isShown(),\n\n            // Cancel configuration, not product should be in order\n            ProductConfigurator.cancelAttributes(),\n            ProductScreen.orderIsEmpty(),\n\n            // Click on Configurable Chair product\n            ProductScreen.clickDisplayedProduct(\"Configurable Chair\"),\n            ProductConfigurator.isShown(),\n\n            // Pick Color\n            ProductConfigurator.pickColor(\"Red\"),\n\n            // Pick Radio\n            ProductConfigurator.pickSelect(\"Metal\"),\n\n            // Pick Select\n            ProductConfigurator.pickRadio(\"Other\"),\n\n            // Fill in custom attribute\n            ProductConfigurator.fillCustomAttribute(\"Custom Fabric\"),\n\n            // Confirm configuration\n            ProductConfigurator.confirmAttributes(),\n\n            // Check that the product has been added to the order with correct attributes and price\n            ProductScreen.selectedOrderlineHas(\n                \"Configurable Chair (Red, Metal, Other: Custom Fabric)\",\n                \"1.0\",\n                \"11.0\"\n            ),\n\n            // Orderlines with the same attributes should be merged\n            ProductScreen.clickHomeCategory(),\n            ProductScreen.clickDisplayedProduct(\"Configurable Chair\"),\n            ProductConfigurator.pickColor(\"Red\"),\n            ProductConfigurator.pickSelect(\"Metal\"),\n            ProductConfigurator.pickRadio(\"Other\"),\n            ProductConfigurator.fillCustomAttribute(\"Custom Fabric\"),\n            ProductConfigurator.confirmAttributes(),\n            inLeftSide(Order.hasLine({\n                    withClass: \".selected\",\n                    productName: \"Configurable Chair\",\n                    quantity: \"2\",\n                    price: \"22.0\",\n                    atts: {\n                        \"Color\": \"Red ($ 1.00)\",\n                        \"Chair Legs\": \"Metal\",\n                        \"Fabrics\": \"Other\"\n                    }\n                })\n            ),\n            // Orderlines with different attributes shouldn't be merged\n            ProductScreen.clickHomeCategory(),\n            ProductScreen.clickDisplayedProduct(\"Configurable Chair\"),\n            ProductConfigurator.pickColor(\"Blue\"),\n            ProductConfigurator.pickSelect(\"Metal\"),\n            ProductConfigurator.pickRadio(\"Leather\"),\n            ProductConfigurator.confirmAttributes(),\n            ProductScreen.selectedOrderlineHas(\n                \"Configurable Chair\",\n                \"1.0\",\n                \"10.0\"\n            ),\n\n            // Inactive variant attributes should not be displayed\n            ProductScreen.clickHomeCategory(),\n            ProductScreen.clickDisplayedProduct('Configurable Chair'),\n            ProductConfigurator.isShown(),\n            // Active: Other and Leather, Inactive: Wool\n            ProductConfigurator.numberRadioOptions(2),\n            ProductConfigurator.confirmAttributes(),\n\n            ProductScreen.clickPayButton(),\n            PaymentScreen.clickPaymentMethod(\"Cash\"),\n            PaymentScreen.validateButtonIsHighlighted(true),\n            PaymentScreen.clickValidate(),\n            Chrome.endTour(),\n        ].flat(),\n});\n", "/** @odoo-module */\n\nimport * as PaymentScreen from \"@point_of_sale/../tests/tours/helpers/PaymentScreenTourMethods\";\nimport * as ProductScreen from \"@point_of_sale/../tests/tours/helpers/ProductScreenTourMethods\";\nimport * as Chrome from \"@point_of_sale/../tests/tours/helpers/ChromeTourMethods\";\nimport * as ReceiptScreen from \"@point_of_sale/../tests/tours/helpers/ReceiptScreenTourMethods\";\nimport { registry } from \"@web/core/registry\";\nimport * as Order from \"@point_of_sale/../tests/tours/helpers/generic_components/OrderWidgetMethods\";\nimport { inLeftSide, scan_barcode } from \"@point_of_sale/../tests/tours/helpers/utils\";\nimport * as ProductConfiguratorPopup from \"@point_of_sale/../tests/tours/helpers/ProductConfiguratorTourMethods\";\n\nregistry.category(\"web_tour.tours\").add(\"ProductScreenTour\", {\n    test: true,\n    url: \"/pos/ui\",\n    steps: () =>\n        [\n            // Go by default to home category\n            ProductScreen.clickHomeCategory(),\n\n            // Clicking product multiple times should increment quantity\n            ProductScreen.clickDisplayedProduct(\"Desk Organizer\"),\n            ProductScreen.selectedOrderlineHas(\"Desk Organizer\", \"1.0\", \"5.10\"),\n            ProductScreen.clickDisplayedProduct(\"Desk Organizer\"),\n            ProductScreen.selectedOrderlineHas(\"Desk Organizer\", \"2.0\", \"10.20\"),\n\n            // Clicking product should add new orderline and select the orderline\n            // If orderline exists, increment the quantity\n            ProductScreen.clickDisplayedProduct(\"Letter Tray\"),\n            ProductScreen.selectedOrderlineHas(\"Letter Tray\", \"1.0\", \"5.28\"),\n            ProductScreen.clickDisplayedProduct(\"Desk Organizer\"),\n            ProductScreen.selectedOrderlineHas(\"Desk Organizer\", \"3.0\", \"15.30\"),\n\n            // Check effects of clicking numpad buttons\n            ProductScreen.clickOrderline(\"Letter Tray\", \"1\"),\n            ProductScreen.selectedOrderlineHas(\"Letter Tray\", \"1.0\"),\n            ProductScreen.pressNumpad(\"\u232b\"),\n            ProductScreen.selectedOrderlineHas(\"Letter Tray\", \"0.0\", \"0.0\"),\n            ProductScreen.pressNumpad(\"\u232b\"),\n            ProductScreen.selectedOrderlineHas(\"Desk Organizer\", \"3\", \"15.30\"),\n            ProductScreen.pressNumpad(\"\u232b\"),\n            ProductScreen.selectedOrderlineHas(\"Desk Organizer\", \"0.0\", \"0.0\"),\n            ProductScreen.pressNumpad(\"1\"),\n            ProductScreen.selectedOrderlineHas(\"Desk Organizer\", \"1.0\", \"5.1\"),\n            ProductScreen.pressNumpad(\"2\"),\n            ProductScreen.selectedOrderlineHas(\"Desk Organizer\", \"12.0\", \"61.2\"),\n            ProductScreen.pressNumpad(\"3\"),\n            ProductScreen.selectedOrderlineHas(\"Desk Organizer\", \"123.0\", \"627.3\"),\n            ProductScreen.pressNumpad(\".\", \"5\"),\n            ProductScreen.selectedOrderlineHas(\"Desk Organizer\", \"123.5\", \"629.85\"),\n            ProductScreen.pressNumpad(\"Price\"),\n            ProductScreen.modeIsActive(\"Price\"),\n            ProductScreen.pressNumpad(\"1\"),\n            ProductScreen.selectedOrderlineHas(\"Desk Organizer\", \"123.5\", \"123.5\"),\n            ProductScreen.pressNumpad(\"1\", \".\"),\n            ProductScreen.selectedOrderlineHas(\"Desk Organizer\", \"123.5\", \"1,358.5\"),\n            ProductScreen.pressNumpad(\"% Disc\"),\n            ProductScreen.modeIsActive(\"% Disc\"),\n            ProductScreen.pressNumpad(\"5\", \".\"),\n            ProductScreen.selectedOrderlineHas(\"Desk Organizer\", \"123.5\", \"1,290.58\"),\n            ProductScreen.pressNumpad(\"Qty\"),\n            ProductScreen.pressNumpad(\"\u232b\"),\n            ProductScreen.pressNumpad(\"\u232b\"),\n            ProductScreen.orderIsEmpty(),\n\n            // Check different subcategories\n            ProductScreen.clickSubcategory(\"Desk test\"),\n            ProductScreen.productIsDisplayed(\"Desk Pad\"),\n            ProductScreen.clickHomeCategory(),\n            ProductScreen.clickSubcategory(\"Misc test\"),\n            ProductScreen.productIsDisplayed(\"Whiteboard Pen\"),\n            ProductScreen.clickHomeCategory(),\n            ProductScreen.clickSubcategory(\"Chair test\"),\n            ProductScreen.productIsDisplayed(\"Letter Tray\"),\n            ProductScreen.clickHomeCategory(),\n\n            // Add two orderlines and update quantity\n            ProductScreen.clickDisplayedProduct(\"Whiteboard Pen\"),\n            ProductScreen.clickDisplayedProduct(\"Wall Shelf Unit\"),\n            ProductScreen.clickOrderline(\"Whiteboard Pen\", \"1.0\"),\n            ProductScreen.pressNumpad(\"2\"),\n            ProductScreen.selectedOrderlineHas(\"Whiteboard Pen\", \"2.0\"),\n            ProductScreen.clickOrderline(\"Wall Shelf Unit\", \"1.0\"),\n            ProductScreen.pressNumpad(\"2\"),\n            ProductScreen.selectedOrderlineHas(\"Wall Shelf Unit\", \"2.0\"),\n            ProductScreen.pressNumpad(\"\u232b\"),\n            ProductScreen.selectedOrderlineHas(\"Wall Shelf Unit\", \"0.0\"),\n            ProductScreen.pressNumpad(\"\u232b\"),\n            ProductScreen.selectedOrderlineHas(\"Whiteboard Pen\", \"2.0\"),\n            ProductScreen.pressNumpad(\"\u232b\"),\n            ProductScreen.selectedOrderlineHas(\"Whiteboard Pen\", \"0.0\"),\n            ProductScreen.pressNumpad(\"\u232b\"),\n            ProductScreen.orderIsEmpty(),\n\n            // Add multiple orderlines then delete each of them until empty\n            ProductScreen.clickDisplayedProduct(\"Whiteboard Pen\"),\n            ProductScreen.clickDisplayedProduct(\"Wall Shelf Unit\"),\n            ProductScreen.clickDisplayedProduct(\"Small Shelf\"),\n            ProductScreen.clickDisplayedProduct(\"Magnetic Board\"),\n            ProductScreen.clickDisplayedProduct(\"Monitor Stand\"),\n            ProductScreen.clickOrderline(\"Whiteboard Pen\", \"1.0\"),\n            ProductScreen.pressNumpad(\"\u232b\"),\n            ProductScreen.selectedOrderlineHas(\"Whiteboard Pen\", \"0.0\"),\n            ProductScreen.pressNumpad(\"\u232b\"),\n            ProductScreen.selectedOrderlineHas(\"Monitor Stand\", \"1.0\"),\n            ProductScreen.clickOrderline(\"Wall Shelf Unit\", \"1.0\"),\n            ProductScreen.pressNumpad(\"\u232b\"),\n            ProductScreen.selectedOrderlineHas(\"Wall Shelf Unit\", \"0.0\"),\n            ProductScreen.pressNumpad(\"\u232b\"),\n            ProductScreen.selectedOrderlineHas(\"Monitor Stand\", \"1.0\"),\n            ProductScreen.clickOrderline(\"Small Shelf\", \"1.0\"),\n            ProductScreen.pressNumpad(\"\u232b\"),\n            ProductScreen.selectedOrderlineHas(\"Small Shelf\", \"0.0\"),\n            ProductScreen.pressNumpad(\"\u232b\"),\n            ProductScreen.selectedOrderlineHas(\"Monitor Stand\", \"1.0\"),\n            ProductScreen.clickOrderline(\"Magnetic Board\", \"1.0\"),\n            ProductScreen.pressNumpad(\"\u232b\"),\n            ProductScreen.selectedOrderlineHas(\"Magnetic Board\", \"0.0\"),\n            ProductScreen.pressNumpad(\"\u232b\"),\n            ProductScreen.selectedOrderlineHas(\"Monitor Stand\", \"1.0\"),\n            ProductScreen.pressNumpad(\"\u232b\"),\n            ProductScreen.selectedOrderlineHas(\"Monitor Stand\", \"0.0\"),\n            ProductScreen.pressNumpad(\"\u232b\"),\n            ProductScreen.orderIsEmpty(),\n\n            // Test OrderlineCustomerNoteButton\n            ProductScreen.clickDisplayedProduct(\"Desk Organizer\"),\n            ProductScreen.selectedOrderlineHas(\"Desk Organizer\", \"1.0\"),\n            ProductScreen.addCustomerNote(\"Test customer note\"),\n            inLeftSide(\n                Order.hasLine({\n                    productName: \"Desk Organizer\",\n                    quantity: \"1.0\",\n                    customerNote: \"Test customer note\",\n                    withClass: \".selected\",\n                })\n            ),\n            ProductScreen.isShown(),\n        ].flat(),\n});\n\nregistry.category(\"web_tour.tours\").add(\"FiscalPositionNoTax\", {\n    test: true,\n    url: \"/pos/ui\",\n    steps: () =>\n        [\n            ProductScreen.clickHomeCategory(),\n            ProductScreen.clickDisplayedProduct(\"Test Product\"),\n            ProductScreen.totalAmountIs(\"100.00\"),\n            ProductScreen.changeFiscalPosition(\"No Tax\"),\n            ProductScreen.noDiscountApplied(\"100.00\"),\n            ProductScreen.totalAmountIs(\"86.96\"),\n            ProductScreen.clickPayButton(),\n            PaymentScreen.clickPaymentMethod(\"Bank\"),\n            PaymentScreen.remainingIs(\"0.00\"),\n            PaymentScreen.clickValidate(),\n            ReceiptScreen.isShown(),\n            Order.doesNotHaveLine({ discount: \"\" }),\n        ].flat(),\n});\n\nregistry.category(\"web_tour.tours\").add(\"CashClosingDetails\", {\n    test: true,\n    url: \"/pos/ui\",\n    steps: () =>\n        [\n            ProductScreen.enterOpeningAmount(\"90\"),\n            ProductScreen.confirmOpeningPopup(),\n            ProductScreen.checkSecondCashClosingDetailsLineAmount(\"10.00\", \"-\"),\n        ].flat(),\n});\n\nregistry.category(\"web_tour.tours\").add(\"ShowTaxExcludedTour\", {\n    test: true,\n    url: \"/pos/ui\",\n    steps: () =>\n        [\n            ProductScreen.confirmOpeningPopup(),\n\n            ProductScreen.clickHomeCategory(),\n\n            ProductScreen.clickDisplayedProduct(\"Test Product\"),\n            ProductScreen.selectedOrderlineHas(\"Test Product\", \"1.0\", \"100.0\"),\n            ProductScreen.totalAmountIs(\"110.0\"),\n            Chrome.endTour(),\n        ].flat(),\n});\n\nregistry.category(\"web_tour.tours\").add(\"limitedProductPricelistLoading\", { \n    test: true, \n    url: \"/pos/ui\", \n    steps: () =>\n        [\n            ProductScreen.confirmOpeningPopup(),\n\n            scan_barcode(\"0100100\"),\n            ProductScreen.selectedOrderlineHas('Test Product 1', '1.0', '80.0'),\n\n            scan_barcode(\"0100200\"),\n            ProductScreen.selectedOrderlineHas('Test Product 2', '1.0', '100.0'),\n\n            scan_barcode(\"0100300\"),\n            ProductScreen.selectedOrderlineHas('Test Product 3', '1.0', '50.0'),\n            Chrome.endTour(),\n        ].flat(),\n});\n\nregistry.category(\"web_tour.tours\").add(\"MultiProductOptionsTour\", {\n    test: true,\n    steps: () =>\n        [\n            ProductScreen.confirmOpeningPopup(),\n\n            ProductScreen.clickDisplayedProduct(\"Product A\"),\n            ProductConfiguratorPopup.isOptionShown(\"Value 1\"),\n            ProductConfiguratorPopup.isOptionShown(\"Value 2\"),\n\n            Chrome.endTour(),\n        ].flat(),\n});\n", "/** @odoo-module */\n\nimport * as ProductScreen from \"@point_of_sale/../tests/tours/helpers/ProductScreenTourMethods\";\nimport * as ReceiptScreen from \"@point_of_sale/../tests/tours/helpers/ReceiptScreenTourMethods\";\nimport * as PaymentScreen from \"@point_of_sale/../tests/tours/helpers/PaymentScreenTourMethods\";\nimport * as Chrome from \"@point_of_sale/../tests/tours/helpers/ChromeTourMethods\";\nimport * as NumberPopup from \"@point_of_sale/../tests/tours/helpers/NumberPopupTourMethods\";\nimport * as Order from \"@point_of_sale/../tests/tours/helpers/generic_components/OrderWidgetMethods\";\nimport { registry } from \"@web/core/registry\";\nimport { nbsp } from \"@web/core/utils/strings\";\nimport { inLeftSide } from \"@point_of_sale/../tests/tours/helpers/utils\";\n\nregistry.category(\"web_tour.tours\").add(\"ReceiptScreenTour\", {\n    test: true,\n    url: \"/pos/ui\",\n    steps: () =>\n        [\n            // press close button in receipt screen\n            ProductScreen.addOrderline(\"Letter Tray\", \"10\", \"5\"),\n            ProductScreen.selectedOrderlineHas(\"Letter Tray\", \"10\"),\n            ProductScreen.clickPartnerButton(),\n            ProductScreen.clickCustomer(\"Addison Olson\"),\n            ProductScreen.clickPayButton(),\n            PaymentScreen.clickPaymentMethod(\"Bank\"),\n            PaymentScreen.validateButtonIsHighlighted(true),\n            PaymentScreen.clickShipLaterButton(),\n            PaymentScreen.shippingLaterHighlighted(),\n            PaymentScreen.clickValidate(),\n            ReceiptScreen.receiptIsThere(),\n            //receipt had expected delivery printed\n            ReceiptScreen.shippingDateExists(),\n            // letter tray has 10% tax (search SRC)\n            ReceiptScreen.totalAmountContains(\"55.0\"),\n            ReceiptScreen.clickNextOrder(),\n\n            // send email in receipt screen\n            ProductScreen.clickHomeCategory(),\n            ProductScreen.addOrderline(\"Desk Pad\", \"6\", \"5\", \"30.0\"),\n            ProductScreen.addOrderline(\"Whiteboard Pen\", \"6\", \"6\", \"36.0\"),\n            ProductScreen.addOrderline(\"Monitor Stand\", \"6\", \"1\", \"6.0\"),\n            ProductScreen.clickPayButton(),\n            PaymentScreen.clickPaymentMethod(\"Cash\"),\n            PaymentScreen.enterPaymentLineAmount(\"Cash\", \"70\"),\n            PaymentScreen.remainingIs(\"2.0\"),\n            PaymentScreen.pressNumpad(\"0\"),\n            PaymentScreen.fillPaymentLineAmountMobile(\"Cash\", \"700\"),\n            PaymentScreen.remainingIs(\"0.00\"),\n            PaymentScreen.changeIs(\"628.0\"),\n            PaymentScreen.clickValidate(),\n            ReceiptScreen.receiptIsThere(),\n            ReceiptScreen.totalAmountContains(\"72.0\"),\n            ReceiptScreen.setEmail(\"test@receiptscreen.com\"),\n            ReceiptScreen.clickSend(),\n            ReceiptScreen.emailIsSuccessful(),\n            ReceiptScreen.clickNextOrder(),\n\n            // order with tip\n            // check if tip amount is displayed\n            ProductScreen.addOrderline(\"Desk Pad\", \"6\", \"5\"),\n            ProductScreen.clickPayButton(),\n            PaymentScreen.clickTipButton(),\n            NumberPopup.enterValue(\"1\"),\n            NumberPopup.inputShownIs(\"1\"),\n            NumberPopup.clickConfirm(),\n            PaymentScreen.emptyPaymentlines(\"31.0\"),\n            PaymentScreen.clickPaymentMethod(\"Cash\"),\n            PaymentScreen.clickValidate(),\n            ReceiptScreen.receiptIsThere(),\n            ReceiptScreen.totalAmountContains(`$${nbsp}30.00 + $${nbsp}1.00 tip`),\n            ReceiptScreen.clickNextOrder(),\n\n            // Test customer note in receipt\n            ProductScreen.addOrderline(\"Desk Pad\", \"1\", \"5\"),\n            ProductScreen.addCustomerNote(\"Test customer note\"),\n            ProductScreen.clickPayButton(),\n            PaymentScreen.clickPaymentMethod(\"Bank\"),\n            PaymentScreen.clickValidate(),\n            Order.hasLine({ customerNote: \"Test customer note\" }),\n            ReceiptScreen.clickNextOrder(),\n        ].flat(),\n});\n\nregistry.category(\"web_tour.tours\").add(\"ReceiptScreenDiscountWithPricelistTour\", {\n    test: true,\n    url: \"/pos/ui\",\n    steps: () =>\n        [\n            ProductScreen.confirmOpeningPopup(),\n            ProductScreen.clickHomeCategory(),\n            ProductScreen.addOrderline(\"Test Product\", \"1\"),\n            ProductScreen.selectPriceList(\"special_pricelist\"),\n            inLeftSide(Order.hasLine({ productName: \"Test Product\", oldPrice: \"7.0\" })),\n            ProductScreen.clickPayButton(),\n            PaymentScreen.clickPaymentMethod(\"Cash\"),\n            PaymentScreen.clickValidate(),\n            Order.hasLine({ oldPrice: \"7\" }),\n        ].flat(),\n});\n\nregistry.category(\"web_tour.tours\").add(\"OrderPaidInCash\", {\n    test: true,\n    url: \"/pos/ui\",\n    steps: () =>\n        [\n            ProductScreen.confirmOpeningPopup(),\n            ProductScreen.addOrderline(\"Desk Pad\", \"5\", \"5\"),\n            ProductScreen.selectedOrderlineHas(\"Desk Pad\", \"5\"),\n            ProductScreen.clickPayButton(),\n            PaymentScreen.clickPaymentMethod(\"Cash\"),\n            PaymentScreen.validateButtonIsHighlighted(true),\n            PaymentScreen.clickValidate(),\n            ReceiptScreen.receiptIsThere(),\n            ReceiptScreen.clickNextOrder(),\n            ProductScreen.isShown(),\n            // Close the session\n            Chrome.clickMenuButton(),\n            ProductScreen.clickCloseButton(),\n            ProductScreen.closeWithCashAmount(\"25\"),\n            ProductScreen.cashDifferenceIs(\"0.00\"),\n            ProductScreen.clickCloseSession(),\n            ProductScreen.lastClosingCashIs(\"25.00\"),\n        ].flat(),\n});\n\nregistry.category(\"web_tour.tours\").add(\"ReceiptTrackingMethodTour\", {\n    test: true,\n    url: \"/pos/ui\",\n    steps: () =>\n        [\n            ProductScreen.confirmOpeningPopup(),\n            ProductScreen.clickHomeCategory(),\n            ProductScreen.clickDisplayedProduct(\"Product A\"),\n            ProductScreen.enterLotNumber(\"123456789\"),\n            ProductScreen.clickPayButton(),\n            PaymentScreen.clickPaymentMethod(\"Cash\"),\n            PaymentScreen.clickValidate(),\n            ReceiptScreen.trackingMethodIsLot(),\n        ].flat(),\n});\n", "/** @odoo-module */\n\nimport * as ProductScreen from \"@point_of_sale/../tests/tours/helpers/ProductScreenTourMethods\";\nimport * as ReceiptScreen from \"@point_of_sale/../tests/tours/helpers/ReceiptScreenTourMethods\";\nimport * as PaymentScreen from \"@point_of_sale/../tests/tours/helpers/PaymentScreenTourMethods\";\nimport * as PartnerListScreen from \"@point_of_sale/../tests/tours/helpers/PartnerListScreenTourMethods\";\nimport * as TicketScreen from \"@point_of_sale/../tests/tours/helpers/TicketScreenTourMethods\";\nimport * as Order from \"@point_of_sale/../tests/tours/helpers/generic_components/OrderWidgetMethods\";\nimport * as ErrorPopup from \"@point_of_sale/../tests/tours/helpers/ErrorPopupTourMethods\";\nimport * as Chrome from \"@point_of_sale/../tests/tours/helpers/ChromeTourMethods\";\nimport { inLeftSide } from \"@point_of_sale/../tests/tours/helpers/utils\";\nimport { registry } from \"@web/core/registry\";\n\nregistry.category(\"web_tour.tours\").add(\"TicketScreenTour\", {\n    test: true,\n    url: \"/pos/ui\",\n    steps: () =>\n        [\n            ProductScreen.confirmOpeningPopup(),\n            ProductScreen.clickHomeCategory(),\n            Chrome.clickMenuButton(),\n            Chrome.clickTicketButton(),\n            TicketScreen.clickNewTicket(),\n            ProductScreen.addOrderline(\"Desk Pad\", \"1\", \"3\"),\n            Chrome.clickMenuButton(),\n            Chrome.clickTicketButton(),\n            TicketScreen.deleteOrder(\"-0002\"),\n            Chrome.confirmPopup(),\n            TicketScreen.clickDiscard(),\n            ProductScreen.orderIsEmpty(),\n            ProductScreen.addOrderline(\"Desk Pad\", \"1\", \"2\"),\n            Chrome.clickMenuButton(),\n            Chrome.clickTicketButton(),\n            TicketScreen.deleteOrder(\"-0001\"),\n            Chrome.confirmPopup(),\n            TicketScreen.clickDiscard(),\n            Chrome.clickMenuButton(),\n            Chrome.clickTicketButton(),\n            TicketScreen.nthRowContains(2, \"-0003\"),\n            TicketScreen.clickDiscard(),\n            ProductScreen.addOrderline(\"Desk Pad\", \"1\", \"2\"),\n            ProductScreen.clickPartnerButton(),\n            ProductScreen.clickCustomer(\"Partner Test 1\"),\n            Chrome.clickMenuButton(),\n            Chrome.clickTicketButton(),\n            TicketScreen.nthRowContains(2, \"Partner Test 1\", false),\n            TicketScreen.clickNewTicket(),\n            ProductScreen.addOrderline(\"Desk Pad\", \"1\", \"3\"),\n            ProductScreen.clickPartnerButton(),\n            ProductScreen.clickCustomer(\"Partner Test 2\"),\n            ProductScreen.clickPayButton(),\n            PaymentScreen.isShown(),\n            Chrome.clickMenuButton(),\n            Chrome.clickTicketButton(),\n            TicketScreen.nthRowContains(3, \"Partner Test 2\", false),\n            TicketScreen.clickNewTicket(),\n            ProductScreen.addOrderline(\"Desk Pad\", \"2\", \"4\"),\n            ProductScreen.clickPayButton(),\n            PaymentScreen.clickPaymentMethod(\"Bank\"),\n            PaymentScreen.clickValidate(),\n            ReceiptScreen.isShown(),\n            Chrome.clickMenuButton(),\n            Chrome.clickTicketButton(),\n            TicketScreen.nthRowContains(4, \"Receipt\"),\n            TicketScreen.selectFilter(\"Receipt\"),\n            TicketScreen.nthRowContains(2, \"Receipt\"),\n            TicketScreen.selectFilter(\"Payment\"),\n            TicketScreen.nthRowContains(2, \"Payment\"),\n            TicketScreen.selectFilter(\"Ongoing\"),\n            TicketScreen.nthRowContains(2, \"Ongoing\"),\n            TicketScreen.selectFilter(\"All active orders\"),\n            TicketScreen.nthRowContains(4, \"Receipt\"),\n            TicketScreen.search(\"Receipt Number\", \"-0005\"),\n            TicketScreen.nthRowContains(2, \"Receipt\"),\n            TicketScreen.search(\"Customer\", \"Partner Test 1\"),\n            TicketScreen.nthRowContains(2, \"Partner Test 1\", false),\n            TicketScreen.search(\"Customer\", \"Partner Test 2\"),\n            TicketScreen.nthRowContains(2, \"Partner Test 2\", false),\n            // Close the TicketScreen to see the current order which is in ReceiptScreen.\n            // This is just to remove the search string in the search bar.\n            TicketScreen.clickDiscard(),\n            ReceiptScreen.isShown(),\n            // Open again the TicketScreen to check the Paid filter.\n            Chrome.clickMenuButton(),\n            Chrome.clickTicketButton(),\n            TicketScreen.selectFilter(\"Paid\"),\n            TicketScreen.nthRowContains(2, \"-0005\"),\n            TicketScreen.selectOrder(\"-0005\"),\n            TicketScreen.clickControlButton(\"Print Receipt\"),\n            TicketScreen.receiptTotalIs(\"8.00\"),\n            ReceiptScreen.clickBack(),\n            TicketScreen.clickBackToMainTicketScreen(),\n            // Pay the order that was in PaymentScreen.\n            TicketScreen.selectFilter(\"Payment\"),\n            TicketScreen.selectOrder(\"-0004\"),\n            TicketScreen.loadSelectedOrder(),\n            PaymentScreen.clickPaymentMethod(\"Cash\"),\n            PaymentScreen.clickValidate(),\n            ReceiptScreen.isShown(),\n            ReceiptScreen.clickNextOrder(),\n            ProductScreen.isShown(),\n            // Check that the Paid filter will show the 2 synced orders.\n            Chrome.clickMenuButton(),\n            Chrome.clickTicketButton(),\n            TicketScreen.selectFilter(\"Paid\"),\n            TicketScreen.nthRowContains(2, \"Partner Test 2\", false),\n            TicketScreen.nthRowContains(3, \"-0005\"),\n            // Invoice order\n            TicketScreen.selectOrder(\"-0005\"),\n            inLeftSide(Order.hasLine()),\n            TicketScreen.clickControlButton(\"Invoice\"),\n            Chrome.confirmPopup(),\n            PartnerListScreen.isShown(),\n            PartnerListScreen.clickPartner(\"Partner Test 3\"),\n            TicketScreen.invoicePrinted(),\n            TicketScreen.clickBackToMainTicketScreen(),\n            TicketScreen.partnerIs(\"Partner Test 3\"),\n            // Reprint receipt\n            TicketScreen.clickControlButton(\"Print Receipt\"),\n            ReceiptScreen.isShown(),\n            ReceiptScreen.clickBack(),\n            TicketScreen.clickBackToMainTicketScreen(),\n            // When going back, the ticket screen should be in its previous state.\n            TicketScreen.filterIs(\"Paid\"),\n            // Test refund //\n            TicketScreen.clickDiscard(),\n            ProductScreen.isShown(),\n            ProductScreen.orderIsEmpty(),\n            ProductScreen.clickRefund(),\n            // Filter should be automatically 'Paid'.\n            TicketScreen.filterIs(\"Paid\"),\n            TicketScreen.selectOrder(\"-0005\"),\n            TicketScreen.partnerIs(\"Partner Test 3\"),\n            inLeftSide(Order.hasLine({ productName: \"Desk Pad\", withClass: \".selected\" })),\n            ProductScreen.pressNumpad(\"3\"),\n            // Error should show because 2 is more than the number\n            // that can be refunded.\n            ErrorPopup.clickConfirm(),\n            TicketScreen.clickDiscard(),\n            ProductScreen.goBackToMainScreen(),\n            ProductScreen.isShown(),\n            ProductScreen.orderIsEmpty(),\n            ProductScreen.clickRefund(),\n            TicketScreen.selectOrder(\"-0005\"),\n            inLeftSide(Order.hasLine({ productName: \"Desk Pad\", withClass: \".selected\" })),\n            ProductScreen.pressNumpad(\"1\"),\n            TicketScreen.toRefundTextContains(\"To Refund: 1.00\"),\n            TicketScreen.confirmRefund(),\n            ProductScreen.goBackToMainScreen(),\n            ProductScreen.isShown(),\n            ProductScreen.selectedOrderlineHas(\"Desk Pad\", \"-1.00\"),\n            // Try changing the refund line to positive number.\n            // Error popup should show.\n            ProductScreen.pressNumpad(\"2\"),\n            ErrorPopup.clickConfirm(),\n            // Change the refund line quantity to -3 -- not allowed\n            // so error popup.\n            ProductScreen.pressNumpad(\"+/-\", \"3\"),\n            ErrorPopup.clickConfirm(),\n            // Change the refund line quantity to -2 -- allowed.\n            ProductScreen.pressNumpad(\"+/-\", \"2\"),\n            ProductScreen.selectedOrderlineHas(\"Desk Pad\", \"-2.00\"),\n            // Check if the amount being refunded changed to 2.\n            ProductScreen.clickRefund(),\n            TicketScreen.selectOrder(\"-0005\"),\n            TicketScreen.toRefundTextContains(\"Refunding 2.00\"),\n            TicketScreen.clickDiscard(),\n            ProductScreen.goBackToMainScreen(),\n            // Pay the refund order.\n            ProductScreen.clickPayButton(),\n            PaymentScreen.clickPaymentMethod(\"Bank\"),\n            PaymentScreen.clickValidate(),\n            ReceiptScreen.isShown(),\n            ReceiptScreen.clickNextOrder(),\n            // Check refunded quantity.\n            ProductScreen.clickRefund(),\n            TicketScreen.selectOrder(\"-0005\"),\n            TicketScreen.refundedNoteContains(\"2.00 Refunded\"),\n        ].flat(),\n});\n\nregistry.category(\"web_tour.tours\").add(\"FiscalPositionNoTaxRefund\", {\n    test: true,\n    url: \"/pos/ui\",\n    steps: () =>\n        [\n            ProductScreen.confirmOpeningPopup(),\n            ProductScreen.clickHomeCategory(),\n            ProductScreen.clickDisplayedProduct(\"Product Test\"),\n            ProductScreen.totalAmountIs(\"100.00\"),\n            ProductScreen.changeFiscalPosition(\"No Tax\"),\n            ProductScreen.totalAmountIs(\"86.96\"),\n            ProductScreen.clickPayButton(),\n            PaymentScreen.clickPaymentMethod(\"Bank\"),\n            PaymentScreen.remainingIs(\"0.00\"),\n            PaymentScreen.clickValidate(),\n            ReceiptScreen.isShown(),\n            ReceiptScreen.clickNextOrder(),\n            ProductScreen.clickRefund(),\n            TicketScreen.selectOrder(\"-0001\"),\n            ProductScreen.pressNumpad(\"1\"),\n            TicketScreen.toRefundTextContains(\"To Refund: 1.00\"),\n            TicketScreen.confirmRefund(),\n            ProductScreen.isShown(),\n            ProductScreen.goBackToMainScreen(),\n            ProductScreen.totalAmountIs(\"-86.96\"),\n        ].flat(),\n});\n\nregistry.category(\"web_tour.tours\").add(\"LotRefundTour\", {\n    test: true,\n    url: \"/pos/ui\",\n    steps: () =>\n        [\n            ProductScreen.confirmOpeningPopup(),\n            ProductScreen.clickHomeCategory(),\n            ProductScreen.clickDisplayedProduct(\"Product A\"),\n            ProductScreen.enterLotNumber(\"123456789\"),\n            ProductScreen.selectedOrderlineHas(\"Product A\", \"1.00\"),\n            ProductScreen.clickPayButton(),\n            PaymentScreen.clickPaymentMethod(\"Bank\"),\n            PaymentScreen.clickValidate(),\n            ReceiptScreen.isShown(),\n            ReceiptScreen.clickNextOrder(),\n            ProductScreen.clickRefund(),\n            TicketScreen.selectOrder(\"-0001\"),\n            ProductScreen.pressNumpad(\"1\"),\n            TicketScreen.toRefundTextContains(\"To Refund: 1.00\"),\n            TicketScreen.confirmRefund(),\n            ProductScreen.isShown(),\n            ProductScreen.clickLotIcon(),\n            ProductScreen.checkFirstLotNumber(\"123456789\"),\n        ].flat(),\n});\n\nregistry.category(\"web_tour.tours\").add(\"FiscalPositionTwoTaxIncluded\", {\n    test: true,\n    steps: () =>\n        [\n            ProductScreen.confirmOpeningPopup(),\n            ProductScreen.clickHomeCategory(),\n            ProductScreen.clickDisplayedProduct(\"Test Product\"),\n            ProductScreen.checkTaxAmount(\"9.09\"),\n            ProductScreen.totalAmountIs(\"100.00\"),\n            ProductScreen.changeFiscalPosition(\"test fp\"),\n            ProductScreen.totalAmountIs(\"100.00\"),\n            ProductScreen.checkTaxAmount(\"4.76\"),\n            ProductScreen.isShown(),\n        ].flat(),\n});\n", "/** @odoo-module */\n\nimport * as ProductScreen from \"@point_of_sale/../tests/tours/helpers/ProductScreenTourMethods\";\nimport * as Numpad from \"@point_of_sale/../tests/tours/helpers/NumpadTourMethods\";\nimport { registry } from \"@web/core/registry\";\nimport * as Order from \"@point_of_sale/../tests/tours/helpers/generic_components/OrderWidgetMethods\";\n\nfunction add_product_to_order(product_name) {\n    return [\n        {\n            content: \"buy \" + product_name,\n            trigger: '.product-list .product-name:contains(\"' + product_name + '\")',\n        },\n        ProductScreen.clickReview(),\n        ...Order.hasLine({ productName: product_name }),\n        {\n            content: \"go back to the products\",\n            trigger: \".floor-button\",\n            mobile: true,\n        },\n    ];\n}\n\nfunction set_fiscal_position_on_order(fp_name) {\n    return [\n        ProductScreen.clickReview(),\n        {\n            content: \"click more button\",\n            trigger: \".mobile-more-button\",\n            mobile: true,\n        },\n        {\n            content: \"set fiscal position\",\n            trigger: \".control-button.o_fiscal_position_button\",\n        },\n        {\n            content: \"choose fiscal position \" + fp_name + \" to add to the order\",\n            trigger: '.popups .popup .selection .selection-item:contains(\"' + fp_name + '\")',\n        },\n        {\n            content: \"click more button\",\n            trigger: \".mobile-more-button\",\n            mobile: true,\n        },\n        {\n            content: \"the fiscal position \" + fp_name + \" has been set to the order\",\n            trigger: '.control-button.o_fiscal_position_button:contains(\"' + fp_name + '\")',\n            run: function () {},\n        },\n        {\n            content: \"go back to the products\",\n            trigger: \".floor-button\",\n            mobile: true,\n        },\n    ];\n}\n\nfunction press_payment_numpad(val) {\n    return [{ ...Numpad.click(val), mobile: false }];\n}\n\nfunction fillPaymentLineAmountMobile(lineName, keys) {\n    return [\n        {\n            content: \"click payment line\",\n            trigger: `.paymentlines .paymentline .payment-infos:contains(\"${lineName}\")`,\n            mobile: true,\n        },\n        {\n            content: `'${keys}' inputed in the number popup`,\n            trigger: \".popup .payment-input-number\",\n            run: `text ${keys}`,\n            mobile: true,\n        },\n        {\n            content: \"click confirm button\",\n            trigger: \".popup .footer .confirm\",\n            mobile: true,\n        },\n    ];\n}\n\nfunction fillPaymentValue(lineName, val) {\n    return [...press_payment_numpad(val), ...fillPaymentLineAmountMobile(lineName, val)];\n}\n\nfunction press_product_numpad(val) {\n    return [\n        ProductScreen.clickReview(),\n        Numpad.click(val),\n        {\n            content: \"go back to the products\",\n            trigger: \".floor-button\",\n            mobile: true,\n        },\n    ];\n}\n\nfunction selected_payment_has(name, val) {\n    return [\n        {\n            content: `selected payment is ${name} and has ${val}`,\n            trigger: `.paymentlines .paymentline.selected .payment-name:contains(\"${name}\")`,\n            extra_trigger: `.paymentlines .paymentline.selected .payment-name:contains(\"${name}\") ~ .payment-amount:contains(\"${val}\")`,\n            run: function () {},\n        },\n    ];\n}\n\nfunction selected_orderline_has({ product, price = null, quantity = null }) {\n    return [\n        ProductScreen.clickReview(),\n        ...Order.hasLine({ productName: product, quantity, price, withClass: \".selected\" }),\n        {\n            content: \"go back to the products\",\n            trigger: \".floor-button\",\n            mobile: true,\n        },\n    ];\n}\n\nfunction verify_order_total(total_str) {\n    return [\n        ProductScreen.clickReview(),\n        Order.hasTotal(total_str),\n        {\n            content: \"go back to the products\",\n            trigger: \".floor-button\",\n            mobile: true,\n        },\n    ];\n}\n\nfunction goto_payment_screen_and_select_payment_method() {\n    return [\n        {\n            content: \"go to payment screen\",\n            trigger: \".button.pay-order-button\",\n            mobile: false,\n        },\n        {\n            content: \"go to payment screen\",\n            trigger: \".btn-switchpane:contains('Pay')\",\n            mobile: true,\n        },\n        {\n            content: \"pay with cash\",\n            trigger: '.paymentmethod:contains(\"Cash\")',\n        },\n    ];\n}\n\nfunction finish_order() {\n    return [\n        {\n            content: \"validate the order\",\n            trigger: \".payment-screen .button.next.highlight:visible\",\n            mobile: false,\n        },\n        {\n            content: \"validate the order\",\n            trigger: \".payment-screen .btn-switchpane:contains('Validate')\",\n            mobile: true,\n        },\n        {\n            content: \"verify that the order has been successfully sent to the backend\",\n            trigger: \".js_connected:visible\",\n            run: function () {},\n        },\n        {\n            content: \"click Next Order\",\n            trigger: \".receipt-screen .button.next.highlight:visible\",\n            mobile: false,\n        },\n        {\n            content: \"Click Next Order\",\n            trigger: \".receipt-screen .btn-switchpane.validation-button.highlight[name='done']\",\n            mobile: true,\n        },\n        {\n            content: \"check if we left the receipt screen\",\n            trigger: \".pos-content div:not(:has(.receipt-screen))\",\n            run: function () {},\n        },\n    ];\n}\n\nvar steps = [\n    {\n        content: \"waiting for loading to finish\",\n        trigger: \"body:not(:has(.loader))\",\n        run: function () {},\n    },\n];\nsteps = steps.concat(...ProductScreen.clickHomeCategory());\nsteps = steps.concat(add_product_to_order(\"Desk Organizer\"));\nsteps = steps.concat(verify_order_total(\"5.10\"));\n\nsteps = steps.concat(add_product_to_order(\"Desk Organizer\"));\nsteps = steps.concat(verify_order_total(\"10.20\"));\nsteps = steps.concat(goto_payment_screen_and_select_payment_method());\n\n/*  add payment line of only 5.20\n        status:\n            order-total := 10.20\n            total-payment := 11.70\n        expect:\n            remaining := 0.00\n            change := 1.50\n    */\nsteps = steps.concat(fillPaymentValue(\"Cash\", \"5\"));\nsteps = steps.concat(selected_payment_has(\"Cash\", \"5.0\"));\nsteps = steps.concat([\n    {\n        content: \"verify remaining\",\n        trigger: '.payment-status-remaining .amount:contains(\"5.20\")',\n        run: function () {},\n    },\n    {\n        content: \"verify change\",\n        trigger: '.payment-status-change .amount:contains(\"0.00\")',\n        run: function () {},\n    },\n]);\n\n/*  make additional payment line of 6.50\n        status:\n            order-total := 10.20\n            total-payment := 11.70\n        expect:\n            remaining := 0.00\n            change := 1.50\n    */\nsteps = steps.concat([\n    {\n        content: \"pay with cash\",\n        trigger: '.paymentmethod:contains(\"Bank\")',\n    },\n]);\nsteps = steps.concat(selected_payment_has(\"Bank\", \"5.2\"));\nsteps = steps.concat(fillPaymentValue(\"Bank\", \"6\"));\nsteps = steps.concat(selected_payment_has(\"Bank\", \"6.0\"));\nsteps = steps.concat([\n    {\n        content: \"verify remaining\",\n        trigger: '.payment-status-remaining .amount:contains(\"0.00\")',\n        run: function () {},\n    },\n    {\n        content: \"verify change\",\n        trigger: '.payment-status-change .amount:contains(\"0.80\")',\n        run: function () {},\n    },\n]);\n\nsteps = steps.concat(finish_order());\n\n// test opw-672118 orderline subtotal rounding\nsteps = steps.concat(add_product_to_order(\"Desk Organizer\"));\nsteps = steps.concat(selected_orderline_has({ product: \"Desk Organizer\", quantity: \"1.0\" }));\nsteps = steps.concat(press_product_numpad(\".\"));\nsteps = steps.concat(\n    selected_orderline_has({ product: \"Desk Organizer\", quantity: \"0.0\", price: \"0.0\" })\n);\nsteps = steps.concat(press_product_numpad(\"9\"));\nsteps = steps.concat(\n    selected_orderline_has({ product: \"Desk Organizer\", quantity: \"0.9\", price: \"4.59\" })\n);\nsteps = steps.concat(press_product_numpad(\"9\"));\nsteps = steps.concat(\n    selected_orderline_has({ product: \"Desk Organizer\", quantity: \"0.99\", price: \"5.05\" })\n);\nsteps = steps.concat(goto_payment_screen_and_select_payment_method());\nsteps = steps.concat(selected_payment_has(\"Cash\", \"5.05\"));\nsteps = steps.concat(finish_order());\n\n// Test fiscal position one2many map (align with backend)\nsteps = steps.concat(add_product_to_order(\"Letter Tray\"));\nsteps = steps.concat(selected_orderline_has({ product: \"Letter Tray\", quantity: \"1.0\" }));\nsteps = steps.concat(verify_order_total(\"5.28\"));\nsteps = steps.concat(set_fiscal_position_on_order(\"FP-POS-2M\"));\nsteps = steps.concat(verify_order_total(\"5.52\"));\n\nsteps = steps.concat([\n    {\n        content: \"open the navbar menu\",\n        trigger: \".menu-button\",\n    },\n    {\n        content: \"open closing the Point of Sale frontend popup\",\n        trigger: \".close-button\",\n    },\n    {\n        content: \"close the Point of Sale frontend\",\n        trigger: \".close-pos-popup .button:contains('Discard')\",\n        run: function () {}, //it's a check,\n    },\n]);\n\nregistry\n    .category(\"web_tour.tours\")\n    .add(\"pos_basic_order\", { test: true, url: \"/pos/ui\", steps: () => steps });\n", "/** @odoo-module */\n\nexport function confirmPopup() {\n    return [\n        {\n            content: \"confirm popup\",\n            trigger: \".popups .modal-dialog .button.confirm\",\n        },\n    ];\n}\nexport function clickTicketButton() {\n    return [\n        {\n            trigger: \".pos-topheader .ticket-button\",\n        },\n        {\n            trigger: \".screen.ticket-screen\",\n            run: () => {},\n        },\n    ];\n}\nexport function clickMenuButton() {\n    return [\n        {\n            content: \"Click on the menu button\",\n            trigger: \".menu-button\",\n        },\n    ];\n}\nexport function closeSession() {\n    return [\n        ...clickMenuButton(),\n        {\n            content: \"click on the close session menu button\",\n            trigger: \".close-button\",\n        },\n        {\n            content: \"click on the close session popup button\",\n            trigger: \".close-pos-popup .footer .button.highlight\",\n        },\n        {\n            content: \"check that the session is closed without error\",\n            trigger: \".o_web_client\",\n            isCheck: true,\n        },\n    ];\n}\nexport function isCashMoveButtonHidden() {\n    return [\n        {\n            extraTrigger: \".pos-topheader\",\n            trigger: \".pos-topheader:not(:contains(Cash In/Out))\",\n            run: () => {},\n        },\n    ];\n}\nexport function isCashMoveButtonShown() {\n    return [\n        {\n            trigger: \".pos-topheader:contains(Cash In/Out)\",\n            run: () => {},\n        },\n    ];\n}\nexport function endTour() {\n    return {\n        content: \"Last tour step that avoids error mentioned in commit 443c209\",\n        trigger: \"body\",\n        isCheck: true,\n    };\n}\n", "/** @odoo-module */\n\nconst popup = \".popup.combo-configurator-popup\";\nconst productTrigger = (productName) =>\n    `label.combo-line:has(article.product .product-name:contains(\"${productName}\"))`;\nconst isNot = (trigger) => `body:not(:has(${trigger}))`;\nconst isComboSelectedTrigger = (productName) => `input:checked ~ ${productTrigger(productName)}`;\nconst confirmationButtonTrigger = `${popup} footer button.confirm`;\n\nexport function isPopupShown() {\n    return {\n        content: \"Check if the combo popup is shown\",\n        trigger: popup,\n        isCheck: true,\n    };\n}\nexport function select(productName) {\n    return {\n        content: `Select combo item ${productName}`,\n        trigger: productTrigger(productName),\n    };\n}\nexport function isSelected(productName) {\n    return {\n        content: `Check that ${productName} is selected`,\n        trigger: isComboSelectedTrigger(productName),\n        isCheck: true,\n    };\n}\nexport function isNotSelected(productName) {\n    return {\n        content: `Check that ${productName} is not selected`,\n        trigger: isNot(isComboSelectedTrigger(productName)),\n        isCheck: true,\n    };\n}\nexport function isConfirmationButtonDisabled() {\n    return {\n        content: \"try to click `confirm` without having made all the selections\",\n        trigger: `${confirmationButtonTrigger}[disabled]`,\n        isCheck: true,\n    };\n}\nexport function confirm() {\n    return {\n        content: \"Click `confirm`\",\n        trigger: confirmationButtonTrigger,\n    };\n}\n", "/** @odoo-module */\n\nexport function clickConfirm() {\n    return [\n        {\n            content: \"click confirm button\",\n            trigger: \".popup-error .footer .cancel\",\n        },\n    ];\n}\n\nexport function isShown() {\n    return [\n        {\n            content: \"error popup is shown\",\n            trigger: \".modal-dialog .popup-error\",\n            run: () => {},\n        },\n    ];\n}\n\nexport function messageBodyContains(text) {\n    return [\n        {\n            content: `check '${text}' is in the body of the popup`,\n            trigger: `.modal-dialog .popup-error .modal-body:contains(${text})`,\n        },\n    ];\n}\n", "/** @odoo-module */\n\nimport * as Numpad from \"@point_of_sale/../tests/tours/helpers/NumpadTourMethods\";\n\n/**\n * Note: Maximum of 2 characters because NumberBuffer only allows 2 consecutive\n * fast inputs. Fast inputs is the case in tours.\n *\n * @param {String} keys space-separated input keys\n */\nexport function pressNumpad(keys) {\n    return keys.split(\" \").map((key) => Numpad.click(key, { mobile: false }));\n}\nexport function enterValue(keys) {\n    const numpadKeys = keys.split(\"\").join(\" \");\n    return [...pressNumpad(numpadKeys), ...fillPopupValue(keys)];\n}\nexport function fillPopupValue(keys) {\n    return [\n        {\n            content: `'${keys}' inputed in the number popup`,\n            trigger: \".popup .value\",\n            run: `text ${keys}`,\n            mobile: true,\n        },\n    ];\n}\nexport function clickConfirm() {\n    return [\n        {\n            content: \"click confirm button\",\n            trigger: \".popup-number .footer .confirm\",\n            mobile: false,\n        },\n        {\n            content: \"click confirm button\",\n            trigger: \".popup .footer .confirm\",\n            mobile: true,\n        },\n    ];\n}\n\nexport function isShown() {\n    return [\n        {\n            content: \"number popup is shown\",\n            trigger: \".modal-dialog .popup .value\",\n            run: () => {},\n        },\n    ];\n}\nexport function inputShownIs(val) {\n    return [\n        {\n            content: \"number input element check\",\n            trigger: \".modal-dialog .popup-number\",\n            run: () => {},\n            mobile: false,\n        },\n        {\n            content: `input shown is '${val}'`,\n            trigger: `.modal-dialog .popup .value:contains(\"${val}\")`,\n            run: () => {},\n            mobile: false,\n        },\n    ];\n}\n", "/** @odoo-module */\n\nconst buttonTriger = (buttonValue) => `div.numpad.row button.col:contains(\"${buttonValue}\")`;\nexport const click = (buttonValue, options = {}) => ({\n    content: `click numpad button: ${buttonValue}`,\n    trigger: buttonTriger(buttonValue),\n    // here we couldn't simply use the jquery `:contains` selector because it\n    // would match (for ex) the button with the value \"+10\" when we want to click the\n    // button with the value \"1\". Here we need to match the exact value.\n    run: () => {\n        [...$(buttonTriger(buttonValue))].filter((el) => el.innerHTML == buttonValue)[0]?.click();\n    },\n    mobile: options.mobile,\n});\nexport const isActive = (buttonValue) => ({\n    content: `check if --${buttonValue}-- mode is activated`,\n    trigger: `${buttonTriger(buttonValue)}.active`,\n    isCheck: true,\n});\n", "/** @odoo-module */\n\nexport function clickPartner(name) {\n    return [\n        {\n            content: `click partner '${name}' from partner list screen`,\n            trigger: `.partnerlist-screen .partner-list-contents .partner-line td:contains(\"${name}\")`,\n        },\n    ];\n}\n\nexport function isShown() {\n    return [\n        {\n            content: \"partner list screen is shown\",\n            trigger: \".pos-content .partnerlist-screen\",\n            run: () => {},\n        },\n    ];\n}\n\nexport function clickPartnerDetailsButton(name) {\n    return [\n        {\n            content: `click partner details '${name}' from partner list screen`,\n            trigger: `.partner-line:contains('${name}') .edit-partner-button`,\n        },\n    ];\n}\n\nexport function clickBack() {\n    return [\n        {\n            trigger: \".partnerlist-screen .button.back\",\n        },\n    ];\n}\n", "/** @odoo-module */\n\nimport * as Numpad from \"@point_of_sale/../tests/tours/helpers/NumpadTourMethods\";\n\nexport function clickPaymentMethod(name) {\n    return [\n        {\n            content: `click '${name}' payment method`,\n            trigger: `.paymentmethods .button.paymentmethod:contains(\"${name}\")`,\n        },\n    ];\n}\n/**\n * Delete the paymentline having the given payment method name and amount.\n * @param {String} name payment method\n * @param {String} amount\n */\nexport function clickPaymentlineDelButton(name, amount, mobile = false) {\n    return [\n        {\n            content: `delete ${name} paymentline with ${amount} amount`,\n            trigger: `.paymentlines .paymentline .payment-infos:contains(\"${name}\"):has(.payment-amount:contains(\"${amount}\")) ~ .delete-button`,\n        },\n    ];\n}\n/**\n * Click the paymentline having the given payment method name and amount.\n * @param {String} name payment method\n * @param {String} amount\n */\nexport function clickPaymentline(name, amount) {\n    return [\n        {\n            content: `click ${name} paymentline with ${amount} amount`,\n            trigger: `.paymentlines .paymentline .payment-infos:contains(\"${name}\"):has(.payment-amount:contains(\"${amount}\"))`,\n        },\n    ];\n}\nexport function clickEmailButton() {\n    return [\n        {\n            content: `click email button`,\n            trigger: `.payment-buttons .js_email`,\n        },\n    ];\n}\nexport function clickInvoiceButton() {\n    return [{ content: \"click invoice button\", trigger: \".payment-buttons .js_invoice\" }];\n}\nexport function clickValidate() {\n    return [\n        {\n            content: \"validate payment\",\n            trigger: `.payment-screen .button.next.highlight`,\n            mobile: false,\n        },\n        {\n            content: \"validate payment\",\n            trigger: `.payment-screen .btn-switchpane:contains('Validate')`,\n            mobile: true,\n        },\n    ];\n}\n/**\n * Press the numpad in sequence based on the given space-separated keys.\n * Note: Maximum of 2 characters because NumberBuffer only allows 2 consecutive\n * fast inputs. Fast inputs is the case in tours. This method is only for the\n * desktop environment. The mobile environment doesn't work exactly the same way\n * so we have to call fillPaymentLineAmountMobile to have the same behaviour.\n *\n * e.g. :\n *  PaymentScreen.enterPaymentLineAmount(\"Cash\", \"70\"),\n *  PaymentScreen.remainingIs(\"2.0\"),\n *  PaymentScreen.pressNumpad(\"0\"), <- desktop: add a 0\n *  PaymentScreen.fillPaymentLineAmountMobile(\"Cash\", \"700\"), <- mobile: rewrite the amount\n *  PaymentScreen.remainingIs(\"0.00\"),\n *  PaymentScreen.changeIs(\"628.0\"),\n *\n * @param {String} keys space-separated numpad keys\n */\nexport function pressNumpad(keys) {\n    return keys.split(\" \").map((key) => Numpad.click(key, { mobile: false }));\n}\nexport function clickBack() {\n    return [\n        {\n            content: \"click back button\",\n            trigger: \".payment-screen .button.back\",\n        },\n    ];\n}\nexport function clickTipButton() {\n    return [\n        {\n            trigger: \".payment-screen .button.js_tip\",\n        },\n    ];\n}\nexport function enterPaymentLineAmount(lineName, keys) {\n    const numpadKeys = keys.split(\"\").join(\" \");\n    return [...pressNumpad(numpadKeys), ...fillPaymentLineAmountMobile(lineName, keys)];\n}\nexport function fillPaymentLineAmountMobile(lineName, keys) {\n    return [\n        {\n            content: \"click payment line\",\n            trigger: `.paymentlines .paymentline .payment-infos:contains(\"${lineName}\")`,\n            mobile: true,\n        },\n        {\n            content: `'${keys}' inputed in the number popup`,\n            trigger: \".popup .payment-input-number\",\n            run: `text ${keys}`,\n            mobile: true,\n        },\n        {\n            content: \"click confirm button\",\n            trigger: \".popup .footer .confirm\",\n            mobile: true,\n        },\n    ];\n}\n\nexport function isShown() {\n    return [\n        {\n            content: \"payment screen is shown\",\n            trigger: \".pos .payment-screen\",\n            run: () => {},\n        },\n    ];\n}\n/**\n * Check if change is the provided amount.\n * @param {String} amount\n */\nexport function changeIs(amount) {\n    return [\n        {\n            content: `change is ${amount}`,\n            trigger: `.payment-status-change .amount:contains(\"${amount}\")`,\n            run: () => {},\n        },\n    ];\n}\nexport function isInvoiceOptionSelected() {\n    return [\n        {\n            content: \"Invoice option is selected\",\n            trigger: \".payment-buttons .js_invoice.highlight\",\n            isCheck: true,\n        },\n    ];\n}\n/**\n * Check if the remaining is the provided amount.\n * @param {String} amount\n */\nexport function remainingIs(amount) {\n    return [\n        {\n            content: `remaining amount is ${amount}`,\n            trigger: `.payment-status-remaining .amount:contains(\"${amount}\")`,\n            run: () => {},\n        },\n    ];\n}\n/**\n * Check if validate button is highlighted.\n * @param {Boolean} isHighlighted\n */\nexport function validateButtonIsHighlighted(isHighlighted = true) {\n    return [\n        {\n            content: `validate button is ${isHighlighted ? \"highlighted\" : \"not highligted\"}`,\n            trigger: isHighlighted\n                ? `.payment-screen .button.next.highlight`\n                : `.payment-screen .button.next:not(:has(.highlight))`,\n            run: () => {},\n            mobile: false,\n        },\n        {\n            content: `validate button is ${isHighlighted ? \"highlighted\" : \"not highligted\"}`,\n            trigger: isHighlighted\n                ? `.payment-screen .btn-switchpane:not(.secondary):contains('Validate')`\n                : `.payment-screen .btn-switchpane.secondary:contains('Validate')`,\n            run: () => {},\n            mobile: true,\n        },\n    ];\n}\n/**\n * Check if the paymentlines are empty. Also provide the amount to pay.\n * @param {String} amountToPay\n */\nexport function emptyPaymentlines(amountToPay) {\n    return [\n        {\n            content: `there are no paymentlines`,\n            trigger: `.paymentlines-empty`,\n            run: () => {},\n        },\n        {\n            content: `amount to pay is '${amountToPay}'`,\n            trigger: `.paymentlines-empty .total:contains(\"${amountToPay}\")`,\n            run: () => {},\n        },\n    ];\n}\n/**\n * Check if the selected paymentline has the given payment method and amount.\n * @param {String} paymentMethodName\n * @param {String} amount\n */\nexport function selectedPaymentlineHas(paymentMethodName, amount) {\n    return [\n        {\n            content: `line paid via '${paymentMethodName}' is selected`,\n            trigger: `.paymentlines .paymentline.selected .payment-name:contains(\"${paymentMethodName}\")`,\n            run: () => {},\n        },\n        {\n            content: `amount tendered in the line is '${amount}'`,\n            trigger: `.paymentlines .paymentline.selected .payment-amount:contains(\"${amount}\")`,\n            run: () => {},\n        },\n    ];\n}\nexport function totalIs(amount) {\n    return [\n        {\n            content: `total is ${amount}`,\n            trigger: `.total:contains(\"${amount}\")`,\n            run: () => {},\n        },\n    ];\n}\nexport function totalDueIs(amount) {\n    return [\n        {\n            content: `total due is ${amount}`,\n            trigger: `.payment-status-total-due:contains(\"${amount}\")`,\n            run: () => {},\n        },\n    ];\n}\nexport function pay(method, amount) {\n    const steps = [];\n    steps.push(...clickPaymentMethod(method));\n    for (const char of amount.split(\"\")) {\n        steps.push(...pressNumpad(char));\n    }\n    steps.push(...validateButtonIsHighlighted());\n    steps.push(...clickValidate());\n    return steps;\n}\n\nexport function isInvoiceButtonChecked() {\n    return [\n        {\n            content: 'check invoice button is checked',\n            trigger: '.js_invoice.highlight',\n            run: () => {},\n        }\n    ]\n}\n\nexport function clickShipLaterButton() {\n    return [\n        {\n            content: 'click ship later button',\n            trigger: '.button:contains(\"Ship Later\")',\n        },\n        {\n            content: 'click confirm button',\n            trigger: '.button.confirm',\n        },\n    ]\n}\n\nexport function shippingLaterHighlighted(){\n    return [\n        {\n            content: 'Shipping later button is highlighted',\n            trigger: '.button:contains(\"Ship Later\").highlight',\n            isCheck: true\n        }\n    ]\n}\n", "/** @odoo-module */\n\nexport function pickRadio(name) {\n    return [\n        {\n            content: `picking radio attribute with name ${name}`,\n            trigger: `.product-configurator-popup div.attribute-name-cell:contains('${name}') input`,\n        },\n    ];\n}\nexport function pickSelect(name) {\n    return [\n        {\n            content: `picking select attribute with name ${name}`,\n            trigger: `.product-configurator-popup .configurator_select:has(option:contains('${name}'))`,\n            run: `text ${name}`,\n        },\n    ];\n}\nexport function pickColor(name) {\n    return [\n        {\n            content: `picking color attribute with name ${name}`,\n            trigger: `.product-configurator-popup .configurator_color[data-color='${name}']`,\n        },\n    ];\n}\nexport function fillCustomAttribute(value) {\n    return [\n        {\n            content: `filling custom attribute with value ${value}`,\n            trigger: `.product-configurator-popup .custom_value`,\n            run: `text ${value}`,\n        },\n    ];\n}\nexport function confirmAttributes() {\n    return [\n        {\n            content: `confirming product configuration`,\n            trigger: `.product-configurator-popup .button.confirm`,\n        },\n    ];\n}\nexport function cancelAttributes() {\n    return [\n        {\n            content: `canceling product configuration`,\n            trigger: `.product-configurator-popup .button.cancel`,\n        },\n    ];\n}\n\nexport function isShown() {\n    return [\n        {\n            content: \"product configurator is shown\",\n            trigger: \".product-configurator-popup:not(:has(.d-none))\",\n            run: () => {},\n        },\n    ];\n}\n\nexport function numberRadioOptions(number) {\n    return [\n        {\n            trigger: `.product-configurator-popup .attribute-name-cell`,\n            run: () => {\n                const radio_options = $('.product-configurator-popup .attribute-name-cell').length;\n                if (radio_options !== number) {\n                    throw new Error(`Expected ${number} radio options, got ${radio_options}`);\n                }\n            }\n        },\n    ];\n}\n\nexport function isOptionShown(option) {\n    return [\n        {\n            content: `option ${option} is shown`,\n            trigger: `.form-check-label:contains('${option}')`,\n            run: () => {},\n        },\n    ];\n}\n", "/** @odoo-module */\n\nimport * as Numpad from \"@point_of_sale/../tests/tours/helpers/NumpadTourMethods\";\nimport * as Order from \"@point_of_sale/../tests/tours/helpers/generic_components/OrderWidgetMethods\";\nimport { inLeftSide } from \"@point_of_sale/../tests/tours/helpers/utils\";\nimport * as TextAreaPopup from \"@point_of_sale/../tests/tours/helpers/TextAreaPopupTourMethods\";\n\nexport function clickLine(productName, quantity = \"1.0\") {\n    return inLeftSide([\n        ...Order.hasLine({\n            withoutClass: \".selected\",\n            run: \"click\",\n            productName,\n            quantity,\n        }),\n        ...Order.hasLine({ withClass: \".selected\", productName, quantity }),\n    ]);\n}\nexport function clickReview() {\n    return {\n        content: \"click review button\",\n        trigger: \".btn-switchpane.review-button\",\n        mobile: true,\n    };\n}\nexport function clickDisplayedProduct(name) {\n    return [\n        {\n            content: `click product '${name}'`,\n            trigger: `article.product .product-content .product-name:contains(\"${name}\")`,\n        },\n    ];\n}\nexport function clickOrderline(productName, quantity = \"1.0\") {\n    return [\n        ...clickLine(productName, quantity),\n        {\n            content: \"Check the product page\",\n            trigger: \".product-list-container .product-list\",\n            isCheck: true,\n        },\n    ];\n}\nexport function clickSubcategory(name) {\n    return [\n        {\n            content: `selecting '${name}' subcategory`,\n            trigger: `.products-widget > .products-widget-control .category-button:contains(\"${name}\")`,\n        },\n        {\n            content: `'${name}' subcategory selected`,\n            trigger: `i.fa-caret-right ~ button.category-button:contains(\"${name}\")`,\n            run: () => {},\n        },\n    ];\n}\nexport function clickHomeCategory() {\n    return [\n        {\n            content: `click Home subcategory`,\n            trigger: `button.category-button i.fa-home`,\n        },\n    ];\n}\n/**\n * Press the numpad in sequence based on the given space-separated keys.\n * NOTE: Maximum of 2 characters because NumberBuffer only allows 2 consecutive\n * fast inputs. Fast inputs is the case in tours.\n *\n * @param {...String} keys space-separated numpad keys\n */\nexport function pressNumpad(...keys) {\n    return inLeftSide(keys.map(Numpad.click));\n}\nexport function clickPayButton(shouldCheck = true) {\n    const steps = [\n        {\n            content: \"click pay button\",\n            trigger: \".product-screen .pay-order-button\",\n            mobile: false,\n        },\n        {\n            content: \"click pay button\",\n            trigger: \".btn-switchpane:contains('Pay')\",\n            mobile: true,\n        },\n    ];\n    if (shouldCheck) {\n        steps.push({\n            content: \"now in payment screen\",\n            trigger: \".pos-content .payment-screen\",\n            run: () => {},\n        });\n    }\n    return steps;\n}\nexport function clickPartnerButton() {\n    return [\n        clickReview(),\n        {\n            content: \"click customer button\",\n            trigger: \".product-screen .set-partner\",\n        },\n        {\n            content: \"partner screen is shown\",\n            trigger: \".pos-content .partnerlist-screen\",\n            run: () => {},\n        },\n    ];\n}\nexport function clickCustomer(name) {\n    return [\n        {\n            content: `select customer '${name}'`,\n            trigger: `.partnerlist-screen .partner-line td:contains(\"${name}\")`,\n        },\n        {\n            content: \"go back to the products\",\n            trigger: \".pos-rightheader .floor-button\",\n            mobile: true,\n        },\n    ];\n}\nexport function clickRefund() {\n    return [\n        clickReview(),\n        {\n            content: \"click more button\",\n            trigger: \".mobile-more-button\",\n            mobile: true,\n        },\n        {\n            trigger: '.control-button:contains(\"Refund\")',\n        },\n    ];\n}\nexport function confirmOpeningPopup() {\n    return [{ trigger: '.opening-cash-control .button:contains(\"Open session\")' }];\n}\nexport function selectPriceList(name) {\n    return inLeftSide([\n        {\n            content: \"click more button\",\n            trigger: \".mobile-more-button\",\n            mobile: true,\n        },\n        { trigger: \".o_pricelist_button\" },\n        {\n            content: `select price list '${name}'`,\n            trigger: `.selection-item:contains(\"${name}\")`,\n        },\n    ]);\n}\nexport function enterOpeningAmount(amount) {\n    return [\n        {\n            content: \"enter opening amount\",\n            trigger: \".cash-input-sub-section input\",\n            run: \"text \" + amount,\n        },\n    ];\n}\nexport function changeFiscalPosition(name) {\n    return [\n        clickReview(),\n        {\n            content: \"click more button\",\n            trigger: \".mobile-more-button\",\n            mobile: true,\n        },\n        {\n            content: \"click fiscal position button\",\n            trigger: \".o_fiscal_position_button\",\n        },\n        {\n            content: \"fiscal position screen is shown\",\n            trigger: `.selection-item:contains(\"${name}\")`,\n        },\n        {\n            content: \"go back to the products\",\n            trigger: \".pos-rightheader .floor-button\",\n            mobile: true,\n        },\n    ];\n}\nexport function clickCloseButton() {\n    return [\n        {\n            trigger: \".close-button\",\n        },\n    ];\n}\nexport function closeWithCashAmount(val) {\n    return [\n        {\n            trigger: \"div.popup.close-pos-popup input\",\n            run: `text ${val}`,\n        },\n    ];\n}\nexport function clickCloseSession() {\n    return [\n        {\n            trigger: \"footer .button:contains('Close Session')\",\n        },\n    ];\n}\nexport function goBackToMainScreen() {\n    return [\n        {\n            content: \"go back to the products\",\n            trigger: \".pos-rightheader .floor-button\",\n            mobile: true,\n        },\n    ];\n}\nexport function clickLotIcon() {\n    return [\n        {\n            content: \"click lot icon\",\n            trigger: \".line-lot-icon\",\n        },\n    ];\n}\nexport function enterLotNumber(number) {\n    return [\n        {\n            content: \"enter lot number\",\n            trigger: \".list-line-input:first()\",\n            run: \"text \" + number,\n        },\n        {\n            content: \"click validate lot number\",\n            trigger: \".popup .button.confirm\",\n        },\n    ];\n}\n\nexport function isShown() {\n    return [\n        {\n            content: \"product screen is shown\",\n            trigger: \".product-screen\",\n            run: () => {},\n        },\n    ];\n}\nexport function selectedOrderlineHas(productName, quantity, price) {\n    return inLeftSide(\n        Order.hasLine({\n            withClass: \".selected\",\n            productName,\n            quantity,\n            price,\n        })\n    );\n}\nexport function orderIsEmpty() {\n    return inLeftSide(Order.doesNotHaveLine());\n}\nexport function productIsDisplayed(name) {\n    return [\n        {\n            content: `'${name}' should be displayed`,\n            trigger: `.product-list .product-name:contains(\"${name}\")`,\n            run: () => {},\n        },\n    ];\n}\nexport function totalAmountIs(amount) {\n    return inLeftSide(Order.hasTotal(amount));\n}\nexport function modeIsActive(mode) {\n    return inLeftSide(Numpad.isActive(mode));\n}\nexport function checkSecondCashClosingDetailsLineAmount(amount, sign) {\n    return [\n        {\n            content: \"Open menu\",\n            trigger: \".menu-button\",\n        },\n        {\n            content: \"Click close session button\",\n            trigger: \".close-button\",\n        },\n        {\n            content: \"Check closing details\",\n            trigger: `.cash-overview tr:nth-child(2) td:contains(\"${amount}\")`,\n            run: () => {}, // it's a check\n        },\n        {\n            content: \"Check closing details\",\n            trigger: `.cash-overview tr:nth-child(2) .cash-sign:contains(\"${sign}\")`,\n            run: () => {}, // it's a check\n        },\n    ];\n}\nexport function noDiscountApplied(originalPrice) {\n    return inLeftSide({\n        content: \"no discount is applied\",\n        trigger: `.orderline .info-list:not(:contains(${originalPrice}))`,\n    });\n}\nexport function cashDifferenceIs(val) {\n    return [\n        {\n            trigger: `.payment-methods-overview tr td:nth-child(4):contains(${val})`,\n            isCheck: true,\n        },\n    ];\n}\n// Temporarily put it here. It should be in the utility methods for the backend views.\nexport function lastClosingCashIs(val) {\n    return [\n        {\n            trigger: `[name=last_session_closing_cash]:contains(${val})`,\n            isCheck: true,\n        },\n    ];\n}\nexport function checkFirstLotNumber(number) {\n    return [\n        {\n            content: \"Check lot number\",\n            trigger: `.popup-input:propValue(${number})`,\n            run: () => {}, // it's a check\n        },\n    ];\n}\n\n/**\n * Create an orderline for the given `productName` and `quantity`.\n * - If `unitPrice` is provided, price of the product of the created line\n *   is changed to that value.\n * - If `expectedTotal` is provided, the created orderline (which is the currently\n *   selected orderline) is checked if it contains the correct quantity and total\n *   price.\n *\n * @param {string} productName\n * @param {string} quantity\n * @param {string} unitPrice\n * @param {string} expectedTotal\n */\nexport function addOrderline(productName, quantity = 1, unitPrice, expectedTotal) {\n    const res = clickDisplayedProduct(productName);\n    const mapKey = (key) => {\n        if (key === \"-\") {\n            return \"+/-\";\n        }\n        return key;\n    };\n    const numpadWrite = (val) =>\n        val\n            .toString()\n            .split(\"\")\n            .flatMap((key) => pressNumpad(mapKey(key)));\n    res.push(...selectedOrderlineHas(productName, \"1.00\"));\n    if (unitPrice) {\n        res.push(\n            ...[\n                pressNumpad(\"Price\"),\n                modeIsActive(\"Price\"),\n                numpadWrite(unitPrice),\n                pressNumpad(\"Qty\"),\n                modeIsActive(\"Qty\"),\n            ].flat()\n        );\n    }\n    if (quantity.toString() !== \"1\") {\n        res.push(...numpadWrite(quantity));\n    }\n    res.push(...selectedOrderlineHas(productName, quantity, expectedTotal));\n    return res;\n}\nexport function addCustomerNote(note) {\n    return inLeftSide(\n        [\n            {\n                content: \"click more button\",\n                trigger: \".mobile-more-button\",\n                mobile: true,\n            },\n            {\n                content: \"click customer note button\",\n                trigger: '.control-buttons .control-button span:contains(\"Customer Note\")',\n            },\n            TextAreaPopup.inputText(note),\n            TextAreaPopup.clickConfirm(),\n        ].flat()\n    );\n}\n\nexport function addInternalNote(note) {\n    return inLeftSide(\n        [\n            {\n                content: \"click more button\",\n                trigger: \".mobile-more-button\",\n                mobile: true,\n            },\n            {\n                content: \"click internal note button\",\n                trigger: '.control-buttons .control-button span:contains(\"Internal Note\")',\n            },\n            ...( note ?  TextAreaPopup.inputText(note) : []),\n            TextAreaPopup.clickConfirm(),\n        ].flat()\n    );\n}\n\nexport function checkOrderlinesNumber(number) {\n    return [\n        {\n            content: `check orderlines number`,\n            trigger: `.order-container .orderline`,\n            run: () => {\n                const orderline_amount = $(\".order-container .orderline\").length;\n                if (orderline_amount !== number) {\n                    throw new Error(`Expected ${number} orderlines, got ${orderline_amount}`);\n                }\n            },\n        },\n    ];\n}\n\nexport function checkTaxAmount(number) {\n    return inLeftSide([\n        {\n            content: `check order tax amount`,\n            trigger: `.subentry:contains(\"${number}\")`,\n        },\n    ]);\n}\n", "/** @odoo-module */\n\nexport function clickNextOrder() {\n    return [\n        {\n            content: \"go to next screen\",\n            trigger: \".receipt-screen .button.next.highlight[name='done']\",\n            mobile: false,\n        },\n        {\n            content: \"go to next screen\",\n            trigger: \".receipt-screen .btn-switchpane.validation-button.highlight[name='done']\",\n            mobile: true,\n        },\n    ];\n}\nexport function clickContinueOrder() {\n    return [\n        {\n            content: \"go to next screen\",\n            trigger: \".receipt-screen .button.next.highlight[name='resume']\",\n        },\n    ];\n}\nexport function setEmail(email) {\n    return [\n        {\n            trigger: \".receipt-screen .input-email input\",\n            run: `text ${email}`,\n        },\n    ];\n}\nexport function clickSend(isHighlighted = true) {\n    return [\n        {\n            trigger: `.receipt-screen .input-email .send${isHighlighted ? \".highlight\" : \"\"}`,\n        },\n    ];\n}\nexport function clickBack() {\n    return [\n        {\n            trigger: \".receipt-screen .button.back\",\n        },\n    ];\n}\n\nexport function isShown() {\n    return [\n        {\n            content: \"receipt screen is shown\",\n            trigger: \".pos .receipt-screen\",\n            run: () => {},\n        },\n    ];\n}\nexport function receiptIsThere() {\n    return [\n        {\n            content: \"there should be the receipt\",\n            trigger: \".receipt-screen .pos-receipt\",\n            run: () => {},\n        },\n    ];\n}\nexport function totalAmountContains(value) {\n    return [\n        {\n            trigger: `.receipt-screen .top-content h1:contains(\"${value}\")`,\n            run: () => {},\n            mobile: false, // not rendered on mobile\n        },\n        {\n            trigger: `.receipt-screen`,\n            run: () => {},\n            mobile: true, // On mobile, at least wait for the receipt screen to show\n        },\n    ];\n}\nexport function emailIsSuccessful() {\n    return [\n        {\n            trigger: `.receipt-screen .notice .successful`,\n            run: () => {},\n        },\n    ];\n}\n\nexport function nextOrder() {\n    return [...isShown(), ...clickNextOrder()];\n}\n\nexport function trackingMethodIsLot() {\n    return [\n        {\n            content: `tracking method is Lot`,\n            trigger: `li:contains(\"Lot Number\")`,\n            run: () => {},\n        },\n    ];\n}\n\nexport function shippingDateExists() {\n    return [\n        {\n            content: 'Shipping date must be printed',\n            trigger: '.pos-receipt-order-data:contains(\"Expected delivery:\")'\n        }\n    ]\n}\n", "/** @odoo-module */\n\nexport function clickItem(name) {\n    return [\n        {\n            content: `click selection '${name}'`,\n            trigger: `.selection-item:contains(\"${name}\")`,\n        },\n    ];\n}\n\nexport function hasSelectionItem(name) {\n    return [\n        {\n            content: `selection popup has '${name}'`,\n            trigger: `.selection-item:contains(\"${name}\")`,\n            run: () => {},\n        },\n    ];\n}\nexport function isShown() {\n    return [\n        {\n            content: \"selection popup is shown\",\n            trigger: \".modal-dialog .popup-selection\",\n            run: () => {},\n        },\n    ];\n}\n", "/** @odoo-module */\n\nexport function inputText(val) {\n    return [\n        {\n            content: `input text '${val}'`,\n            trigger: `.modal-dialog .popup-textarea textarea`,\n            run: `text ${val}`,\n        },\n    ];\n}\nexport function clickConfirm() {\n    return [\n        {\n            content: \"confirm text input popup\",\n            trigger: \".modal-dialog .confirm\",\n        },\n    ];\n}\n\nexport function isShown() {\n    return [\n        {\n            content: \"text input popup is shown\",\n            trigger: \".modal-dialog .popup-textarea\",\n            run: () => {},\n        },\n    ];\n}\n", "/** @odoo-module */\n\nexport function inputText(val) {\n    return [\n        {\n            content: `input text '${val}'`,\n            trigger: `.modal-dialog .popup-textinput input`,\n            run: `text ${val}`,\n        },\n    ];\n}\nexport function clickConfirm() {\n    return [\n        {\n            content: \"confirm text input popup\",\n            trigger: \".modal-dialog .confirm\",\n        },\n    ];\n}\n\nexport function isShown() {\n    return [\n        {\n            content: \"text input popup is shown\",\n            trigger: \".modal-dialog .popup-textinput\",\n            run: () => {},\n        },\n    ];\n}\n", "/** @odoo-module */\n\nimport * as ProductScreen from \"@point_of_sale/../tests/tours/helpers/ProductScreenTourMethods\";\nimport { inLeftSide } from \"@point_of_sale/../tests/tours/helpers/utils\";\n\nexport function clickNewTicket() {\n    return [{ trigger: \".ticket-screen .highlight\" }];\n}\nexport function clickDiscard() {\n    return [\n        {\n            content: \"go back\",\n            trigger: \".ticket-screen button.discard\",\n            mobile: false,\n        },\n        {\n            content: \"go back\",\n            trigger: \".pos-rightheader .floor-button\",\n            mobile: true,\n        },\n    ];\n}\nexport function selectOrder(orderName) {\n    return [\n        {\n            trigger: `.ticket-screen .order-row > .col:contains(\"${orderName}\")`,\n        },\n    ];\n}\nexport function doubleClickOrder(orderName) {\n    return [\n        {\n            trigger: `.ticket-screen .order-row > .col:nth-child(2):contains(\"${orderName}\")`,\n            run: \"dblclick\",\n        },\n    ];\n}\nexport function loadSelectedOrder() {\n    return [\n        ProductScreen.clickReview(),\n        {\n            trigger: \".ticket-screen .pads .button.validation.load-order-button\",\n        },\n    ];\n}\nexport function deleteOrder(orderName) {\n    return [\n        {\n            trigger: `.ticket-screen .order-row > .col:contains(\"${orderName}\")`,\n            mobile: true,\n        },\n        {\n            trigger: `.ticket-screen .order-row:has(.col:contains(\"${orderName}\")) .delete-button`,\n            mobile: true,\n        },\n        {\n            trigger: `.ticket-screen .orders > .order-row > .col:contains(\"${orderName}\") ~ .col[name=\"delete\"]`,\n            mobile: false,\n        },\n    ];\n}\nexport function selectFilter(name) {\n    return [\n        {\n            trigger: `.pos-search-bar .filter`,\n        },\n        {\n            trigger: `.pos-search-bar .filter ul`,\n            run: () => {},\n        },\n        {\n            trigger: `.pos-search-bar .filter ul li:contains(\"${name}\")`,\n        },\n    ];\n}\nexport function search(field, searchWord) {\n    return [\n        {\n            trigger: \".pos-search-bar input\",\n            run: `text ${searchWord}`,\n        },\n        {\n            /**\n             * Manually trigger keyup event to show the search field list\n             * because the previous step do not trigger keyup event.\n             */\n            trigger: \".pos-search-bar input\",\n            run: function () {\n                document\n                    .querySelector(\".pos-search-bar input\")\n                    .dispatchEvent(new KeyboardEvent(\"keyup\", { key: \"\" }));\n            },\n        },\n        {\n            trigger: `.pos-search-bar .search ul li:contains(\"${field}\")`,\n        },\n    ];\n}\nexport function settleTips() {\n    return [\n        {\n            trigger: \".ticket-screen .buttons .settle-tips\",\n        },\n    ];\n}\nexport function clickControlButton(name) {\n    return [\n        ProductScreen.clickReview(),\n        {\n            trigger: `.ticket-screen .control-button:contains(\"${name}\")`,\n        },\n    ];\n}\nexport function clickBackToMainTicketScreen() {\n    return [\n        {\n            content: \"Go back to main TicketScreen when in mobile\",\n            trigger: \".pos-rightheader .floor-button\",\n            mobile: true,\n        },\n    ];\n}\nexport function confirmRefund() {\n    return [\n        ProductScreen.clickReview(),\n        {\n            trigger: \".ticket-screen .button.pay-order-button\",\n        },\n    ];\n}\nexport function checkStatus(orderName, status) {\n    return [\n        {\n            trigger: `.ticket-screen .order-row > .col:contains(\"${orderName}\") ~ .col:nth-child(7):contains(${status})`,\n            run: () => {},\n            mobile: false,\n        },\n        {\n            trigger: `.ticket-screen .order-row > .col:contains(\"${orderName}\") ~ .col:nth-child(2):contains(${status})`,\n            run: () => {},\n            mobile: true,\n        },\n    ];\n}\n/**\n * Check if the nth row contains the given string.\n * Note that 1st row is the header-row.\n * @param {boolean | undefined} viewMode true if in mobile view, false if in desktop, undefined if in both views.\n */\nexport function nthRowContains(n, string, viewMode) {\n    return [\n        {\n            trigger: `.ticket-screen .orders > .order-row:nth-child(${n}):contains(\"${string}\")`,\n            mobile: viewMode,\n            run: () => {},\n        },\n    ];\n}\nexport function contains(string) {\n    return [\n        {\n            trigger: `.ticket-screen .orders:contains(\"${string}\")`,\n            run: () => {},\n        },\n    ];\n}\nexport function noNewTicketButton() {\n    return [\n        {\n            trigger: \".ticket-screen .controls .buttons:nth-child(1):has(.discard)\",\n            run: () => {},\n        },\n    ];\n}\nexport function filterIs(name) {\n    return [\n        {\n            trigger: `.ticket-screen .pos-search-bar .filter span:contains(\"${name}\")`,\n            run: () => {},\n        },\n    ];\n}\nexport function invoicePrinted() {\n    return [\n        {\n            trigger: '.ticket-screen .control-button:contains(\"Reprint Invoice\")',\n            run: () => {},\n        },\n    ];\n}\nexport function partnerIs(name) {\n    return inLeftSide({\n        trigger: `.ticket-screen .set-partner:contains(\"${name}\")`,\n        isCheck: true,\n    });\n}\nexport function toRefundTextContains(text) {\n    return inLeftSide({\n        trigger: `.ticket-screen .to-refund-highlight:contains(\"${text}\")`,\n        run: () => {},\n    });\n}\nexport function refundedNoteContains(text) {\n    return inLeftSide({\n        trigger: `.ticket-screen .refund-note:contains(\"${text}\")`,\n        run: () => {},\n    });\n}\nexport function tipContains(amount) {\n    return [\n        {\n            trigger: `.ticket-screen .tip-cell:contains(\"${amount}\")`,\n            run: () => {},\n        },\n    ];\n}\nexport function receiptTotalIs(amount) {\n    return [\n        {\n            trigger: `.receipt-screen .pos-receipt-amount:contains(\"${amount}\")`,\n            run: () => {},\n        },\n    ];\n}\n\nexport function nthColumnContains(nRow, nCol, string){\n    return [\n        {\n            trigger: `.ticket-screen .order-row:nth-child(${nRow}) > .col:nth-child(${nCol}):contains(\"${string}\")`,\n            run: () => {},\n        },\n    ];\n}\n", "/** @odoo-module */\n\nimport { negate } from \"@point_of_sale/../tests/tours/helpers/utils\";\n\n/**\n * @typedef {{\n * withClass?: string, // ex: withClass: \".selected.blue\"\n * withoutClass?: string,\n * run?: function | string,\n * productName?: string,\n * quantity?: string,\n * price?: string,\n * customerNote?: string,\n * comboParent?: string,\n * }} LineOptions\n */\n\n/**\n * @param {LineOptions} options\n * @returns {import(\"@web_tour/tour_service/tour_service\").TourStep[]}\n */\nexport function hasLine({\n    withClass = \"\",\n    withoutClass = \"\",\n    run = () => {},\n    productName,\n    quantity,\n    price,\n    customerNote,\n    internalNote,\n    comboParent,\n    discount,\n    oldPrice,\n    atts\n} = {}) {\n    let trigger = `.order-container .orderline${withClass}`;\n    if (withoutClass) {\n        trigger += `:not(${withoutClass})`;\n    }\n    if (productName) {\n        trigger += `:has(.product-name:contains(\"${productName}\"))`;\n    }\n    if (quantity) {\n        trigger += `:has(em.qty:contains(\"${quantity}\"))`;\n    }\n    if (price) {\n        trigger += `:has(.price:contains(\"${price}\"))`;\n    }\n    if (customerNote) {\n        trigger += `:has(.info-list .customer-note:contains(\"${customerNote}\"))`;\n    }\n    if (internalNote) {\n        trigger += `:has(.info-list .internal-note:contains(\"${internalNote}\"))`;\n    }\n    if (comboParent) {\n        trigger += `:has(.info-list .combo-parent-name:contains(\"${comboParent}\"))`;\n    }\n    if (discount || discount === \"\") {\n        trigger += `:has(.info-list .discount.em:contains(\"${discount}\"))`;\n    }\n    if (oldPrice) {\n        trigger += `:has(.info-list .price-per-unit s:contains(\"${oldPrice}\"))`;\n    }\n    if(atts) {\n        trigger += Object.entries(atts).map(([key, value]) =>  `:has(.info-list div:contains(\"${key}: ${value}\"))`).join();\n    }\n    const args = JSON.stringify(arguments[0]);\n    return [\n        {\n            content: `Check orderline with attributes: ${args}`,\n            trigger,\n            run: typeof run === \"string\" ? run : () => run(trigger),\n        },\n    ];\n}\n/**\n * @param {LineOptions} options\n * @returns {import(\"@web_tour/tour_service/tour_service\").TourStep}\n */\nexport function doesNotHaveLine(options = {}) {\n    const step = hasLine(options)[0];\n    return [{ ...step, trigger: negate(step.trigger) }];\n}\n\n// TODO: there are instances where we have no selected orderline. Fix those instances\n\nexport function hasTotal(amount) {\n    return {\n        content: `order total amount is '${amount}'`,\n        trigger: `.product-screen .order-summary .total:contains(\"${amount}\")`,\n        isCheck: true,\n    };\n}\nexport function hasTax(amount) {\n    return {\n        content: `order total tax is '${amount}'`,\n        trigger: `.order-summary .tax:contains(\"${amount}\")`,\n        isCheck: true,\n    };\n}\n\nexport function hasNoTax() {\n    return {\n        content: 'order has not tax',\n        trigger: '.order-summary:not(:has(.tax))'\n    }\n}\n", "/** @odoo-module */\n\nimport { simulateBarCode } from \"@barcodes/../tests/helpers\"\n\nexport function inLeftSide(steps) {\n    return [\n        {\n            content: \"click review button\",\n            trigger: \".btn-switchpane.review-button\",\n            mobile: true,\n        },\n        ...[steps].flat(),\n        {\n            content: \"go back to the products\",\n            trigger: \".pos-rightheader .floor-button\",\n            mobile: true,\n        },\n    ];\n}\n\nexport function negate(selector) {\n    return `body:not(:has(${selector}))`;\n}\n\nexport function negateStep(step) {\n    return {\n        ...step,\n        trigger: negate(step.trigger),\n    };\n}\n\nexport function scan_barcode(barcode) {\n    return [\n        {\n            content: `PoS model scan barcode '${barcode}'`,\n            trigger: \"body\", // The element here does not really matter as long as it is present\n            run: () => {\n                simulateBarCode([...barcode, \"Enter\"])\n            },\n        },\n    ];\n}\n", "/** @odoo-module */\n/* global posmodel */\n\nimport { registry } from \"@web/core/registry\";\nimport * as ProductScreen from \"@point_of_sale/../tests/tours/helpers/ProductScreenTourMethods\";\nimport { roundDecimals as round_di } from \"@web/core/utils/numbers\";\nimport { nbsp } from \"@web/core/utils/strings\";\nimport * as Numpad from \"@point_of_sale/../tests/tours/helpers/NumpadTourMethods\";\nimport * as Order from \"@point_of_sale/../tests/tours/helpers/generic_components/OrderWidgetMethods\";\n\nfunction assert(condition, message) {\n    if (!condition) {\n        throw message || \"Assertion failed\";\n    }\n}\n\nfunction assertProductPrice(product, pricelist_name, quantity, expected_price) {\n    return function () {\n        var pricelist = posmodel.pricelists.find((pricelist) => pricelist.name === pricelist_name);\n        var frontend_price = product.get_price(pricelist, quantity);\n        frontend_price = round_di(frontend_price, posmodel.dp[\"Product Price\"]);\n\n        var diff = Math.abs(expected_price - frontend_price);\n\n        assert(\n            diff < 0.001,\n            JSON.stringify({\n                product: product.id,\n                product_display_name: product.display_name,\n                pricelist_name: pricelist_name,\n                quantity: quantity,\n            }) +\n                \" DOESN'T MATCH -> \" +\n                expected_price +\n                \" != \" +\n                frontend_price\n        );\n\n        return Promise.resolve();\n    };\n}\n\n// The global posmodel is only present when the posmodel is instanciated\n// So, wait for everythiong to be loaded\nvar steps = [\n    {\n        // Leave category displayed by default\n        content: \"waiting for loading to finish\",\n        extra_trigger: \"body .pos:not(:has(.loader))\", // Pos has finished loading\n        trigger: \"body:not(:has(.o_loading_indicator))\", // WebClient has finished Loading\n        run: function () {\n            var product_wall_shelf = posmodel.db.search_product_in_category(\n                0,\n                \"Wall Shelf Unit\"\n            )[0];\n            var product_small_shelf = posmodel.db.search_product_in_category(0, \"Small Shelf\")[0];\n            var product_magnetic_board = posmodel.db.search_product_in_category(\n                0,\n                \"Magnetic Board\"\n            )[0];\n            var product_monitor_stand = posmodel.db.search_product_in_category(\n                0,\n                \"Monitor Stand\"\n            )[0];\n            var product_desk_pad = posmodel.db.search_product_in_category(0, \"Desk Pad\")[0];\n            var product_letter_tray = posmodel.db.search_product_in_category(0, \"Letter Tray\")[0];\n            var product_whiteboard = posmodel.db.search_product_in_category(0, \"Whiteboard\")[0];\n\n            assertProductPrice(product_letter_tray, \"Public Pricelist\", 0, 4.8)()\n                .then(assertProductPrice(product_letter_tray, \"Public Pricelist\", 1, 4.8))\n                .then(assertProductPrice(product_letter_tray, \"Fixed\", 1, 1))\n                .then(assertProductPrice(product_wall_shelf, \"Fixed\", 1, 2))\n                .then(assertProductPrice(product_small_shelf, \"Fixed\", 1, 13.95))\n                .then(assertProductPrice(product_wall_shelf, \"Percentage\", 1, 0))\n                .then(assertProductPrice(product_small_shelf, \"Percentage\", 1, 0.03))\n                .then(assertProductPrice(product_magnetic_board, \"Percentage\", 1, 1.98))\n                .then(assertProductPrice(product_wall_shelf, \"Formula\", 1, 6.86))\n                .then(assertProductPrice(product_small_shelf, \"Formula\", 1, 2.99))\n                .then(assertProductPrice(product_magnetic_board, \"Formula\", 1, 11.98))\n                .then(assertProductPrice(product_monitor_stand, \"Formula\", 1, 8.19))\n                .then(assertProductPrice(product_desk_pad, \"Formula\", 1, 6.98))\n                .then(assertProductPrice(product_wall_shelf, \"min_quantity ordering\", 1, 2))\n                .then(assertProductPrice(product_wall_shelf, \"min_quantity ordering\", 2, 1))\n                .then(assertProductPrice(product_letter_tray, \"Category vs no category\", 1, 2))\n                .then(assertProductPrice(product_letter_tray, \"Category\", 1, 2))\n                .then(assertProductPrice(product_wall_shelf, \"Product template\", 1, 1))\n                .then(assertProductPrice(product_wall_shelf, \"Dates\", 1, 2))\n                .then(assertProductPrice(product_small_shelf, \"Pricelist base rounding\", 1, 13.95))\n                .then(assertProductPrice(product_whiteboard, \"Public Pricelist\", 1, 3.2))\n                .then(function () {\n                    $(\".pos\").addClass(\"done-testing\");\n                });\n        },\n    },\n    {\n        trigger: '.opening-cash-control .button:contains(\"Open session\")',\n    },\n];\n\nsteps = steps.concat([\n    {\n        content: \"wait for unit tests to finish\",\n        trigger: \".pos.done-testing\",\n        run: function () {}, // it's a check\n    },\n    ...ProductScreen.clickHomeCategory(),\n    {\n        content: \"click review button\",\n        trigger: \".btn-switchpane.review-button\",\n        mobile: true,\n    },\n    {\n        content: \"click more button\",\n        trigger: \".mobile-more-button\",\n        mobile: true,\n    },\n    {\n        content: \"click pricelist button\",\n        trigger: \".control-button.o_pricelist_button\",\n    },\n    {\n        content: \"verify default pricelist is set\",\n        trigger: \".selection-item.selected:contains('Public Pricelist')\",\n        run: function () {}, // it's a check\n    },\n    {\n        content: \"select fixed pricelist\",\n        trigger: \".selection-item:contains('Fixed')\",\n    },\n    {\n        content: \"open partner list\",\n        trigger: \"button.set-partner\",\n    },\n    {\n        content: \"select Deco Addict\",\n        trigger: \".partner-line:contains('Deco Addict')\",\n    },\n    {\n        content: \"click more button\",\n        trigger: \".mobile-more-button\",\n        mobile: true,\n    },\n    {\n        content: \"click pricelist button\",\n        trigger: \".control-button.o_pricelist_button\",\n    },\n    {\n        content: \"verify pricelist changed\",\n        trigger: \".selection-item.selected:contains('Public Pricelist')\",\n        run: function () {}, // it's a check\n    },\n    {\n        content: \"cancel pricelist dialog\",\n        trigger: \".button.cancel:visible\",\n    },\n    {\n        content: \"open customer list\",\n        trigger: \"button.set-partner\",\n    },\n    {\n        content: \"select Lumber Inc\",\n        trigger: \".partner-line:contains('Lumber Inc')\",\n    },\n    {\n        content: \"click more button\",\n        trigger: \".mobile-more-button\",\n        mobile: true,\n    },\n    {\n        content: \"click pricelist button\",\n        trigger: \".control-button.o_pricelist_button\",\n    },\n    {\n        content: \"verify pricelist remained public pricelist ('Not loaded' is not available)\",\n        trigger: \".selection-item.selected:contains('Public Pricelist')\",\n        run: function () {}, // it's a check\n    },\n    {\n        content: \"cancel pricelist dialog\",\n        trigger: \".button.cancel:visible\",\n    },\n    {\n        content: \"go back to the products\",\n        trigger: \".floor-button\",\n        mobile: true,\n    },\n    {\n        content: \"order 1 kg shelf\",\n        trigger: \".product:contains('Wall Shelf')\",\n    },\n    {\n        content: \"click review button\",\n        trigger: \".btn-switchpane.review-button\",\n        mobile: true,\n    },\n    ...Order.hasLine({ productName: \"Wall Shelf\", quantity: \"1.0\", withClass: \".selected\" }),\n    {\n        content: \"click more button\",\n        trigger: \".mobile-more-button\",\n        mobile: true,\n    },\n    {\n        content: \"click pricelist button\",\n        trigger: \".control-button.o_pricelist_button\",\n    },\n    {\n        content: \"select fixed pricelist\",\n        trigger: \".selection-item:contains('min_quantity ordering')\",\n    },\n    Numpad.click(\"2\"),\n    ...Order.hasLine({ productName: \"Wall Shelf\", quantity: \"2.0\", withClass: \".selected\" }),\n    // verify that unit price of shelf changed to $1\n    Order.hasTotal(`$${nbsp}2.00`),\n    {\n        content: \"go back to the products\",\n        trigger: \".floor-button\",\n        mobile: true,\n    },\n    {\n        content: \"order different shelf\",\n        trigger: \".product:contains('Small Shelf')\",\n    },\n    {\n        content: \"click review button\",\n        trigger: \".btn-switchpane.review-button\",\n        mobile: true,\n    },\n    ...Order.hasLine({ productName: \"Small Shelf\", quantity: \"1.0\", withClass: \".selected\" }),\n    Numpad.click(\"Price\"),\n    Numpad.isActive(\"Price\"),\n    Numpad.click(\"5\"),\n    ...Order.hasLine({ productName: \"Small Shelf\", price: \"5.0\", withClass: \".selected\" }),\n    Numpad.click(\"Qty\"),\n    Numpad.isActive(\"Qty\"),\n    {\n        content: \"click more button\",\n        trigger: \".mobile-more-button\",\n        mobile: true,\n    },\n    {\n        content: \"click pricelist button\",\n        trigger: \".control-button.o_pricelist_button\",\n    },\n    {\n        content: \"select public pricelist\",\n        trigger: \".selection-item:contains('Public Pricelist')\",\n    },\n    // verify that the boni shelf have been recomputed and the shelf have not (their price was manually overridden)\n    Order.hasTotal(`$${nbsp}8.96`),\n    {\n        content: \"click more button\",\n        trigger: \".mobile-more-button\",\n        mobile: true,\n    },\n    {\n        content: \"click pricelist button\",\n        trigger: \".control-button.o_pricelist_button\",\n    },\n    {\n        content: \"select fixed pricelist\",\n        trigger: \".selection-item:contains('min_quantity ordering')\",\n    },\n    {\n        content: \"open the navbar menu\",\n        trigger: \".menu-button\",\n    },\n    {\n        content: \"confirm closing the frontend\",\n        trigger: \".close-button\",\n        run: function () {}, //it's a check,\n    },\n]);\n\nregistry.category(\"web_tour.tours\").add(\"pos_pricelist\", {\n    test: true,\n    url: \"/pos/ui\",\n    steps: () => steps,\n});\n", "/** @odoo-module **/\n    \n    import { registry } from \"@web/core/registry\";\n    import { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\n    registry.category(\"web_tour.tours\").add('debug_menu_set_defaults', {\n        test: true,\n        url: '/web?debug=1',\n        steps: () => [\n            ...stepUtils.goToAppSteps('contacts.menu_contacts', \"Open the contacts menu\"),\n            {\n                content: \"Create a new contact\",\n                trigger: '.o-kanban-button-new',\n            },\n            {\n                content: \"Check that Company is checked by default, and not Individual\",\n                trigger: '.o_field_widget[name=\"company_type\"] input[data-value=\"company\"]:checked',\n                run: function () {},\n            },\n            {\n                content: \"Select the individual radio button\",\n                trigger: '.o_field_widget[name=\"company_type\"] input[data-value=\"person\"]',\n            },\n            {\n                content: \"Open the debug menu\",\n                trigger: '.o_debug_manager button',\n            },\n            {\n                content: \"Click the Set Defaults menu\",\n                trigger: '.o_debug_manager .dropdown-item:contains(Set Defaults)',\n            },\n            {\n                content: \"Choose Company Type = Individual\",\n                trigger: '#formview_default_fields',\n                run: function () {\n                    const element_field = document.querySelector('select#formview_default_fields');\n                    element_field.value = 'company_type';\n                    element_field.dispatchEvent(new Event(\"change\"));\n                },\n            },\n            {\n                content: \"Check that there are conditions\",\n                trigger: '#formview_default_conditions',\n            },\n            {\n                content: \"Save the new default\",\n                trigger: 'footer button:contains(Save default)',\n            },\n            {\n                content: \"Discard the contact creation\",\n                trigger: 'button.o_form_button_cancel',\n            },\n            {\n                trigger: '.o_action_manager > .o_kanban_view .o-kanban-button-new',\n            },\n            {\n                content: \"Check that Individual is checked instead of Company\",\n                trigger: '.o_field_widget[name=\"company_type\"] input[data-value=\"person\"]:checked',\n                run: function () {},\n            },\n            {\n                content: \"Discard the contact creation\",\n                trigger: 'button.o_form_button_cancel',\n            },\n            {\n                content: \"Wait for discard\",\n                trigger: '.o_control_panel .o-kanban-button-new',\n                run() {},\n            },\n        ]\n    });\n", "/** @odoo-module **/\n    \nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nregistry.category('web_tour.tours').add('mailing_campaign', {\n    test: true,\n    url: '/web',\n    steps: () => [\n        stepUtils.showAppsMenuItem(),\n        {\n            content: 'Select the \"Email Marketing\" app',\n            trigger: '.o_app[data-menu-xmlid=\"mass_mailing.mass_mailing_menu_root\"]',\n        },\n        {\n            content: 'Select \"Campaings\" Navbar item',\n            trigger: '.o_nav_entry[data-menu-xmlid=\"mass_mailing.menu_email_campaigns\"]',\n        },\n        {\n            content: 'Select \"Newsletter\" campaign',\n            trigger: '.oe_kanban_card:contains(\"Newsletter\")',\n        },\n        {\n            content: 'Add a line (create new mailing)',\n            trigger: '.o_field_x2many_list_row_add a',\n        },\n        {\n            content: 'Pick the basic theme',\n            trigger: 'iframe',\n            run(actions) {\n                // For some reason the selectors inside the iframe cannot be triggered.\n                const link = this.$anchor[0].contentDocument.querySelector('#basic');\n                actions.click(link);\n            }\n        },\n        {\n            content: 'Fill in Subject',\n            trigger: '#subject_0',\n            run: 'text TestFromTour',\n        },\n        {\n            content: 'Fill in Mailing list',\n            trigger: '#contact_list_ids_0',\n            run: 'text Newsletter',\n        },\n        {\n            content: 'Pick \"Newsletter\" option',\n            trigger: '.o_input_dropdown a:contains(Newsletter)',\n        },\n        {\n            content: 'Save form',\n            trigger: '.o_form_button_save',\n        },\n        {\n            content: 'Check that newly created record is on the list',\n            trigger: '[name=\"mailing_mail_ids\"] td[name=\"subject\"]:contains(\"TestFromTour\")',\n            run: () => null,\n        },\n        ...stepUtils.saveForm(),\n    ]\n});\n", "/** @odoo-module **/\n    \nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nregistry.category(\"web_tour.tours\").add('mailing_editor', {\n    url: '/web',\n    test: true,\n    steps: () => [stepUtils.showAppsMenuItem(), {\n    trigger: '.o_app[data-menu-xmlid=\"mass_mailing.mass_mailing_menu_root\"]',\n}, {\n    trigger: 'button.o_list_button_add',\n}, {\n    trigger: 'div[name=\"contact_list_ids\"] .o_input_dropdown input[type=\"text\"]',\n}, {\n    trigger: 'div[name=\"contact_list_ids\"] .ui-state-active'\n}, {\n    content: 'choose the theme \"empty\" to edit the mailing with snippets',\n    trigger: '[name=\"body_arch\"] iframe #empty',\n}, {\n    content: 'wait for the editor to be rendered',\n    trigger: '[name=\"body_arch\"] iframe .o_editable[data-editor-message=\"DRAG BUILDING BLOCKS HERE\"]',\n    run: () => {},\n}, {\n    content: 'drag the \"Title\" snippet from the design panel and drop it in the editor',\n    trigger: '[name=\"body_arch\"] iframe #email_designer_default_body [name=\"Title\"] .oe_snippet_thumbnail',\n    run: function (actions) {\n        actions.drag_and_drop_native('[name=\"body_arch\"] iframe .o_editable', this.$anchor);\n    }\n}, {\n    content: 'wait for the snippet menu to finish the drop process',\n    trigger: '[name=\"body_arch\"] iframe #email_designer_header_elements:not(:has(.o_we_already_dragging))',\n    run: () => {}\n}, {\n    content: 'verify that the title was inserted properly in the editor',\n    trigger: '[name=\"body_arch\"] iframe .o_editable h1',\n    run: () => {},\n}, {\n    trigger: 'button.o_form_button_save',\n}, {\n    content: 'verify that the save failed (since the field \"subject\" was not set and it is required)',\n    trigger: 'label.o_field_invalid',\n    run: () => {},\n}, {\n    content: 'verify that the edited mailing body was not lost during the failed save',\n    trigger: '[name=\"body_arch\"] iframe .o_editable h1',\n    run: () => {},\n}, {\n    trigger: 'input#subject_0',\n    run: 'text TestFromTour',\n}, {\n    trigger: '.o_form_view', // blur previous input\n},\n...stepUtils.saveForm(),\n{\n    trigger: 'iframe .o_editable',\n    run: () => {},\n}]});\n", "/** @odoo-module **/\n    \nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\nimport { boundariesIn, setSelection } from \"@web_editor/js/editor/odoo-editor/src/utils/utils\";\n\nregistry.category(\"web_tour.tours\").add('mailing_editor_theme', {\n    test: true,\n    url: '/web',\n    steps: () => [\n        stepUtils.showAppsMenuItem(),\n        {\n            content: \"Select the 'Email Marketing' app.\",\n            trigger: '.o_app[data-menu-xmlid=\"mass_mailing.mass_mailing_menu_root\"]',\n        },\n        {\n            content: \"Click on the create button to create a new mailing.\",\n            trigger: 'button.o_list_button_add',\n        },\n        {\n            content: \"Fill in Subject\",\n            trigger: '#subject_0',\n            run: 'text Test Basic Theme',\n        },\n        {\n            content: \"Fill in Mailing list\",\n            trigger: '#contact_list_ids_0',\n            run: 'text Newsletter',\n        },\n        {\n            content: \"Pick 'Newsletter' option\",\n            trigger: '.o_input_dropdown a:contains(Newsletter)',\n        },\n        {\n            content: \"Pick the basic theme\",\n            trigger: 'iframe #basic',\n            extra_trigger: 'iframe .o_mail_theme_selector_new',\n        },\n        {\n            content: \"Make sure the snippets menu is hidden\",\n            trigger: 'iframe html:has(#oe_snippets.d-none)',\n            run: () => null, // no click, just check\n        },\n        {\n            content: \"Click on the New button to create another mailing\",\n            trigger: 'button.o_form_button_create',\n        },\n        {\n            content: \"Fill in Subject\",\n            trigger: '#subject_0',\n            extra_trigger: 'iframe .o_mail_theme_selector_new',\n            run: 'text Test Newsletter Theme',\n        },\n        {\n            content: \"Fill in Mailing list\",\n            trigger: '#contact_list_ids_0',\n            run: 'text Newsletter',\n        },\n        {\n            content: \"Pick 'Newsletter' option\",\n            trigger: '.o_input_dropdown a:contains(Newsletter)',\n        },\n        {\n            content: \"Pick the newsletter theme\",\n            trigger: 'iframe #newsletter',\n        },\n        {\n            content: \"Make sure the snippets menu is displayed\",\n            trigger: 'iframe #oe_snippets',\n            run: () => null, // no click, just check\n        },\n        {\n            content: 'Save form',\n            trigger: '.o_form_button_save',\n        },\n        {\n            content: 'Go back to previous mailing',\n            trigger: 'button.o_pager_previous',\n        },\n        {\n            content: \"Make sure the snippets menu is hidden\",\n            trigger: 'iframe html:has(#oe_snippets.d-none)',\n            run: () => null,\n        },\n        {\n            content: \"Add some content to be selected afterwards\",\n            trigger: 'iframe p',\n            run: 'text content',\n        },\n        {\n            content: \"Select text\",\n            trigger: 'iframe p:contains(content)',\n            run() {\n                setSelection(...boundariesIn(this.$anchor[0]), false);\n            }\n        },\n        {\n            content: \"Make sure the floating toolbar is visible\",\n            trigger: '#toolbar.oe-floating[style*=\"visible\"]',\n            run: () => null,\n        },\n        {\n            content: \"Open the color picker\",\n            trigger: '#toolbar #oe-text-color',\n        },\n        {\n            content: \"Pick a color\",\n            trigger: '#toolbar button[data-color=\"o-color-1\"]',\n        },\n        {\n            content: \"Check that color was applied\",\n            trigger: 'iframe p font.text-o-color-1',\n            run: () => null,\n        },\n        {\n            content: 'Save changes',\n            trigger: '.o_form_button_save',\n        },\n        {\n            content: \"Go to 'Mailings' list view\",\n            trigger: '.breadcrumb a:contains(Mailings)'\n        },\n        {\n            content: \"Open newly created mailing\",\n            trigger: 'td:contains(\"Test Basic Theme\")',\n        },\n        {\n            content: \"Make sure the snippets menu is hidden\",\n            trigger: 'iframe html:has(#oe_snippets.d-none)',\n            run: () => null,\n        },\n        {\n            content: \"Select content\",\n            trigger: 'iframe p:contains(content)',\n            run() {\n                setSelection(...boundariesIn(this.$anchor[0]), false);\n            }\n        },\n        {\n            content: \"Make sure the floating toolbar is visible\",\n            trigger: '#toolbar.oe-floating[style*=\"visible\"]',\n            run: () => null,\n        },\n        ...stepUtils.discardForm(),\n    ]\n});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\n\n/*\n * Tour: unsubscribe from a mailing done on documents (aka not on contacts or\n * mailing lists). We assume email is not member of any mailing list in this test.\n */\nregistry.category(\"web_tour.tours\").add('mailing_portal_unsubscribe_from_document', {\n    test: true,\n    steps: () => [\n        {\n            content: \"Confirmation unsubscribe is done\",\n            trigger: \"div#o_mailing_subscription_info span:contains('You are no longer part of our services and will not be contacted again.')\",\n        }, {\n            content: \"No warning should be displayed\",\n            trigger: \"div#o_mailing_subscription_form_blocklisted:not(:has(p:contains('You will not receive any news from those mailing lists you are a member of')))\",\n        }, {\n            contnet: \"Warning will not receive anything anymore\",\n            trigger: \"div#o_mailing_subscription_form_blocklisted p:contains('You will not hear from us anymore.')\",\n        }, {\n            content: \"Feedback textarea not displayed (see data)\",\n            trigger: \"div#o_mailing_portal_subscription:not(textarea)\",\n        }, {\n            content: \"Choose 'Other' reason\",\n            trigger: \"fieldset label:contains('Other')\",\n        }, {\n            content: \"This should display the Feedback area\",\n            trigger: \"div#o_mailing_portal_subscription textarea\",\n            isCheck: true,\n        }, {\n            content: \"Write feedback reason\",\n            trigger: \"textarea[name='feedback']\",\n            run: \"text My feedback\",\n        }, {\n            content: \"Hit Send\",\n            trigger: \"button#button_feedback\",\n        }, {\n            content: \"Confirmation feedback is sent\",\n            trigger: \"div#o_mailing_subscription_feedback_info span:contains('Sent. Thanks you for your feedback!')\",\n        }, {\n            content: \"Revert exclusion list\",\n            trigger: \"div#button_blocklist_remove\",\n        }, {\n            content: \"Confirmation exclusion list is removed\",\n            trigger: \"div#o_mailing_subscription_update_info span:contains('Email removed from our blocklist')\",\n        }, {\n            content: \"Now exclude me (again)\",\n            trigger: \"div#button_blocklist_add\",\n        }, {\n            content: \"Confirmation exclusion is done\",\n            trigger: \"div#o_mailing_subscription_update_info span:contains('Email added to our blocklist')\",\n            isCheck: true,\n        },\n    ],\n});\n\n\n/*\n * Tour: unsubscribe from a mailing done on documents (aka not on contacts or\n * mailing lists). We assume email is member of mailing lists in this test.\n */\nregistry.category(\"web_tour.tours\").add('mailing_portal_unsubscribe_from_document_with_lists', {\n    test: true,\n    steps: () => [\n        {\n            content: \"Confirmation unsubscribe is done\",\n            trigger: \"div#o_mailing_subscription_info span:contains('You are no longer part of our services and will not be contacted again.')\",\n        }, {\n            content: \"Display warning about mailing lists\",\n            trigger: \"div#o_mailing_subscription_form_blocklisted p:contains('You will not receive any news from those mailing lists you are a member of')\",\n        }, {\n            content: \"Warning should contain reference to memberships\",\n            trigger: \"div#o_mailing_subscription_form_blocklisted li strong:contains('List1')\",\n        }, {\n            content: \"Feedback textarea not displayed (see data)\",\n            trigger: \"div#o_mailing_portal_subscription:not(textarea)\",\n        }, {\n            content: \"Choose 'Other' reason\",\n            trigger: \"fieldset label:contains('Other')\",\n        }, {\n            content: \"This should display the Feedback area\",\n            trigger: \"div#o_mailing_portal_subscription textarea\",\n            isCheck: true,\n        }, {\n            content: \"Write feedback reason\",\n            trigger: \"textarea[name='feedback']\",\n            run: \"text My feedback\",\n        }, {\n            content: \"Hit Send\",\n            trigger: \"button#button_feedback\",\n        }, {\n            content: \"Confirmation feedback is sent\",\n            trigger: \"div#o_mailing_subscription_feedback_info span:contains('Sent. Thanks you for your feedback!')\",\n        }, {\n            content: \"Revert exclusion list\",\n            trigger: \"div#button_blocklist_remove\",\n        }, {\n            content: \"Confirmation exclusion list is removed\",\n            trigger: \"div#o_mailing_subscription_update_info span:contains('Email removed from our blocklist')\",\n        }, {\n            content: \"Now exclude me (again)\",\n            trigger: \"div#button_blocklist_add\",\n        }, {\n            content: \"Confirmation exclusion is done\",\n            trigger: \"div#o_mailing_subscription_update_info span:contains('Email added to our blocklist')\",\n            isCheck: true,\n        },\n    ],\n});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\n\n/*\n * Tour: unsubscribe from a mailing done on lists (aka playing with opt-out flag\n * instead of directly blocking emails).\n */\nregistry.category(\"web_tour.tours\").add('mailing_portal_unsubscribe_from_list', {\n    test: true,\n    steps: () => [\n        {\n            content: \"Confirmation unsubscribe is done\",\n            trigger: \"div#o_mailing_subscription_info span:contains('You are no longer part of the List1, List2 mailing list')\",\n        }, {\n            content: \"Feedback textarea not displayed (see data)\",\n            trigger: \"div#o_mailing_portal_subscription:not(textarea)\",\n        }, {\n            content: \"Choose 'Other' reason\",\n            trigger: \"fieldset label:contains('Other')\",\n        }, {\n            content: \"Write feedback reason\",\n            trigger: \"textarea[name='feedback']\",\n            run: \"text My feedback\",\n        }, {\n            content: \"Hit Send\",\n            trigger: \"button#button_feedback\",\n        }, {\n            content: \"Confirmation feedback is sent\",\n            trigger: \"div#o_mailing_subscription_feedback_info span:contains('Sent. Thanks you for your feedback!')\",\n        }, {\n            content: \"Now exclude me\",\n            trigger: \"div#button_blocklist_add\",\n        }, {\n            content: \"Confirmation exclusion is done\",\n            trigger: \"div#o_mailing_subscription_update_info span:contains('Email added to our blocklist')\",\n            isCheck: true,\n        },\n    ],\n});\n\n\n/*\n * Tour: unsubscribe from a mailing done on lists (aka playing with opt-out flag\n * instead of directly blocking emails), then play with list subscriptions and\n * blocklist addition / removal. This is mainly an extended version of the tour\n * hereabove, easing debug and splitting checks.\n */\nregistry.category(\"web_tour.tours\").add('mailing_portal_unsubscribe_from_list_with_update', {\n    test: true,\n    steps: () => [\n        {\n            content: \"Confirmation unsubscribe is done\",\n            trigger: \"div#o_mailing_subscription_info span:contains('You are no longer part of the List1, List2 mailing list')\",\n        }, {\n            content: \"List1 is present, just opt-outed\",\n            trigger: \"ul#o_mailing_subscription_form_lists li.list-group-item:contains('List1') span:contains('Not subscribed')\",\n        }, {\n            content: \"List3 is present, opt-outed (test starting data)\",\n            trigger: \"ul#o_mailing_subscription_form_lists li.list-group-item:contains('List3') span:contains('Not subscribed')\",\n        }, {\n            content: \"List2 is proposed (not member -> proposal to join)\",\n            trigger: \"ul#o_mailing_subscription_form_lists_additional li.list-group-item:contains('List2')\",\n        }, {\n            content: \"List4 is not proposed (not member but not private)\",\n            trigger: \"ul#o_mailing_subscription_form_lists_additional:not(:has(li.list-group-item:contains('List4')))\",\n        }, {\n            content: \"Feedback textarea not displayed (see data)\",\n            trigger: \"div#o_mailing_portal_subscription:not(textarea)\",\n        }, {\n            content: \"Choose 'Other' reason\",\n            trigger: \"fieldset label:contains('Other')\",\n        }, {\n            content: \"Write feedback reason\",\n            trigger: \"textarea[name='feedback']\",\n            run: \"text My feedback\",\n        }, {\n            content: \"Hit Send\",\n            trigger: \"button#button_feedback\",\n        }, {\n            content: \"Confirmation feedback is sent\",\n            trigger: \"div#o_mailing_subscription_feedback_info span:contains('Sent. Thanks you for your feedback!')\",\n        }, {\n            content: \"Now exclude me\",\n            trigger: \"div#button_blocklist_add\",\n        }, {\n            content: \"Confirmation exclusion is done\",\n            trigger: \"div#o_mailing_subscription_update_info span:contains('Email added to our blocklist')\",\n        }, {\n            content: \"This should disable the 'Update my subscriptions' (Apply changes) button\",\n            trigger: \"div#o_mailing_subscription_blocklist:not(button#button_form_send)\",\n            isCheck: true,\n        }, {\n            content: \"Revert exclusion list\",\n            trigger: \"div#button_blocklist_remove\",\n        }, {\n            content: \"Confirmation exclusion list is removed\",\n            trigger: \"div#o_mailing_subscription_update_info span:contains('Email removed from our blocklist')\",\n        },  {\n            content: \"'Update my subscriptions' button usable again\",\n            trigger: \"button#button_form_send:not([disabled])\",\n            isCheck: true,\n        }, {\n            content: \"Choose the mailing list 3 to come back\",\n            trigger: \"ul#o_mailing_subscription_form_lists input[title='List3']\",\n        }, {\n            content: \"Add list 2\",\n            trigger: \"ul#o_mailing_subscription_form_lists_additional input[title='List2']\",\n        }, {\n            content: \"Update subscription\",\n            trigger: \"button#button_form_send\",\n        }, {\n            content: \"Confirmation changes are done\",\n            trigger: \"div#o_mailing_subscription_update_info span:contains('Membership updated')\",\n        }, {\n            content: \"List 3 is noted as subscribed again\",\n            trigger: \"ul#o_mailing_subscription_form_lists li.list-group-item:contains('List3') span:contains('Subscribed')\",\n        }, {\n            content: \"List 2 has joined the subscriptions\",\n            trigger: \"ul#o_mailing_subscription_form_lists li.list-group-item:contains('List2') span:contains('Subscribed')\",\n        }, {\n            content: \"No list in proposals\",\n            trigger: \"div#o_mailing_subscription_form_manage:not(:has(ul#o_mailing_subscription_form_lists_additional))\",\n        }, {\n            content: \"Feedback area is not displayed (nothing opt-out or no blocklist done, no feedback required)\",\n            trigger: \"div#o_mailing_portal_subscription:not(textarea)\",\n            extra_trigger: \"div#o_mailing_portal_subscription:not(fieldset)\",\n        }, {\n            content: \"Now exclude me (again)\",\n            trigger: \"div#button_blocklist_add\",\n        }, {\n            content: \"Confirmation exclusion is done\",\n            trigger: \"div#o_mailing_subscription_update_info span:contains('Email added to our blocklist')\",\n        }, {\n            content: \"Should display warning about mailing lists\",\n            trigger: \"div#o_mailing_subscription_form_blocklisted p:contains('You will not receive any news from those mailing lists you are a member of')\",\n        }, {\n            content: \"Warning should contain reference to memberships\",\n            trigger: \"div#o_mailing_subscription_form_blocklisted li strong:contains('List2')\",\n            extra_trigger: \"div#o_mailing_subscription_form_blocklisted li strong:contains('List3')\",\n        }, {\n            content: \"Give a reason for blocklist (first one)\",\n            trigger: \"fieldset input.o_mailing_subscription_opt_out_reason:first\",\n        }, {\n            content: \"Hit Send\",\n            trigger: \"button#button_feedback\",\n        }, {\n            content: \"Confirmation feedback is sent\",\n            trigger: \"div#o_mailing_subscription_feedback_info span:contains('Sent. Thanks you for your feedback!')\",\n            isCheck: true,\n        }\n    ],\n});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\n\n/*\n * Tour: use 'my' portal page of mailing to manage mailing lists subscription\n * as well as manage blocklist (add / remove my own email from block list).\n */\nregistry.category(\"web_tour.tours\").add('mailing_portal_unsubscribe_from_my', {\n    test: true,\n    steps: () => [\n       {\n            content: \"List1 is present, opt-in member\",\n            trigger: \"ul#o_mailing_subscription_form_lists li.list-group-item:contains('List1') span:contains('Subscribed')\",\n        }, {\n            content: \"List3 is present, opt-outed (test starting data)\",\n            trigger: \"ul#o_mailing_subscription_form_lists li.list-group-item:contains('List3') span:contains('Not subscribed')\",\n        }, {\n            content: \"List2 is proposed (not member -> proposal to join)\",\n            trigger: \"ul#o_mailing_subscription_form_lists_additional li.list-group-item:contains('List2')\",\n        }, {\n            content: \"List4 is not proposed (not member but not private)\",\n            trigger: \"ul#o_mailing_subscription_form_lists_additional:not(:has(li.list-group-item:contains('List4')))\",\n        },{\n            content: \"List5 is not proposed (not member and not public)\",\n            trigger: \"body:not(:has(li.list-group-item:contains('List5')))\",\n        }, {\n            content: \"Feedback area is not displayed (nothing done, no feedback required)\",\n            trigger: \"div#o_mailing_portal_subscription:not(textarea)\",\n            extra_trigger: \"div#o_mailing_portal_subscription:not(fieldset)\",\n        }, {\n            content: \"List3: come back (choose to opt-in instead of opt-out)\",\n            trigger: \"ul#o_mailing_subscription_form_lists input[title='List3']\",\n        }, {\n            content: \"List2: join (opt-in, not already member)\",\n            trigger: \"ul#o_mailing_subscription_form_lists_additional input[title='List2']\",\n        }, {\n            content: \"List1: opt-out\",\n            trigger: \"ul#o_mailing_subscription_form_lists input[title='List1']\",\n        }, {\n            content: \"Update subscription\",\n            trigger: \"button#button_form_send\",\n        }, {\n            content: \"Confirmation changes are done\",\n            trigger: \"div#o_mailing_subscription_update_info span:contains('Membership updated')\",\n        }, {\n            content: \"Should make feedback reasons choice appear (feedback still not displayed, linked to reasons)\",\n            trigger: \"div#o_mailing_portal_subscription fieldset\",\n            extra_trigger: \"div#o_mailing_portal_subscription:not(textarea)\",\n        }, {\n            content: \"Choose first reason, which should not display feedback (see data)\",\n            trigger: \"fieldset input.o_mailing_subscription_opt_out_reason:first\",\n        }, {\n            content: \"Feedback textarea not displayed (see data)\",\n            trigger: \"div#o_mailing_portal_subscription:not(textarea)\",\n        }, {\n            content: \"Choose 'Other' reason\",\n            trigger: \"fieldset label:contains('Other')\",\n        }, {\n            content: \"This should display the Feedback area\",\n            trigger: \"div#o_mailing_portal_subscription textarea\",\n            isCheck: true,\n        }, {\n            content: \"Write feedback reason\",\n            trigger: \"textarea[name='feedback']\",\n            run: \"text My feedback\",\n        }, {\n            content: \"Hit Send\",\n            trigger: \"button#button_feedback\",\n        }, {\n            content: \"Confirmation feedback is sent\",\n            trigger: \"div#o_mailing_subscription_feedback_info span:contains('Sent. Thanks you for your feedback!')\",\n        }, {\n            content: \"Once sent feedback area is readonly\",\n            trigger: \"fieldset input.o_mailing_subscription_opt_out_reason[disabled]\",\n            extra_trigger: \"textarea[disabled]\",\n            isCheck: true,\n        }, {\n            content: \"Now exclude me\",\n            trigger: \"div#button_blocklist_add\",\n        }, {\n            content: \"Confirmation exclusion is done\",\n            trigger: \"div#o_mailing_subscription_update_info span:contains('Email added to our blocklist')\",\n        }, {\n            content: \"This should disable the 'Update my subscriptions' (Apply changes) button\",\n            trigger: \"div#o_mailing_subscription_blocklist:not(button#button_form_send)\",\n            isCheck: true,\n        }, {\n            content: \"This should enabled Feedback again\",\n            trigger: \"div#o_mailing_portal_subscription textarea\",\n            isCheck: true,\n        }, {\n            content: \"Display warning about mailing lists\",\n            trigger: \"div#o_mailing_subscription_form_blocklisted p:contains('You will not receive any news from those mailing lists you are a member of')\",\n        }, {\n            content: \"Warning should contain reference to memberships\",\n            trigger: \"div#o_mailing_subscription_form_blocklisted li strong:contains('List2')\",\n            extra_trigger: \"div#o_mailing_subscription_form_blocklisted li strong:contains('List3')\",\n        }, {\n            content: \"Give a reason for blocklist (first one)\",\n            trigger: \"fieldset input.o_mailing_subscription_opt_out_reason:first\",\n        }, {\n            content: \"Hit Send\",\n            trigger: \"button#button_feedback\",\n        }, {\n            content: \"Confirmation feedback is sent\",\n            trigger: \"div#o_mailing_subscription_feedback_info span:contains('Sent. Thanks you for your feedback!')\",\n            isCheck: true,\n        }\n    ],\n});\n", "/** @odoo-module **/\n\nimport { markup } from \"@odoo/owl\";\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nregistry.category(\"web_tour.tours\").add('mass_mailing_code_view_tour', {\n    url: '/web?debug=tests',\n    test: true,\n    steps: () => [\n        stepUtils.showAppsMenuItem(),\n        {\n            trigger: '.o_app[data-menu-xmlid=\"mass_mailing.mass_mailing_menu_root\"]',\n        }, {\n            trigger: 'button.o_list_button_add',\n        }, {\n            trigger: 'input#subject_0',\n            content: markup('Pick the <b>email subject</b>.'),\n            position: 'bottom',\n            run: 'text Test'\n        }, {\n            trigger: 'div[name=\"contact_list_ids\"] .o_input_dropdown input[type=\"text\"]',\n            content: 'Click on the dropdown to open it and then start typing to search.',\n        }, {\n            trigger: 'div[name=\"contact_list_ids\"] .ui-state-active',\n            content: 'Select item from dropdown',\n            run: 'click',\n        }, {\n            trigger: 'div[name=\"body_arch\"] iframe #default',\n            content: markup('Choose this <b>theme</b>.'),\n            run: 'click',\n        }, {\n            trigger: 'iframe .o_codeview_btn',\n            content: markup('Click here to switch to <b>code view</b>'),\n            run: 'click'\n        }, {\n            trigger: 'iframe .o_codeview',\n            content: ('Remove all content from codeview'),\n            run: function () {\n                const iframe = document.querySelector('.wysiwyg_iframe');\n                const iframeDocument = iframe.contentWindow.document;\n                let element = iframeDocument.querySelector(\".o_codeview\");\n                element.value = '';\n            }\n        }, {\n            trigger: 'iframe .o_codeview_btn',\n            content: markup('Click here to switch back from <b>code view</b>'),\n            run: 'click'\n        }, {\n            trigger: '[name=\"body_arch\"] iframe .o_mail_wrapper_td',\n            content: 'Verify that the dropable zone was not removed',\n            run: () => {},\n        }, {\n            trigger: '[name=\"body_arch\"] iframe #email_designer_default_body [name=\"Title\"] .oe_snippet_thumbnail',\n            content: 'Drag the \"Title\" snippet from the design panel and drop it in the editor',\n            run: function (actions) {\n                actions.drag_and_drop_native('[name=\"body_arch\"] iframe .o_editable', this.$anchor);\n            }\n        }, {\n            trigger: '[name=\"body_arch\"] iframe .o_editable h1',\n            content: 'Verify that the title was inserted properly in the editor',\n            run: () => {},\n        },\n        ...stepUtils.discardForm(),\n    ]\n});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nregistry.category(\"web_tour.tours\").add('snippets_mailing_menu_tabs', {\n    test: true,\n    url: '/web',\n    steps: () => [\n    stepUtils.showAppsMenuItem(), {\n        content: \"Select the 'Email Marketing' app.\",\n        trigger: '.o_app[data-menu-xmlid=\"mass_mailing.mass_mailing_menu_root\"]',\n    },\n    {\n        content: \"Click on the create button to create a new mailing.\",\n        trigger: 'button.o_list_button_add',\n    },\n    {\n        content: \"Click on the 'Start From Scratch' template.\",\n        trigger: 'iframe #empty',\n    },\n    {\n        content: \"Click on the 'Design' tab.\",\n        trigger: 'iframe .o_we_customize_design_btn',\n    },\n    {\n        content: \"Click on the empty 'DRAG BUILDING BLOCKS HERE' area.\",\n        trigger: 'iframe .oe_structure.o_mail_no_options',\n    },\n    {\n        content: \"Click on the 'Design' tab.\",\n        trigger: 'iframe .o_we_customize_design_btn',\n    },\n    {\n        content: \"Verify that the customize panel is not empty.\",\n        trigger: 'iframe .o_we_customize_panel .snippet-option-DesignTab',\n        run: () => null, // it's a check\n    },\n    {\n        content: \"Click on the style tab.\",\n        trigger: 'iframe .o_we_customize_snippet_btn',\n    },\n    {\n        content: \"Click on the 'Design' tab.\",\n        trigger: 'iframe .o_we_customize_design_btn',\n    },\n    {\n        content: \"Verify that the customize panel is not empty.\",\n        trigger: 'iframe .o_we_customize_panel .snippet-option-DesignTab',\n        run: () => null, // it's a check\n    },\n    ...stepUtils.discardForm(),\n]});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nregistry.category(\"web_tour.tours\").add('snippets_mailing_menu_toolbar', {\n    test: true,\n    url: '/web',\n    steps: () => [\n    stepUtils.showAppsMenuItem(), {\n        content: \"Select the 'Email Marketing' app.\",\n        trigger: '.o_app[data-menu-xmlid=\"mass_mailing.mass_mailing_menu_root\"]',\n    },\n    {\n        content: \"Click on the create button to create a new mailing.\",\n        trigger: 'button.o_list_button_add',\n    },\n    {\n        content: \"Wait for the theme selector to load.\",\n        trigger: 'iframe .o_mail_theme_selector_new',\n    },\n    {\n        content: \"Make sure there does not exist a floating toolbar\",\n        trigger: 'iframe',\n        run: function () {\n            const iframeDocument = this.$anchor[0].contentDocument;\n            if (iframeDocument.querySelector('#toolbar.oe-floating')) {\n                console.error('There should not be a floating toolbar in the iframe');\n            }\n        },\n    },\n    {\n        content: \"Make sure the empty template is an option on non-mobile devices.\",\n        trigger: 'iframe #empty',\n        run: () => null,\n    },\n    {\n        content: \"Click on the default 'welcome' template.\",\n        trigger: 'iframe #default',\n    },\n    { // necessary to wait for the cursor to be placed in the first p\n      // and to avoid leaving the page before the selection is added\n        content: \"Wait for template selection event to be over.\",\n        trigger: 'iframe .o_editable.theme_selection_done',\n    },\n    {\n        content: \"Make sure the snippets menu is not hidden\",\n        trigger: 'iframe #oe_snippets:not(.d-none)',\n        run: () => null,\n    },\n    {\n        content: \"Wait for .s_text_block to be populated\",\n        trigger: 'iframe .s_text_block p',\n        run: () => null,\n    },\n    {\n        content: \"Click and select p block inside the editor\",\n        trigger: 'iframe',\n        run: function () {\n            const iframeWindow = this.$anchor[0].contentWindow;\n            const iframeDocument = iframeWindow.document;\n            const p = iframeDocument.querySelector('.s_text_block p');\n            p.click();\n            const selection = iframeWindow.getSelection();\n            const range = iframeDocument.createRange();\n            range.selectNodeContents(p);\n            selection.removeAllRanges();\n            selection.addRange(range);\n        },\n    },\n    {\n        content: \"Make sure the toolbar is there\",\n        trigger: 'iframe #oe_snippets .o_we_customize_panel #toolbar',\n        run: () => null,\n    },\n    ...stepUtils.discardForm(),\n    ],\n});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nregistry.category(\"web_tour.tours\").add('snippets_mailing_menu_toolbar_mobile', {\n    test: true,\n    url: '/web',\n    steps: () => [\n    stepUtils.showAppsMenuItem(), {\n        content: \"Select the 'Email Marketing' app.\",\n        trigger: '.o_app[data-menu-xmlid=\"mass_mailing.mass_mailing_menu_root\"]',\n    },\n    {\n        content: \"Click on the create button to create a new mailing.\",\n        trigger: 'button.o_list_button_add',\n        mobile: true,\n    },\n    {\n        content: \"Check templates available in theme selector\",\n        trigger: 'iframe .o_mail_theme_selector_new',\n        run: function () {\n            if (this.$anchor[0].querySelector('#empty')) {\n                console.error('The empty template should not be visible on mobile.');\n            }\n        },\n        mobile: true,\n    },\n    {\n        content: \"Make sure the toolbar isn't floating\",\n        trigger: 'iframe',\n        run: function () {\n            const iframeDocument = this.$anchor[0].contentDocument;\n            if (iframeDocument.querySelector('#toolbar.oe-floating')) {\n                console.error('There should not be a floating toolbar in the iframe');\n            }\n        },\n        mobile: true,\n    },\n    {\n        content: \"Click on the 'Start From Scratch' template.\",\n        trigger: 'iframe #default',\n        mobile: true,\n    },\n    {\n        content: \"Select an editable element\",\n        trigger: 'iframe .s_text_block',\n        mobile: true,\n    },\n    {\n        content: \"Make sure the snippets menu is hidden\",\n        trigger: 'iframe',\n        run: function () {\n            const iframeDocument = this.$anchor[0].contentDocument;\n            if (!iframeDocument.querySelector('#oe_snippets.d-none')) {\n                console.error('The snippet menu should be hidden');\n            }\n        },\n        mobile: true,\n    },\n    {\n        content: \"Make sure the toolbar is there\",\n        trigger: 'iframe #toolbar.oe-floating',\n        run: () => null, // it's a check\n        mobile: true,\n    },\n    ...stepUtils.discardForm().map(command => ({...command, mobile: true})),\n    ]\n});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nregistry.category(\"web_tour.tours\").add('hr_employee_tour', {\n    test: true,\n    url: '/web',\n    steps: () => [\n    stepUtils.showAppsMenuItem(),\n    {\n        content: \"Open Employees app\",\n        trigger: \".o_app[data-menu-xmlid='hr.menu_hr_root']\",\n        run: 'click',\n    },\n    {\n        content: \"Open an Employee Profile\",\n        trigger: \".o_kanban_record_title:contains('Johnny H.')\",\n        run: 'click',\n    },\n    {\n        content: \"Open user account menu\",\n        trigger: \".o_user_menu .dropdown-toggle\",\n        run: 'click',\n    }, {\n        content: \"Open My Profile\",\n        trigger: \"[data-menu=settings]\",\n        run: 'click',\n    },\n]});\n", "/** @odoo-module **/\n\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\nimport { registry } from \"@web/core/registry\";\nimport { patch } from \"@web/core/utils/patch\";\n\n/**\n * As 'hr' changes the flow a bit and displays the user preferences form in a full view instead of\n * a modal, we adapt the steps of the original tour accordingly.\n */\npatch(registry.category(\"web_tour.tours\").get(\"mail/static/tests/tours/user_modify_own_profile_tour.js\"), {\n    steps() {\n        return [\n            {\n                content: 'Open user account menu',\n                trigger: '.o_user_menu button',\n            }, \n            {\n                content: \"Open preferences / profile screen\",\n                trigger: '[data-menu=settings]',\n            }, \n            {\n                content: \"Update the email address\",\n                trigger: 'div[name=\"email\"] input',\n                run: 'text updatedemail@example.com',\n            }, \n            ...stepUtils.saveForm(),\n        ];\n    }\n});\n\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nconst todayDate = function () {\n    const now = new Date();\n    const year = now.getFullYear();\n    const month = String(now.getMonth() + 1).padStart(2, \"0\");\n    const day = String(now.getDate()).padStart(2, \"0\");\n\n    return `${month}/${day}/${year} 10:00:00`;\n};\n\nregistry.category(\"web_tour.tours\").add(\"calendar_appointments_hour_tour\", {\n    url: \"/web\",\n    test: true,\n    steps: () => [\n        stepUtils.showAppsMenuItem(),\n        {\n            trigger: '.o_app[data-menu-xmlid=\"calendar.mail_menu_calendar\"]',\n            content: \"Open Calendar\",\n            run: \"click\",\n        },\n        {\n            trigger: \".o-calendar-button-new\",\n            content: \"Create a new event\",\n            run: \"click\",\n        },\n        {\n            trigger: \"#name_0\",\n            content: \"Give a name to the new event\",\n            run: \"text TEST EVENT\",\n        },\n        {\n            trigger: \"#start_0\",\n            content: \"Give a date to the new event\",\n            run: `text ${todayDate()}`,\n        },\n        {\n            trigger: \"#duration_0\",\n            content: \"Give a duration to the new event\",\n            run: \"text 02:00\",\n        },\n        {\n            trigger: \".fa-cloud-upload\",\n            content: \"Save the new event\",\n            run: \"click\",\n        },\n        {\n            trigger: \".o_back_button\",\n            content: \"Go back to Calendar view\",\n            run: \"click\",\n        },\n        {\n            trigger: '.scale_button_selection',\n            content: \"Click to change calendar view\",\n            run: \"click\",\n        },\n        {\n            trigger: '.dropdown-item:contains(\"Month\")',\n            content: \"Change the calendar view to Month\",\n            run: \"click\",\n        },\n        {\n            trigger: '.fc-day-header:contains(\"Mon\")',\n            content: \"Check the day is properly displayed\",\n        },\n        {\n            trigger: '.fc-time:contains(\"10:00\")',\n            content: \"Check the time is properly displayed\",\n        },\n        {\n            trigger: '.o_event_title:contains(\"TEST EVENT\")',\n            content: \"Check the event title\",\n            isCheck: true,\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"test_calendar_delete_tour\", {\n    test: true,\n    steps: () => [\n        {\n            content: \"Select filter (everybody)\",\n            trigger: 'div[data-value=\"all\"] input',\n        },\n        {\n            content: \"Click on the event (focus + waiting)\",\n            trigger: 'a .fc-content:contains(\"Test Event\")',\n            async run() {\n                $('a .fc-content:contains(\"Test Event\")').click();\n                await new Promise((r) => setTimeout(r, 1000));\n                $('a .fc-content:contains(\"Test Event\")').click();\n            },\n        },\n        {\n            content: \"Delete the event\",\n            trigger: \".o_cw_popover_delete\",\n        },\n        {\n            content: \"Validate the deletion\",\n            trigger: 'button:contains(\"Delete\")',\n            async run() {\n                $('button:contains(\"Delete\")').click();\n                await new Promise((r) => setTimeout(r, 1000));\n            },\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"test_calendar_decline_tour\", {\n    test: true,\n    steps: () => [\n        {\n            content: \"Click on the event (focus + waiting)\",\n            trigger: 'a .fc-content:contains(\"Test Event\")',\n            async run() {\n                $('a .fc-content:contains(\"Test Event\")').click();\n                await new Promise((r) => setTimeout(r, 1000));\n                $('a .fc-content:contains(\"Test Event\")').click();\n            },\n        },\n        {\n            content: \"Delete the event\",\n            trigger: \".o_cw_popover_delete\",\n        },\n        {\n            content: \"Wait declined status\",\n            trigger: \".o_attendee_status_declined\",\n            isCheck: true,\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"test_calendar_decline_with_everybody_filter_tour\", {\n    test: true,\n    steps: () => [\n        {\n            content: \"Select filter (everybody)\",\n            trigger: 'div[data-value=\"all\"] input',\n        },\n        {\n            content: \"Click on the event (focus + waiting)\",\n            trigger: 'a .fc-content:contains(\"Test Event\")',\n            async run() {\n                $('a .fc-content:contains(\"Test Event\")').click();\n                await new Promise((r) => setTimeout(r, 1000));\n                $('a .fc-content:contains(\"Test Event\")').click();\n            },\n        },\n        {\n            content: \"Delete the event\",\n            trigger: \".o_cw_popover_delete\",\n        },\n        {\n            content: \"Select filter (everybody)\",\n            trigger: 'div[data-value=\"all\"] input',\n        },\n        {\n            content: \"Wait declined status\",\n            trigger: \".o_attendee_status_declined\",\n            isCheck: true,\n        },\n    ],\n});\n", "/** @odoo-module */\n\nimport { registry } from \"@web/core/registry\";\n\nregistry.category(\"web_tour.tours\").add('mailing_activities_split', {\n    test: true,\n    url: '/web',\n    steps: () => [\n        {\n            content: 'Open Activity Systray',\n            trigger: '.o-mail-ActivityMenu-counter',\n        }, {\n            content: 'Open Email Activities',\n            trigger: '.o-mail-ActivityGroup:contains(\"Email Marketing\")',\n        }, {\n            content: 'Open Email Marketing record in the kanban view',\n            trigger: '.o_list_renderer .o_data_cell:contains(\"New Email!\")',\n            run: () => {\n                if ($('.o_list_renderer .o_data_cell:contains(\"New SMS!\")').length !== 0) {\n                    console.error('SMS Marketing record should not appear in this view');\n                }\n            },\n        }, {\n            content: 'Open Activity Systray',\n            trigger: '.o-mail-ActivityMenu-counter',\n        }, {\n            content: 'Open SMS Activities',\n            trigger: '.o-mail-ActivityGroup:contains(\"SMS Marketing\")',\n        }, {\n            content: 'Open SMS Marketing record in the kanban view',\n            trigger: '.o_list_renderer .o_data_cell:contains(\"New SMS!\")',\n            run: () => {\n                if ($('.o_list_renderer .o_data_cell:contains(\"New Email!\")').length !== 0) {\n                    console.error('Email Marketing record should not appear in this view');\n                }\n            },\n        }\n    ],\n});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nregistry.category(\"web_tour.tours\").add('hr_skills_tour', {\n    test: true,\n    url: '/web',\n    steps: () => [\n    stepUtils.showAppsMenuItem(),\n    {\n        content: \"Open Employees app\",\n        trigger: \".o_app[data-menu-xmlid='hr.menu_hr_root']\",\n    },\n    {\n        content: \"Create a new employee\",\n        trigger: \".o-kanban-button-new\",\n    },\n    {\n        content: \"Pick a name\",\n        trigger: \".o_field_widget[name='name'] input\",\n        run: \"text Jony McHallyFace\",\n    },\n    {\n        content: \"Save\",\n        trigger: \".o_form_button_save\",\n    },\n    {\n        content: \"Add a new Resume experience\",\n        trigger: \".o_field_resume_one2many tr.o_resume_group_header button.btn-secondary\",\n    },\n    {\n        content: \"Enter some company name\",\n        trigger: \".modal-body .o_field_widget[name='name'] input\",\n        run: \"text Mamie Rock\",\n    },\n    {\n        content: \"Set start date\",\n        trigger: \".o_field_widget[name='date_start'] input\",\n        run: \"text 12/05/2017\",\n    },\n    {\n        content: \"Give some description\",\n        trigger: \".o_field_widget[name='description'] textarea\",\n        run: \"text Sang some songs and played some music\",\n    },\n    {\n        content: \"Save it\",\n        trigger: \".o_form_button_save\",\n        in_modal: true,\n        run: \"click\",\n    },\n    {\n        content: \"Edit newly created experience\",\n        trigger: \".o_resume_line_title:contains('Mamie Rock')\",\n        run: \"click\",\n    },\n    {\n        content: \"Change type\",\n        trigger: \".o_field_widget[name='line_type_id'] input\",\n        run: \"text Experience\",\n    },\n    {\n        content: \"Choose experience\",\n        trigger: '.ui-autocomplete .ui-menu-item a:contains(\"Experience\")',\n        run: \"click\",\n    },\n    {\n        content: \"Save experience change\",\n        trigger: \".o_form_button_save\",\n        in_modal: true,\n        run: \"click\",\n    },\n    {\n        content: \"Add a new Skill\",\n        trigger: \".o_field_skills_one2many button:contains('Pick a skill from the list')\",\n    },\n    {\n        content: \"Select Music\",\n        trigger: \".o_field_widget[name='skill_type_id'] label:contains('Best Music')\",\n        run: \"click\",\n    },\n    {\n        content: \"Select a song\",\n        trigger: \".o_field_widget[name='skill_id'] input\",\n        run: \"text Fortun\",\n    },\n    {\n        content: \"Choose the song\",\n        trigger: '.ui-autocomplete .ui-menu-item a:contains(\"Fortunate Son\")',\n        run: \"click\",\n    },\n    {\n        content: \"Select a level\",\n        trigger: \".o_field_widget[name='skill_level_id'] input\",\n        run: \"text Level\",\n    },\n    {\n        content: \"Choose the level\",\n        trigger: '.ui-autocomplete .ui-menu-item a:contains(\"Level 2\")',\n        run: \"click\",\n    },\n    {\n        content: \"Save new skill\",\n        trigger: \".o_form_button_save\",\n        in_modal: true,\n        run: \"click\",\n    },\n    {\n        content: \"Check if item is added\",\n        trigger: \".o_data_row td.o_data_cell:contains('Fortunate Son')\",\n        run: () => {},\n    },\n    {\n        content: \"Add a new Skill\",\n        trigger: \".o_field_skills_one2many button:contains('ADD')\",\n    },\n    {\n        content: \"Select a song\", // \"Music\" should be already selected\n        trigger: \".o_field_widget[name='skill_id'] input\",\n        run: \"text Mary\",\n    },\n    {\n        content: \"Choose the song\",\n        trigger: '.ui-autocomplete .ui-menu-item a:contains(\"Oh Mary\")',\n        run: \"click\",\n    },\n    {\n        content: \"Select a level\",\n        trigger: \".o_field_widget[name='skill_level_id'] input\",\n        run: \"text Level 7\",\n    },\n    {\n        content: \"Choose the level\",\n        trigger: '.ui-autocomplete .ui-menu-item a:contains(\"Level 7\")',\n        run: \"click\",\n    },\n    {\n        content: \"Save new skill\",\n        trigger: \".o_form_button_save\",\n        in_modal: true,\n        run: \"click\",\n    },\n    {\n        content: \"Check if item is added\",\n        trigger: \".o_data_row td.o_data_cell:contains('Oh Mary')\",\n        run: () => {},\n    },\n    ...stepUtils.saveForm(),\n]});\n", "/** @odoo-module */\n\nexport function clickQuotationButton() {\n    return [\n        {\n            content: \"click quotation button\",\n            trigger: \".o_sale_order_button\",\n        },\n    ];\n}\nexport function clickSave() {\n    return [\n        {\n            content: \"Click on Save button\",\n            trigger: '.control-button:contains(\"Save\")',\n        },\n    ];\n}\nexport function selectFirstOrder() {\n    return [\n        {\n            content: `select order`,\n            trigger: `.order-row .col.name:first`,\n        },\n        {\n            content: `click on select the order`,\n            trigger: `.selection-item:contains('Settle the order')`,\n        },\n    ];\n}\nexport function selectNthOrder(n) {\n    return [\n        {\n            content: `select order`,\n            trigger: `.order-list .order-row:nth-child(${n})`,\n        },\n        {\n            content: `click on select the order`,\n            trigger: `.selection-item:contains('Settle the order')`,\n        },\n    ];\n}\nexport function downPaymentFirstOrder() {\n    return [\n        {\n            content: `select order`,\n            trigger: `.order-row .col.name:first`,\n        },\n        {\n            content: `click on select the order`,\n            trigger: `.selection-item:contains('Apply a down payment')`,\n        },\n        {\n            content: `click on +10 button`,\n            trigger: `div.numpad.row button.col:contains(\"+10\")`,\n        },\n        {\n            content: `click on ok button`,\n            trigger: `.button.confirm`,\n        },\n    ];\n}\n\nexport function checkCustomerNotes(note) {\n    return [\n        {\n            content: `check customer notes`,\n            trigger: `.customer-note:contains(${note})`,\n        },\n    ];\n}\n\nexport function checkOrdersListEmpty() {\n    return [\n        {\n            content: \"Check that the orders list is empty\",\n            trigger: \"body:not(:has(.order-row))\",\n        },\n    ];\n}\n\nexport function downPayment20PercentFirstOrder() {\n    return [\n        {\n            content: `select order`,\n            trigger: `.order-row .col.name:first`,\n        },\n        {\n            content: `click on select the order`,\n            trigger: `.selection-item:contains('Apply a down payment (percentage)')`,\n        },\n        {\n            content: `click on +10 button`,\n            trigger: `div.numpad.row button.col:contains(\"+20\")`,\n        },\n        {\n            content: `click on ok button`,\n            trigger: `.button.confirm`,\n        },\n    ];\n}\n", "//** @odoo-module */\n\nexport function checkCustomerNotes(note) {\n    return [\n        {\n            content: `check customer notes`,\n            trigger: `.customer-note:contains(${note})`,\n        }\n    ];\n}\n", "/** @odoo-module */\n\nimport * as Chrome from \"@point_of_sale/../tests/tours/helpers/ChromeTourMethods\";\nimport * as PaymentScreen from \"@point_of_sale/../tests/tours/helpers/PaymentScreenTourMethods\";\nimport * as ReceiptScreenPos from \"@point_of_sale/../tests/tours/helpers/ReceiptScreenTourMethods\";\nimport * as ReceiptScreenSale from \"@pos_sale/../tests/helpers/ReceiptScreenTourMethods\";\nimport * as ProductScreenPos from \"@point_of_sale/../tests/tours/helpers/ProductScreenTourMethods\";\nimport * as ProductScreenSale from \"@pos_sale/../tests/helpers/ProductScreenTourMethods\";\nconst ProductScreen = { ...ProductScreenPos, ...ProductScreenSale };\nconst ReceiptScreen = { ...ReceiptScreenPos, ...ReceiptScreenSale };\nimport * as TicketScreen from \"@point_of_sale/../tests/tours/helpers/TicketScreenTourMethods\";\nimport * as Order from \"@point_of_sale/../tests/tours/helpers/generic_components/OrderWidgetMethods\";\nimport { negateStep } from \"@point_of_sale/../tests/tours/helpers/utils\";\nimport { registry } from \"@web/core/registry\";\n\nregistry.category(\"web_tour.tours\").add(\"PosSettleOrder\", {\n    test: true,\n    url: \"/pos/ui\",\n    steps: () =>\n        [\n            ProductScreen.confirmOpeningPopup(),\n            ProductScreen.clickQuotationButton(),\n            ProductScreen.selectFirstOrder(),\n            ProductScreen.selectedOrderlineHas(\"Pizza Chicken\", 9),\n            ProductScreen.pressNumpad(\"Qty\", \"2\"), // Change the quantity of the product to 2\n            ProductScreen.selectedOrderlineHas(\"Pizza Chicken\", 2),\n            ProductScreen.clickPayButton(),\n            PaymentScreen.clickPaymentMethod(\"Bank\"),\n            PaymentScreen.clickValidate(),\n            ReceiptScreen.isShown(),\n            Chrome.clickMenuButton(),\n            Chrome.clickTicketButton(),\n        ].flat(),\n});\n\nregistry.category(\"web_tour.tours\").add(\"PosSettleOrderIncompatiblePartner\", {\n    test: true,\n    url: \"/pos/ui\",\n    steps: () =>\n        [\n            ProductScreen.confirmOpeningPopup(),\n            ProductScreen.clickQuotationButton(),\n            // The second item in the list is the first sale.order.\n            ProductScreen.selectNthOrder(2),\n            ProductScreen.selectedOrderlineHas(\"product1\", 1),\n            ProductScreen.totalAmountIs(\"10.00\"),\n\n            ProductScreen.clickQuotationButton(),\n            // The first item in the list is the second sale.order.\n            // Selecting the 2nd sale.order should use a new order,\n            // therefore, the total amount will change.\n            ProductScreen.selectNthOrder(1),\n            ProductScreen.selectedOrderlineHas(\"product2\", 1),\n            ProductScreen.totalAmountIs(\"11.00\"),\n        ].flat(),\n});\n\nregistry.category(\"web_tour.tours\").add(\"PosSettleOrder2\", {\n    test: true,\n    url: \"/pos/ui\",\n    steps: () =>\n        [\n            ProductScreen.confirmOpeningPopup(),\n            ProductScreen.clickQuotationButton(),\n            ProductScreen.selectFirstOrder(),\n            ProductScreen.clickOrderline(\"Product A\", \"1\"),\n            ProductScreen.selectedOrderlineHas(\"Product A\", \"1.00\"),\n            ProductScreen.clickOrderline(\"Product B\", \"1\"),\n            ProductScreen.pressNumpad(\"Qty\", \"0\"),\n            ProductScreen.selectedOrderlineHas(\"Product B\", \"0.00\"),\n            ProductScreen.clickPayButton(),\n            PaymentScreen.clickPaymentMethod(\"Bank\"),\n            PaymentScreen.remainingIs(\"0.0\"),\n            PaymentScreen.clickValidate(),\n            ReceiptScreen.isShown(),\n        ].flat(),\n});\n\nregistry.category(\"web_tour.tours\").add(\"PosRefundDownpayment\", {\n    test: true,\n    url: \"/pos/ui\",\n    steps: () =>\n        [\n            ProductScreen.clickQuotationButton(),\n            ProductScreen.downPaymentFirstOrder(),\n            ProductScreen.clickPayButton(),\n            PaymentScreen.clickPaymentMethod(\"Cash\"),\n            PaymentScreen.clickValidate(),\n            ReceiptScreen.clickNextOrder(),\n            ProductScreen.clickRefund(),\n            // Filter should be automatically 'Paid'.\n            TicketScreen.filterIs(\"Paid\"),\n            TicketScreen.selectOrder(\"-0001\"),\n            Order.hasLine({\n                productName: \"Down Payment\",\n                withClass: \".selected\",\n                quantity: \"1.0\",\n            }),\n            ProductScreen.pressNumpad(\"1\"),\n            TicketScreen.confirmRefund(),\n            ProductScreen.clickPayButton(),\n            PaymentScreen.clickPaymentMethod(\"Cash\"),\n            PaymentScreen.clickValidate(),\n            ReceiptScreen.clickNextOrder(),\n        ].flat(),\n});\n\nregistry.category(\"web_tour.tours\").add(\"PosSettleOrderRealTime\", {\n    test: true,\n    url: \"/pos/ui\",\n    steps: () =>\n        [\n            ProductScreen.confirmOpeningPopup(),\n            ProductScreen.clickQuotationButton(),\n            ProductScreen.selectFirstOrder(),\n            ProductScreen.totalAmountIs(40),\n            ProductScreen.clickPayButton(),\n            PaymentScreen.clickPaymentMethod(\"Bank\"),\n            PaymentScreen.clickValidate(),\n            ReceiptScreen.isShown(),\n        ].flat(),\n});\n\nregistry.category(\"web_tour.tours\").add(\"PosSettleOrder3\", {\n    test: true,\n    url: \"/pos/ui\",\n    steps: () =>\n        [\n            ProductScreen.confirmOpeningPopup(),\n            ProductScreen.clickQuotationButton(),\n            ProductScreen.selectFirstOrder(),\n            ProductScreen.selectedOrderlineHas(\"Product A\", \"1.00\"),\n            ProductScreen.clickPayButton(),\n            PaymentScreen.clickPaymentMethod(\"Bank\"),\n            PaymentScreen.remainingIs(\"0.0\"),\n            PaymentScreen.clickValidate(),\n            ReceiptScreen.isShown(),\n        ].flat(),\n});\n\nregistry.category(\"web_tour.tours\").add(\"PosSettleOrderNotGroupable\", {\n    test: true,\n    url: \"/pos/ui\",\n    steps: () =>\n        [\n            ProductScreen.confirmOpeningPopup(),\n            ProductScreen.clickQuotationButton(),\n            ProductScreen.selectFirstOrder(),\n            ProductScreen.totalAmountIs(32.2), // 3.5 * 8 * 1.15\n            ProductScreen.selectedOrderlineHas(\"Product A\", \"0.50\"),\n            ProductScreen.checkOrderlinesNumber(4),\n        ].flat(),\n});\n\nregistry.category(\"web_tour.tours\").add(\"PosSettleOrderWithNote\", {\n    test: true,\n    url: \"/pos/ui\",\n    steps: () =>\n        [\n            ProductScreen.confirmOpeningPopup(),\n            ProductScreen.clickQuotationButton(),\n            ProductScreen.selectFirstOrder(),\n            ProductScreen.checkCustomerNotes(\"Customer note 2--Customer note 3\"),\n            ProductScreen.clickPayButton(),\n            PaymentScreen.clickPaymentMethod(\"Bank\"),\n            PaymentScreen.clickValidate(),\n            ReceiptScreen.checkCustomerNotes(\"Customer note 2--Customer note 3\"),\n            ReceiptScreen.clickNextOrder(),\n        ].flat(),\n});\n\nregistry.category(\"web_tour.tours\").add(\"PosSettleAndInvoiceOrder\", {\n    test: true,\n    url: \"/pos/ui\",\n    steps: () =>\n        [\n            ProductScreen.confirmOpeningPopup(),\n            ProductScreen.clickQuotationButton(),\n            ProductScreen.selectFirstOrder(),\n            ProductScreen.clickPayButton(),\n            PaymentScreen.clickPaymentMethod(\"Bank\"),\n            PaymentScreen.clickInvoiceButton(),\n            PaymentScreen.clickValidate(),\n        ].flat(),\n});\n\nregistry.category(\"web_tour.tours\").add(\"PosQuotationSaving\", {\n    test: true,\n    url: \"/pos/ui\",\n    steps: () =>\n        [\n            ProductScreen.confirmOpeningPopup(),\n            ProductScreen.clickQuotationButton(),\n            ProductScreen.selectFirstOrder(),\n            ProductScreen.selectedOrderlineHas(\"Product\", \"4.00\", \"40.00\"),\n            ProductScreen.clickSave(),\n        ].flat(),\n});\n\nregistry.category(\"web_tour.tours\").add(\"PosOrderDoesNotRemainInList\", {\n    test: true,\n    url: \"/pos/ui\",\n    steps: () =>\n        [\n            ProductScreen.confirmOpeningPopup(),\n            ProductScreen.clickQuotationButton(),\n            ProductScreen.selectFirstOrder(),\n            ProductScreen.clickPayButton(),\n            PaymentScreen.clickPaymentMethod(\"Bank\"),\n            PaymentScreen.clickValidate(),\n            ReceiptScreen.clickNextOrder(),\n            ProductScreen.clickQuotationButton(),\n            ProductScreen.checkOrdersListEmpty(),\n        ].flat(),\n});\n\nregistry.category(\"web_tour.tours\").add(\"PosSettleCustomPrice\", {\n    test: true,\n    url: \"/pos/ui\",\n    steps: () =>\n        [\n            ProductScreen.confirmOpeningPopup(),\n            ProductScreen.clickQuotationButton(),\n            ProductScreen.selectFirstOrder(),\n            ProductScreen.selectedOrderlineHas('product_a', '1', '100'),\n            ProductScreen.clickPartnerButton(),\n            ProductScreen.clickCustomer(\"Test Partner AAA\"),\n            ProductScreen.selectedOrderlineHas('product_a', '1', '100'),\n        ].flat(),\n});\n\nregistry.category(\"web_tour.tours\").add(\"PosSettleDraftOrder\", {\n    test: true,\n    url: \"/pos/ui\",\n    steps: () =>\n        [\n            ProductScreen.confirmOpeningPopup(),\n            ProductScreen.clickQuotationButton(),\n            ProductScreen.selectFirstOrder(),\n            ProductScreen.selectedOrderlineHas('Test service product', '1.00', '50.00'),\n        ].flat(),\n});\n\nregistry.category(\"web_tour.tours\").add(\"PoSDownPaymentLinesPerTax\", {\n    test: true,\n    steps: () =>\n        [\n            ProductScreen.confirmOpeningPopup(),\n            ProductScreen.clickQuotationButton(),\n            ProductScreen.downPayment20PercentFirstOrder(),\n            Order.hasLine({\n                productName: \"Down Payment\",\n                quantity: \"1.0\",\n                price: \"2.20\",\n            }),\n            Order.hasLine({\n                productName: \"Down Payment\",\n                quantity: \"1.0\",\n                price: \"1.00\",\n            }),\n            Order.hasLine({\n                productName: \"Down Payment\",\n                quantity: \"1.0\",\n                price: \"3.00\",\n            }),\n            ProductScreen.clickPayButton(),\n            PaymentScreen.clickPaymentMethod(\"Bank\"),\n            PaymentScreen.clickInvoiceButton(),\n            PaymentScreen.clickValidate(),\n            ReceiptScreen.isShown(),\n        ].flat(),\n});\n\nregistry.category(\"web_tour.tours\").add(\"PosShipLaterNoDefault\", {\n    test: true,\n    steps: () =>\n        [\n            ProductScreen.confirmOpeningPopup(),\n            ProductScreen.clickQuotationButton(),\n            ProductScreen.selectFirstOrder(),\n            ProductScreen.clickPayButton(),\n            PaymentScreen.isShown(),\n            negateStep(PaymentScreen.shippingLaterHighlighted()),\n        ].flat(),\n});\n\nregistry.category(\"web_tour.tours\").add(\"PoSDownPaymentLinesPerFixedTax\", {\n    test: true,\n    steps: () =>\n        [\n            ProductScreen.confirmOpeningPopup(),\n            ProductScreen.clickQuotationButton(),\n            ProductScreen.downPayment20PercentFirstOrder(),\n            Order.hasLine({\n                productName: \"Down Payment\",\n                quantity: \"1.0\",\n                price: \"22\",\n            }),\n            Order.hasNoTax(),\n            ProductScreen.totalAmountIs(22.0), \n        ].flat(),\n});\n", "/** @odoo-module **/\n\nimport { jsonrpc } from \"@web/core/network/rpc_service\";\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nfunction openRoot() {\n    return [{\n        content: \"return to client root to avoid race condition\",\n        trigger: 'body',\n        run() {\n            $('body').addClass('wait');\n            window.location = '/web';\n        }\n    }, {\n        content: \"wait for client reload\",\n        trigger: 'body:not(.wait)',\n        run() {}\n    }];\n}\nfunction openUserProfileAtSecurityTab() {\n    return [{\n        content: 'Open user account menu',\n        trigger: '.o_user_menu .dropdown-toggle',\n        run: 'click',\n    }, {\n        content: \"Open preferences / profile screen\",\n        trigger: '[data-menu=settings]',\n        run: 'click',\n    }, {\n        content: \"Switch to security tab\",\n        trigger: 'a[role=tab]:contains(\"Account Security\")',\n        run: 'click',\n    }];\n}\n\n/**\n * Checks that the TOTP button is in the specified state (true = enabled =\n * can disable, false = disabled = can enable), then closes the profile dialog\n * if it's one (= hr not installed).\n *\n * If no totp state is provided, just checks that the toggle exists.\n */\nfunction closeProfileDialog({content, totp_state}) {\n    let trigger;\n    switch (totp_state) {\n    case true: trigger = 'button[name=action_totp_disable]'; break;\n    case false: trigger = 'button[name=action_totp_enable_wizard]'; break;\n    case undefined: trigger = 'button.o_auth_2fa_btn'; break;\n    default: throw new Error(`Invalid totp state ${totp_state}`)\n    }\n\n    return [{\n        content,\n        trigger,\n        run() {\n            const $modal = this.$anchor.parents('.o_dialog');\n            if ($modal.length) {\n                $modal.find('button[name=preference_cancel]').click()\n            }\n        }\n    }, {\n        trigger: 'body',\n        async run() {\n            while (document.querySelector('.o_dialog')) {\n                await Promise.resolve();\n            }\n            this.$anchor.addClass('dialog-closed');\n        },\n    }, {\n        trigger: 'body.dialog-closed',\n        run() {},\n    }];\n}\n\nregistry.category(\"web_tour.tours\").add('totp_tour_setup', {\n    test: true,\n    url: '/web',\n    steps: () => [...openUserProfileAtSecurityTab(), {\n    content: \"Open totp wizard\",\n    trigger: 'button[name=action_totp_enable_wizard]',\n}, {\n    content: \"Check that we have to enter enhanced security mode and input password\",\n    extra_trigger: 'div:contains(\"enter your password\")',\n    trigger: '[name=password] input',\n    run: 'text demo',\n}, {\n    content: \"Confirm\",\n    trigger: \"button:contains(Confirm Password)\",\n}, {\n    content: \"Check the wizard has opened\",\n    trigger: 'li:contains(\"When requested to do so\")',\n    run() {}\n}, {\n    content: \"Get secret from collapsed div\",\n    trigger: 'a:contains(\"Cannot scan it?\")',\n    async run(helpers) {\n        const $secret = this.$anchor.closest('div').find('[name=secret] span:first-child');\n        const $copyBtn = $secret.find('button');\n        $copyBtn.remove();\n        const token = await jsonrpc('/totphook', {\n            secret: $secret.text()\n        });\n        helpers.text(token, '[name=code] input');\n        helpers.click('button.btn-primary:contains(Activate)');\n        $('body').addClass('got-token')\n    }\n}, {\n    content: 'wait for rpc',\n    trigger: 'body.got-token',\n    run() {}\n},\n...openRoot(),\n...openUserProfileAtSecurityTab(),\n...closeProfileDialog({\n    content: \"Check that the button has changed\",\n    totp_state: true,\n}),\n]});\n\nregistry.category(\"web_tour.tours\").add('totp_login_enabled', {\n    test: true,\n    url: '/',\n    steps: () => [{\n    content: \"check that we're on the login page or go to it\",\n    trigger: 'input#login, a:contains(Sign in)'\n}, {\n    content: \"input login\",\n    trigger: 'input#login',\n    run: 'text demo',\n}, {\n    content: 'input password',\n    trigger: 'input#password',\n    run: 'text demo',\n}, {\n    content: \"click da button\",\n    trigger: 'button:contains(\"Log in\")',\n}, {\n    content: \"expect totp screen\",\n    trigger: 'label:contains(Authentication Code)',\n}, {\n    content: \"input code\",\n    trigger: 'input[name=totp_token]',\n    async run(helpers) {\n        // TODO: if tours are ever async-aware the click should get moved out,\n        //       but currently there's no great way to make the tour wait until\n        //       we've retrieved and set the token: `:empty()` is aboutthe text\n        //       content of the HTML element, not the JS value property. We\n        //       could set a class but that's really no better than\n        //       procedurally clicking the button after we've set the input.\n        const token = await jsonrpc('/totphook');\n        helpers.text(token);\n        helpers.click('button:contains(\"Log in\")');\n    }\n}, {\n    content: \"check we're logged in\",\n    trigger: \".o_user_menu .dropdown-toggle\",\n    run() {}\n}]});\n\nregistry.category(\"web_tour.tours\").add('totp_login_device', {\n    test: true,\n    url: '/',\n    steps: () => [{\n    content: \"check that we're on the login page or go to it\",\n    trigger: 'input#login, a:contains(Sign in)'\n}, {\n    content: \"input login\",\n    trigger: 'input#login',\n    run: 'text demo',\n}, {\n    content: 'input password',\n    trigger: 'input#password',\n    run: 'text demo',\n}, {\n    content: \"click da button\",\n    trigger: 'button:contains(\"Log in\")',\n}, {\n    content: \"expect totp screen\",\n    trigger: 'label:contains(Authentication Code)',\n}, {\n    content: \"check remember device box\",\n    trigger: 'label[for=switch-remember]',\n}, {\n    content: \"input code\",\n    trigger: 'input[name=totp_token]',\n    async run(helpers) {\n        const token = await jsonrpc('/totphook')\n        helpers.text(token);\n        helpers.click('button:contains(\"Log in\")');\n    }\n}, {\n    content: \"check we're logged in\",\n    trigger: \".o_user_menu .dropdown-toggle\",\n    run: 'click',\n}, {\n    content: \"click the Log out button\",\n    trigger: '.dropdown-item[data-menu=logout]',\n}, {\n    content: \"check that we're back on the login page or go to it\",\n    trigger: 'input#login, a:contains(Log in)'\n}, {\n    content: \"input login again\",\n    trigger: 'input#login',\n    run: 'text demo',\n}, {\n    content: 'input password again',\n    trigger: 'input#password',\n    run: 'text demo',\n}, {\n    content: \"click da button again\",\n    trigger: 'button:contains(\"Log in\")',\n},  {\n    content: \"check we're logged in without 2FA\",\n    trigger: \".o_user_menu .dropdown-toggle\",\n    run() {}\n},\n// now go and disable two-factor authentication would be annoying to do in a separate tour\n// because we'd need to login & totp again as HttpCase.authenticate can't\n// succeed w/ totp enabled\n...openUserProfileAtSecurityTab(),\n{\n    content: \"Open totp wizard\",\n    trigger: 'button[name=action_totp_disable]',\n}, {\n    content: \"Check that we have to enter enhanced security mode and input password\",\n    extra_trigger: 'div:contains(\"enter your password\")',\n    trigger: '[name=password] input',\n    run: 'text demo',\n}, {\n    content: \"Confirm\",\n    trigger: \"button:contains(Confirm Password)\",\n},\n...openRoot(),\n...openUserProfileAtSecurityTab(),\n...closeProfileDialog({\n    content: \"Check that the button has changed\",\n    totp_state: false\n}),\n]});\n\nregistry.category(\"web_tour.tours\").add('totp_login_disabled', {\n    test: true,\n    url: '/',\n    steps: () => [{\n    content: \"check that we're on the login page or go to it\",\n    trigger: 'input#login, a:contains(Sign in)'\n}, {\n    content: \"input login\",\n    trigger: 'input#login',\n    run: 'text demo',\n}, {\n    content: 'input password',\n    trigger: 'input#password',\n    run: 'text demo',\n}, {\n    content: \"click da button\",\n    trigger: 'button:contains(\"Log in\")',\n},\n// normally we'd end the tour here as it's all we care about but there are a\n// bunch of ongoing queries from the loading of the web client which cause\n// issues, so go and open the preferences / profile screen to make sure\n// everything settles down\n...openUserProfileAtSecurityTab(),\n// close the dialog if that makes sense\n...closeProfileDialog({})\n]});\n\nconst columns = {};\nregistry.category(\"web_tour.tours\").add('totp_admin_disables', {\n    test: true,\n    url: '/web',\n    steps: () => [stepUtils.showAppsMenuItem(), {\n    content: 'Go to settings',\n    trigger: '[data-menu-xmlid=\"base.menu_administration\"]'\n}, {\n    content: 'Wait for page',\n    trigger: '.o_menu_brand:contains(\"Settings\")',\n    run() {}\n}, {\n    content: \"Open Users menu\",\n    trigger: '[data-menu-xmlid=\"base.menu_users\"]'\n}, {\n    content: \"Open Users view\",\n    trigger: '[data-menu-xmlid=\"base.menu_action_res_users\"]',\n    run(helpers) {\n        // funny story: the users view we're trying to reach, sometimes we're\n        // already there, but if we re-click the next step executes before the\n        // action has the time to re-load, the one after that doesn't, and our\n        // selection get discarded by the action reloading, so here try to\n        // see if we're already on the users action through the breadcrumb and\n        // just close the menu if so\n        const $crumb = $('.breadcrumb');\n        if ($crumb.text().indexOf('Users') === -1) {\n            // on general settings page, click menu\n            helpers.click();\n        } else {\n            // else close menu\n            helpers.click($('[data-menu-xmlid=\"base.menu_users\"]'));\n        }\n    }\n}, {\n    content: \"Find Demo User\",\n    trigger: 'td.o_data_cell:contains(\"demo\")',\n    run(helpers) {\n        const $titles = this.$anchor.closest('table').find('tr:first th');\n        for (let i=0; i<$titles.length; ++i) {\n            columns[$titles[i].getAttribute('data-name')] = i;\n        }\n        const $row = this.$anchor.closest('tr');\n        const sel = $row.find('.o_list_record_selector input[type=checkbox]');\n        helpers.click(sel);\n    }\n}, {\n    content: \"Open Actions menu\",\n    trigger: 'button.dropdown-toggle:contains(\"Action\")'\n}, {\n    content: \"Select totp remover\",\n    trigger: 'span.dropdown-item:contains(Disable two-factor authentication)'\n}, { // enhanced security yo\n    content: \"Check that we have to enter enhanced security mode & input password\",\n    extra_trigger: 'div:contains(\"enter your password\")',\n    trigger: '[name=password] input',\n    run: 'text admin',\n}, {\n    content: \"Confirm\",\n    trigger: \"button:contains(Confirm Password)\",\n}, {\n    content: \"open the user's form\",\n    trigger: \"td.o_data_cell:contains(demo)\",\n}, {\n    content: \"go to Account security Tab\",\n    trigger: \"a.nav-link:contains(Account Security)\",\n}, ...closeProfileDialog({\n    content: \"check that demo user has been de-totp'd\",\n    totp_state: false,\n}),\n]})\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nfunction openAccountSettingsTab() {\n    return [{\n        content: 'Go to settings',\n        trigger: '[data-menu-xmlid=\"base.menu_administration\"]'\n    }, {\n        content: 'Wait for page',\n        trigger: '.o_menu_brand:contains(\"Settings\")',\n        run: () => {}\n    }, {\n        content: \"Open Users menu\",\n        trigger: '[data-menu-xmlid=\"base.menu_users\"]'\n    }, {\n        content: \"Open Users view\",\n        trigger: '[data-menu-xmlid=\"base.menu_action_res_users\"]',\n        run: function (helpers) {\n            // funny story: the users view we're trying to reach, sometimes we're\n            // already there, but if we re-click the next step executes before the\n            // action has the time to re-load, the one after that doesn't, and our\n            // selection get discarded by the action reloading, so here try to\n            // see if we're already on the users action through the breadcrumb and\n            // just close the menu if so\n            const $crumb = $('.breadcrumb');\n            if ($crumb.text().indexOf('Users') === -1) {\n                // on general settings page, click menu\n                helpers.click();\n            } else {\n                // else close menu\n                helpers.click($('[data-menu-xmlid=\"base.menu_users\"]'));\n            }\n        }\n    }];\n}\n\nregistry.category(\"web_tour.tours\").add('totp_admin_self_invite', {\n    test: true,\n    url: '/web',\n    steps: () => [stepUtils.showAppsMenuItem(), ...openAccountSettingsTab(), {\n    content: \"open the user's form\",\n    trigger: \"td.o_data_cell:contains(admin)\",\n}, {\n    content: \"go to Account security Tab\",\n    trigger: \"a.nav-link:contains(Account Security)\",\n}, {\n    content: \"check that user cannot invite themselves to use 2FA.\",\n    trigger: \"body\",\n    run: function () {\n        const inviteBtn = $('button:contains(Invite to use 2FA)')[0];\n        if (!inviteBtn) {\n            $('body').addClass('CannotInviteYourself');\n        }\n    }\n}, {\n    content: \"check that user cannot invite themself.\",\n    trigger: \"body.CannotInviteYourself\",\n    isCheck: true,\n}]});\n\nregistry.category(\"web_tour.tours\").add('totp_admin_invite', {\n    test: true,\n    url: '/web',\n    steps: () => [stepUtils.showAppsMenuItem(), ...openAccountSettingsTab(), {\n    content: \"open the user's form\",\n    trigger: \"td.o_data_cell:contains(demo)\",\n}, {\n    content: \"go to Account security Tab\",\n    trigger: \"a.nav-link:contains(Account Security)\",\n}, {\n    content: \"check that demo user can be invited to use 2FA.\",\n    trigger: \"button:contains(Invite to use 2FA)\",\n    isCheck: true,\n}]});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\nimport { jsonrpc } from \"@web/core/network/rpc_service\";\n\nregistry.category(\"web_tour.tours\").add('totportal_tour_setup', {\n    test: true,\n    url: '/my/security',\n    steps: () => [{\n    content: \"Open totp wizard\",\n    trigger: 'button#auth_totp_portal_enable',\n}, {\n    content: \"Check that we have to enter enhanced security mode\",\n    trigger: 'div:contains(\"enter your password\")',\n    run: () => {},\n}, {\n    content: \"Input password\",\n    trigger: '[name=password]',\n    run: 'text portal', // FIXME: better way to do this?\n}, {\n    content: \"Confirm\",\n    trigger: \"button:contains(Confirm Password)\",\n}, {\n    content: \"Check the wizard has opened\",\n    trigger: 'li:contains(\"scan the barcode below\")',\n    run: () => {}\n}, {\n    content: \"Get secret from collapsed div\",\n    trigger: 'a:contains(\"Cannot scan it?\")',\n    run: async function(helpers) {\n        const secret = this.$anchor.closest('div').find('span[name=\"secret\"]').text();\n        const token = await jsonrpc('/totphook', {\n            secret\n        });\n        helpers._text(helpers._get_action_values('input[name=code]'), token);\n        helpers._click(helpers._get_action_values('button.btn-primary:contains(Activate)'));\n    }\n}, {\n    content: \"Check that the button has changed\",\n    trigger: 'button:contains(Disable two-factor authentication)',\n    run: () => {}\n}]});\n\nregistry.category(\"web_tour.tours\").add('totportal_login_enabled', {\n    test: true,\n    url: '/',\n    steps: () => [{\n    content: \"check that we're on the login page or go to it\",\n    trigger: 'input#login, a:contains(Sign in)'\n}, {\n    content: \"input login\",\n    trigger: 'input#login',\n    run: 'text portal',\n}, {\n    content: 'input password',\n    trigger: 'input#password',\n    run: 'text portal',\n}, {\n    content: \"click da button\",\n    trigger: 'button:contains(\"Log in\")',\n}, {\n    content: \"expect totp screen\",\n    trigger: 'label:contains(Authentication Code)',\n}, {\n    content: \"input code\",\n    trigger: 'input[name=totp_token]',\n    run: async function (helpers) {\n        const token = await jsonrpc('/totphook');\n        helpers._text(helpers._get_action_values(), token);\n        // FIXME: is there a way to put the button as its own step trigger without\n        //        the tour straight blowing through and not waiting for this?\n        helpers._click(helpers._get_action_values('button:contains(\"Log in\")'));\n    }\n}, {\n    content: \"check we're logged in\",\n    trigger: \"h3:contains(My account)\",\n    run: () => {}\n}, {\n    content: \"go back to security\",\n    trigger: \"a:contains(Security)\",\n},{\n    content: \"Open totp wizard\",\n    trigger: 'button#auth_totp_portal_disable',\n}, {\n    content: \"Check that we have to enter enhanced security mode\",\n    trigger: 'div:contains(\"enter your password\")',\n    run: () => {},\n}, {\n    content: \"Input password\",\n    trigger: '[name=password]',\n    run: 'text portal', // FIXME: better way to do this?\n}, {\n    content: \"Confirm\",\n    trigger: \"button:contains(Confirm Password)\",\n}, {\n    content: \"Check that the button has changed\",\n    trigger: 'button:contains(Enable two-factor authentication)',\n    run: () => {}\n}]});\n\nregistry.category(\"web_tour.tours\").add('totportal_login_disabled', {\n    test: true,\n    url: '/',\n    steps: () => [{\n    content: \"check that we're on the login page or go to it\",\n    trigger: 'input#login, a:contains(Sign in)'\n}, {\n    content: \"input login\",\n    trigger: 'input#login',\n    run: 'text portal',\n}, {\n    content: 'input password',\n    trigger: 'input#password',\n    run: 'text portal',\n}, {\n    content: \"click da button\",\n    trigger: 'button:contains(\"Log in\")',\n}, {\n    content: \"check we're logged in\",\n    trigger: \"h3:contains(My account)\",\n    run: () => {}\n}]});\n", "/** @odoo-module */\n\nimport * as ProductScreen from \"@point_of_sale/../tests/tours/helpers/ProductScreenTourMethods\";\nimport * as PaymentScreen from \"@point_of_sale/../tests/tours/helpers/PaymentScreenTourMethods\";\n\nexport function checkSimplifiedInvoiceNumber(number) {\n    return [\n        {\n            content: \"verify that the simplified invoice number appears correctly on the receipt\",\n            trigger: `.receipt-screen .simplified-invoice-number:contains('${number}')`,\n            isCheck: true,\n        },\n    ];\n}\n\nexport function pay() {\n    return [\n        ...ProductScreen.clickPayButton(),\n        ...PaymentScreen.clickPaymentMethod(\"Bank\"),\n        ...PaymentScreen.clickValidate(),\n    ];\n}\n", "/** @odoo-module */\n\nimport * as ErrorPopup from \"@point_of_sale/../tests/tours/helpers/ErrorPopupTourMethods\";\nimport * as ProductScreen from \"@point_of_sale/../tests/tours/helpers/ProductScreenTourMethods\";\nimport * as ReceiptScreen from \"@point_of_sale/../tests/tours/helpers/ReceiptScreenTourMethods\";\nimport * as PaymentScreen from \"@point_of_sale/../tests/tours/helpers/PaymentScreenTourMethods\";\nimport * as PartnerListScreen from \"@point_of_sale/../tests/tours/helpers/PartnerListScreenTourMethods\";\nimport { registry } from \"@web/core/registry\";\nimport { checkSimplifiedInvoiceNumber, pay } from \"./helpers/receipt_helpers\";\n\nconst SIMPLIFIED_INVOICE_LIMIT = 1000;\n\nregistry.category(\"web_tour.tours\").add(\"spanish_pos_tour\", {\n    test: true,\n    steps: () => [\n        ...ProductScreen.confirmOpeningPopup(),\n\n        ...ProductScreen.addOrderline(\"Desk Pad\", \"1\"),\n        ...pay(),\n        ...checkSimplifiedInvoiceNumber(\"0001\"),\n        ...ReceiptScreen.clickNextOrder(),\n\n        ...ProductScreen.addOrderline(\"Desk Pad\", \"1\", SIMPLIFIED_INVOICE_LIMIT - 1),\n        ...pay(),\n        ...checkSimplifiedInvoiceNumber(\"0002\"),\n        ...ReceiptScreen.clickNextOrder(),\n\n        ...ProductScreen.addOrderline(\"Desk Pad\", \"1\", SIMPLIFIED_INVOICE_LIMIT + 1),\n        ...pay(),\n        ...ErrorPopup.isShown(),\n        ...ErrorPopup.clickConfirm(),\n\n        ...PaymentScreen.clickInvoiceButton(),\n        ...PaymentScreen.clickValidate(),\n        {\n            content: \"verify that the pos requires the selection of a partner\",\n            trigger: `div.popup.popup-confirm .modal-header:contains('Please select the Customer') ~ footer div.button.confirm`,\n        },\n\n        ...PartnerListScreen.clickPartner(\"\"),\n\n        ...PaymentScreen.isInvoiceOptionSelected(),\n        ...PaymentScreen.clickValidate(),\n        {\n            content:\n                \"verify that the simplified invoice number does not appear on the receipt, because this order is invoiced, so it does not have a simplified invoice number\",\n            trigger: \".receipt-screen:not(:has(.simplified-invoice-number))\",\n            isCheck: true,\n        },\n        ...ReceiptScreen.clickNextOrder(),\n\n        ...ProductScreen.addOrderline(\"Desk Pad\", \"1\"),\n        ...pay(),\n        ...checkSimplifiedInvoiceNumber(\"0003\"),\n\n        ...ReceiptScreen.clickNextOrder(),\n        ...ProductScreen.addOrderline(\"Desk Pad\", \"1\"),\n        ...ProductScreen.clickPayButton(),\n        ...PaymentScreen.clickPaymentMethod(\"Customer Account\"),\n        ...PaymentScreen.clickValidate(),\n        {\n            content: \"verify that the pos requires the selection of a partner\",\n            trigger: `div.popup.popup-confirm .modal-header:contains('Customer Required')`,\n        },\n\n    ],\n});\n", "/** @odoo-module */\n\nimport * as PosHr from \"@pos_hr/../tests/tours/PosHrTourMethods\";\nimport * as ProductScreen from \"@point_of_sale/../tests/tours/helpers/ProductScreenTourMethods\";\nimport * as TicketScreen from \"@point_of_sale/../tests/tours/helpers/TicketScreenTourMethods\";\nimport * as Chrome from \"@point_of_sale/../tests/tours/helpers/ChromeTourMethods\";\nimport * as ErrorPopup from \"@point_of_sale/../tests/tours/helpers/ErrorPopupTourMethods\";\nimport * as NumberPopup from \"@point_of_sale/../tests/tours/helpers/NumberPopupTourMethods\";\nimport * as SelectionPopup from \"@point_of_sale/../tests/tours/helpers/SelectionPopupTourMethods\";\nimport { registry } from \"@web/core/registry\";\n\nregistry.category(\"web_tour.tours\").add(\"PosHrTour\", {\n    test: true,\n    url: \"/pos/ui\",\n    steps: () =>\n        [\n            PosHr.loginScreenIsShown(),\n            PosHr.clickLoginButton(),\n            SelectionPopup.isShown(),\n            SelectionPopup.hasSelectionItem(\"Pos Employee1\"),\n            SelectionPopup.hasSelectionItem(\"Pos Employee2\"),\n            SelectionPopup.hasSelectionItem(\"Mitchell Admin\"),\n            SelectionPopup.clickItem(\"Pos Employee1\"),\n            NumberPopup.isShown(),\n            NumberPopup.enterValue(\"25\"),\n            NumberPopup.inputShownIs(\"\u2022\u2022\"),\n            NumberPopup.pressNumpad(\"8 1\"),\n            NumberPopup.fillPopupValue(\"2581\"),\n            NumberPopup.inputShownIs(\"\u2022\u2022\u2022\u2022\"),\n            NumberPopup.clickConfirm(),\n            ErrorPopup.isShown(),\n            ErrorPopup.clickConfirm(),\n            PosHr.clickLoginButton(),\n            SelectionPopup.clickItem(\"Pos Employee1\"),\n            NumberPopup.isShown(),\n            NumberPopup.enterValue(\"25\"),\n            NumberPopup.inputShownIs(\"\u2022\u2022\"),\n            NumberPopup.pressNumpad(\"8 0\"),\n            NumberPopup.fillPopupValue(\"2580\"),\n            NumberPopup.inputShownIs(\"\u2022\u2022\u2022\u2022\"),\n            NumberPopup.clickConfirm(),\n            ProductScreen.isShown(),\n            ProductScreen.confirmOpeningPopup(),\n            PosHr.cashierNameIs(\"Pos Employee1\"),\n            PosHr.clickCashierName(),\n            SelectionPopup.clickItem(\"Mitchell Admin\"),\n            PosHr.cashierNameIs(\"Mitchell Admin\"),\n            Chrome.clickMenuButton(),\n            PosHr.clickLockButton(),\n            PosHr.clickLoginButton(),\n            SelectionPopup.clickItem(\"Pos Employee2\"),\n            NumberPopup.enterValue(\"12\"),\n            NumberPopup.inputShownIs(\"\u2022\u2022\"),\n            NumberPopup.pressNumpad(\"3 4\"),\n            NumberPopup.fillPopupValue(\"1234\"),\n            NumberPopup.inputShownIs(\"\u2022\u2022\u2022\u2022\"),\n            NumberPopup.clickConfirm(),\n            ProductScreen.isShown(),\n            ProductScreen.clickHomeCategory(),\n\n            // Create orders and check if the ticket list has the right employee for each order\n            // order for employee 2\n            ProductScreen.addOrderline(\"Desk Pad\", \"1\", \"2\"),\n            ProductScreen.totalAmountIs(\"2.0\"),\n            Chrome.clickMenuButton(),\n            Chrome.clickTicketButton(),\n            TicketScreen.nthRowContains(2, \"Pos Employee2\", false),\n\n            // order for employee 1\n            Chrome.clickMenuButton(),\n            PosHr.clickLockButton(),\n            PosHr.login(\"Pos Employee1\", \"2580\"),\n            TicketScreen.clickNewTicket(),\n            ProductScreen.addOrderline(\"Desk Pad\", \"1\", \"4\"),\n            ProductScreen.totalAmountIs(\"4.0\"),\n            Chrome.clickMenuButton(),\n            Chrome.clickTicketButton(),\n            TicketScreen.nthRowContains(2, \"Pos Employee2\", false),\n            TicketScreen.nthRowContains(3, \"Pos Employee1\", false),\n\n            // order for admin\n            PosHr.clickCashierName(),\n            SelectionPopup.clickItem(\"Mitchell Admin\"),\n            PosHr.cashierNameIs(\"Mitchell Admin\"),\n            TicketScreen.clickNewTicket(),\n            ProductScreen.addOrderline(\"Desk Pad\", \"1\", \"8\"),\n            ProductScreen.totalAmountIs(\"8.0\"),\n            Chrome.clickMenuButton(),\n            Chrome.clickTicketButton(),\n            TicketScreen.nthRowContains(4, \"Mitchell Admin\", false),\n        ].flat(),\n});\n\nregistry.category(\"web_tour.tours\").add(\"CashierStayLogged\", {\n    test: true,\n    steps: () =>\n        [\n            PosHr.loginScreenIsShown(),\n            PosHr.clickLoginButton(),\n            SelectionPopup.isShown(),\n            SelectionPopup.hasSelectionItem(\"Pos Employee1\"),\n            SelectionPopup.hasSelectionItem(\"Pos Employee2\"),\n            SelectionPopup.hasSelectionItem(\"Mitchell Admin\"),\n            SelectionPopup.clickItem(\"Mitchell Admin\"),\n            PosHr.cashierNameIs(\"Mitchell Admin\"),\n            PosHr.refreshPage(),\n            PosHr.cashierNameIs(\"Mitchell Admin\"),\n            Chrome.clickMenuButton(),\n            PosHr.clickLockButton(),\n            PosHr.refreshPage(),\n            PosHr.loginScreenIsShown(),\n        ].flat(),\n});\n", "/** @odoo-module */\n\nimport * as SelectionPopup from \"@point_of_sale/../tests/tours/helpers/SelectionPopupTourMethods\";\nimport * as NumberPopup from \"@point_of_sale/../tests/tours/helpers/NumberPopupTourMethods\";\n\nexport function clickLoginButton() {\n    return [\n        {\n            content: \"click login button\",\n            trigger: \".login-overlay .login-button.select-cashier\",\n        },\n    ];\n}\nexport function clickLockButton() {\n    return [\n        {\n            content: \"click lock button\",\n            trigger: \".lock-button\",\n        },\n    ];\n}\nexport function clickCashierName() {\n    return [\n        {\n            content: \"click cashier name\",\n            trigger: \".oe_status .username\",\n        },\n    ];\n}\nexport function loginScreenIsShown() {\n    return [\n        {\n            content: \"login screen is shown\",\n            trigger: \".login-overlay .screen-login .login-body\",\n            run: () => {},\n        },\n    ];\n}\nexport function cashierNameIs(name) {\n    return [\n        {\n            content: `logged cashier is '${name}'`,\n            trigger: `.pos .oe_status .username:contains(\"${name}\")`,\n            run: () => {},\n        },\n    ];\n}\nexport function login(name, pin) {\n    const res = clickLoginButton();\n    res.push(...SelectionPopup.clickItem(name));\n    if (pin) {\n        res.push(...NumberPopup.pressNumpad(pin.split(\"\").join(\" \")));\n        res.push(...NumberPopup.inputShownIs(\"\u2022\u2022\u2022\u2022\"));\n        res.push(...NumberPopup.clickConfirm());\n    }\n    return res;\n}\n\nexport function refreshPage() {\n    return [\n        {\n            trigger: \"body\",\n            run: () => {\n                window.location.reload();\n            },\n        },\n    ];\n}\n", "/** @odoo-module */\n\nimport * as ProductScreen from \"@point_of_sale/../tests/tours/helpers/ProductScreenTourMethods\";\nimport * as PaymentScreen from \"@point_of_sale/../tests/tours/helpers/PaymentScreenTourMethods\";\nimport * as OnlinePaymentPopup from \"@pos_online_payment/../tests/tours/helpers/OnlinePaymentPopupTourMethods\";\nimport * as ReceiptScreen from \"@point_of_sale/../tests/tours/helpers/ReceiptScreenTourMethods\";\nimport * as ErrorPopup from \"@point_of_sale/../tests/tours/helpers/ErrorPopupTourMethods\";\nimport { registry } from \"@web/core/registry\";\n\nregistry.category(\"web_tour.tours\").add(\"OnlinePaymentLocalFakePaidDataTour\", {\n    test: true,\n    url: \"/pos/ui\",\n    steps: () =>\n        [\n            ProductScreen.confirmOpeningPopup(),\n            ProductScreen.addOrderline(\"Letter Tray\", \"10\"),\n            ProductScreen.selectedOrderlineHas(\"Letter Tray\", \"10.0\"),\n            ProductScreen.clickPayButton(),\n            PaymentScreen.totalIs(\"48.0\"),\n            PaymentScreen.emptyPaymentlines(\"48.0\"),\n\n            PaymentScreen.clickPaymentMethod(\"Online payment\"),\n            PaymentScreen.enterPaymentLineAmount(\"Online payment\", \"48\"),\n            PaymentScreen.selectedPaymentlineHas(\"Online payment\", \"48.0\"),\n            PaymentScreen.remainingIs(\"0.0\"),\n            PaymentScreen.changeIs(\"0.0\"),\n            PaymentScreen.validateButtonIsHighlighted(true),\n            PaymentScreen.clickValidate(),\n            OnlinePaymentPopup.isShown(),\n            OnlinePaymentPopup.amountIs(\"48.0\"),\n            OnlinePaymentPopup.fakeOnlinePaymentPaidData(),\n            OnlinePaymentPopup.isNotShown(),\n            ReceiptScreen.isShown(),\n            ReceiptScreen.receiptIsThere(),\n        ].flat(),\n});\n\nregistry.category(\"web_tour.tours\").add(\"OnlinePaymentErrorsTour\", {\n    test: true,\n    url: \"/pos/ui\",\n    steps: () =>\n        [\n            ProductScreen.confirmOpeningPopup(),\n            ProductScreen.addOrderline(\"Letter Tray\", \"10\"),\n            ProductScreen.selectedOrderlineHas(\"Letter Tray\", \"10.0\"),\n            ProductScreen.clickPayButton(),\n            PaymentScreen.totalIs(\"48.0\"),\n            PaymentScreen.emptyPaymentlines(\"48.0\"),\n\n            PaymentScreen.clickPaymentMethod(\"Online payment\"),\n            PaymentScreen.enterPaymentLineAmount(\"Online payment\", \"47\"),\n            PaymentScreen.selectedPaymentlineHas(\"Online payment\", \"47.0\"),\n            PaymentScreen.remainingIs(\"1.0\"),\n            PaymentScreen.changeIs(\"0.0\"),\n            PaymentScreen.validateButtonIsHighlighted(false),\n            PaymentScreen.clickPaymentMethod(\"Cash\"),\n            PaymentScreen.enterPaymentLineAmount(\"Cash\", \"2\"),\n            PaymentScreen.selectedPaymentlineHas(\"Cash\", \"2.0\"),\n            PaymentScreen.remainingIs(\"0.0\"),\n            PaymentScreen.changeIs(\"1.0\"),\n            PaymentScreen.validateButtonIsHighlighted(true),\n            PaymentScreen.clickValidate(),\n            ErrorPopup.isShown(),\n            ErrorPopup.clickConfirm(),\n            PaymentScreen.clickPaymentline(\"Online payment\", \"47.0\"),\n            PaymentScreen.clickPaymentlineDelButton(\"Online payment\", \"47.0\"),\n            PaymentScreen.clickPaymentMethod(\"Online payment\"),\n            PaymentScreen.selectedPaymentlineHas(\"Online payment\", \"46.0\"),\n            PaymentScreen.clickPaymentMethod(\"Online payment\"),\n            PaymentScreen.selectedPaymentlineHas(\"Online payment\", \"0.0\"),\n            PaymentScreen.remainingIs(\"0.0\"),\n            PaymentScreen.changeIs(\"0.0\"),\n            PaymentScreen.validateButtonIsHighlighted(true),\n            PaymentScreen.clickValidate(),\n            ErrorPopup.isShown(),\n            ErrorPopup.clickConfirm(),\n            PaymentScreen.clickPaymentline(\"Online payment\", \"0.0\"),\n            PaymentScreen.clickPaymentlineDelButton(\"Online payment\", \"0.0\"),\n            PaymentScreen.clickPaymentline(\"Cash\", \"2.0\"),\n            PaymentScreen.enterPaymentLineAmount(\"Cash\", \"3\"),\n            PaymentScreen.selectedPaymentlineHas(\"Cash\", \"3.0\"),\n            PaymentScreen.clickPaymentMethod(\"Online payment\"),\n            PaymentScreen.selectedPaymentlineHas(\"Online payment\", \"-1.0\"),\n            PaymentScreen.remainingIs(\"0.0\"),\n            PaymentScreen.changeIs(\"0.0\"),\n            PaymentScreen.validateButtonIsHighlighted(true),\n            PaymentScreen.clickValidate(),\n            ErrorPopup.isShown(),\n            ErrorPopup.clickConfirm(),\n        ].flat(),\n});\n", "/** @odoo-module */\n\nexport function clickCancel() {\n    return [\n        {\n            content: \"click cancel button\",\n            trigger: \".online-payment-popup .footer .cancel\",\n        },\n    ];\n}\nexport function fakeOnlinePaymentPaidData() {\n    return [\n        {\n            content: \"fake online payment paid data\",\n            trigger: \".online-payment-popup\",\n            run: () => {\n                const currentOrder = odoo.__WOWL_DEBUG__.root.env.services.pos.get_order();\n\n                const fakePaidOrder = currentOrder.export_as_JSON();\n                fakePaidOrder.id = currentOrder.server_id;\n\n                currentOrder.process_online_payments_data_from_server({\n                    id: currentOrder.server_id,\n                    paid_order: fakePaidOrder,\n                });\n            },\n        },\n    ];\n}\n\nexport function isShown() {\n    return [\n        {\n            content: \"online payment popup is shown\",\n            trigger: \".modal-dialog .online-payment-popup\",\n            isCheck: true,\n        },\n    ];\n}\nexport function isNotShown() {\n    return [\n        {\n            content: \"online payment popup is not shown\",\n            trigger: \"body:not(:has(.online-payment-popup))\",\n            isCheck: true,\n        },\n    ];\n}\n\n/**\n * Check if the displayed amount to pay is the provided amount.\n * @param {String} amount\n */\nexport function amountIs(amount) {\n    return [\n        {\n            content: `displayed amount is ${amount}`,\n            trigger: `.online-payment-popup .body .info .amount:contains(\"${amount}\")`,\n            isCheck: true,\n        },\n    ];\n}\n", "window.__odooIgnoreMissingDependencies = false;\n"], "file": "/web/assets/2e0377a/web.__assets_tests_call__.js", "sourceRoot": "../../../"}